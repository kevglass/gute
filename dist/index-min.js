/*! For license information please see index-min.js.LICENSE.txt */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.gute=e():t.gute=e()}(self,()=>(()=>{var t={94:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Step=void 0;e.Step=function(t,e){this.x=t,this.y=e}},134:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.MapWorld=void 0;e.MapWorld=function(){this.levels={},this.gridSize=0,this.tilesetScanline=0,this.tilesetSize=0,this.loaded=!1}},138:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.BitmapImpl=void 0;var r=i(870),n=function(){function t(t,e,i){void 0===i&&(i=void 0);var n=this;this.width=0,this.height=0,this.loaded=!1,this.name=t,this.image=new Image,this.image.onerror=function(){r.GuteLog.log("Error loading: "+t)},this.image.onload=function(){n.width=n.image.width,n.height=n.image.height,i?i.adjustImage(n.image).then(function(t){n.image=t,n.loaded=!0}):n.loaded=!0},e?e.then(function(e){n.image.src="data:"+t.substring(t.length-3)+";base64,"+e}):this.image.src=t}return t.prototype.draw=function(t,e,i){t.ctx.drawImage(this.image,e,i)},t.prototype.drawScaled=function(t,e,i,r,n){t.ctx.drawImage(this.image,e,i,r,n)},t.prototype.initOnFirstClick=function(){},t}();e.BitmapImpl=n},154:(t,e,i)=>{"use strict";function r(t){let e=0,i=0;for(const r of t)e+=r.w*r.h,i=Math.max(i,r.w);t.sort((t,e)=>e.h-t.h);const r=[{x:0,y:0,w:Math.max(Math.ceil(Math.sqrt(e/.95)),i),h:1/0}];let n=0,s=0;for(const e of t)for(let t=r.length-1;t>=0;t--){const i=r[t];if(!(e.w>i.w||e.h>i.h)){if(e.x=i.x,e.y=i.y,s=Math.max(s,e.y+e.h),n=Math.max(n,e.x+e.w),e.w===i.w&&e.h===i.h){const e=r.pop();t<r.length&&(r[t]=e)}else e.h===i.h?(i.x+=e.w,i.w-=e.w):e.w===i.w?(i.y+=e.h,i.h-=e.h):(r.push({x:i.x+e.w,y:i.y,w:i.w-e.w,h:e.h}),i.y+=e.h,i.h-=e.h);break}}return{w:n,h:s,fill:e/(n*s)||0}}i.r(e),i.d(e,{default:()=>r})},156:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.SoundEasing=e.SoundScape=e.MapEntity=e.MapLayer=e.MapLevel=e.MapWorld=e.LDTKWorld=e.Step=e.Path=e.AStarPathFinder=e.Keys=e.GuteLog=e.getMaxTextureSize=e.BLUE=e.RED=e.GREEN=e.BLACK=e.WHITE=e.Renderer=e.setPrescaleTilesets=e.setSoundOn=e.setMusicOn=e.isSoundOn=e.isMusicOn=e.startGame=void 0;var r=i(717);Object.defineProperty(e,"startGame",{enumerable:!0,get:function(){return r.startGame}}),Object.defineProperty(e,"isMusicOn",{enumerable:!0,get:function(){return r.isMusicOn}}),Object.defineProperty(e,"isSoundOn",{enumerable:!0,get:function(){return r.isSoundOn}}),Object.defineProperty(e,"setMusicOn",{enumerable:!0,get:function(){return r.setMusicOn}}),Object.defineProperty(e,"setSoundOn",{enumerable:!0,get:function(){return r.setSoundOn}}),Object.defineProperty(e,"setPrescaleTilesets",{enumerable:!0,get:function(){return r.setPrescaleTilesets}}),Object.defineProperty(e,"Renderer",{enumerable:!0,get:function(){return r.Renderer}});var n=i(795);Object.defineProperty(e,"WHITE",{enumerable:!0,get:function(){return n.WHITE}}),Object.defineProperty(e,"BLACK",{enumerable:!0,get:function(){return n.BLACK}}),Object.defineProperty(e,"GREEN",{enumerable:!0,get:function(){return n.GREEN}}),Object.defineProperty(e,"RED",{enumerable:!0,get:function(){return n.RED}}),Object.defineProperty(e,"BLUE",{enumerable:!0,get:function(){return n.BLUE}});var s=i(864);Object.defineProperty(e,"getMaxTextureSize",{enumerable:!0,get:function(){return s.getMaxTextureSize}});var a=i(870);Object.defineProperty(e,"GuteLog",{enumerable:!0,get:function(){return a.GuteLog}});var o=i(526);Object.defineProperty(e,"Keys",{enumerable:!0,get:function(){return o.Keys}});var h=i(238);Object.defineProperty(e,"AStarPathFinder",{enumerable:!0,get:function(){return h.AStarPathFinder}});var l=i(463);Object.defineProperty(e,"Path",{enumerable:!0,get:function(){return l.Path}});var u=i(94);Object.defineProperty(e,"Step",{enumerable:!0,get:function(){return u.Step}});var c=i(741);Object.defineProperty(e,"LDTKWorld",{enumerable:!0,get:function(){return c.LDTKWorld}});var d=i(134);Object.defineProperty(e,"MapWorld",{enumerable:!0,get:function(){return d.MapWorld}});var f=i(544);Object.defineProperty(e,"MapLevel",{enumerable:!0,get:function(){return f.MapLevel}});var p=i(971);Object.defineProperty(e,"MapLayer",{enumerable:!0,get:function(){return p.MapLayer}});var g=i(343);Object.defineProperty(e,"MapEntity",{enumerable:!0,get:function(){return g.MapEntity}});var m=i(905);Object.defineProperty(e,"SoundScape",{enumerable:!0,get:function(){return m.SoundScape}}),Object.defineProperty(e,"SoundEasing",{enumerable:!0,get:function(){return m.SoundEasing}})},238:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.AStarPathFinder=void 0;var r=i(688),n=i(463),s=function(){function t(t){this.objectPool=[],this.openList=[],this.parentList=[],this.open=[],this.closed=[],this.pathFindCounter=1,this.setMap(t)}return t.prototype.setMap=function(t){this.width=t.getMapWidth(),this.height=t.getMapHeight(),this.map=t,this.open||(this.open=new Array),this.closed||(this.closed=new Array);for(var e=0;e<this.width*this.height;e++){var i=this.open[e],r=this.closed[e];if(!i){this.open[e]=i=new Array;for(var n=0;n<5;n++)i.push(0)}if(!r)for(this.closed[e]=r=new Array,n=0;n<5;n++)r.push(0);for(n=0;n<5;n++)i[n]=0,r[n]=0}},t.prototype.clear=function(){for(var t=0,e=this.openList;t<e.length;t++){var i=e[t];this.objectPool.push(i)}for(var r=0,n=this.parentList;r<n.length;r++)i=n[r],this.objectPool.push(i);this.parentList=[],this.openList=[],this.pathFindCounter++},t.prototype.generatePath=function(t){for(var e=t,i=new n.Path;null!=e;)i.add(e.x,e.y),e=e.parent;return i},t.prototype.blocked=function(t,e,i,r){return!this.map.locationDiscovered(i,r)||this.map.blocked(this.mover,null,t,e,i,r,this.atTarget(i,r))},t.prototype.atTarget=function(t,e){for(var i=0;i<this.tx.length;i++){var r=this.tx[i],n=this.ty[i];if(r>=t&&r<t+this.mover.getTilesWidth()&&n>=e&&n<e+this.mover.getTilesHeight())return!0}return!1},t.prototype.findPath=function(t,e,i,r,n,s){e=Math.floor(e),i=Math.floor(i),this.max=s,this.mover=t,this.tx=[],this.ty=[],this.cx=e+r/2,this.cy=i+n/2;for(var a=0;a<r;a++)this.tx.push(e+a),this.ty.push(i),n>1&&(this.tx.push(e+a),this.ty.push(i+n-1));if(n>2)for(a=1;a<n-1;a++)this.tx.push(e),this.ty.push(i+a),r>1&&(this.tx.push(e+r-1),this.ty.push(i+a));if(0===this.tx.length)return null;for(this.clear(),this.addLocation(null,Math.floor(t.getTileMapX()),Math.floor(t.getTileMapY()));this.openList.length>0;){var o=this.openList[0];if(this.openList.splice(0,1),this.atTarget(o.x,o.y))return this.generatePath(o);this.addLocation(o,o.x+1,o.y),this.addLocation(o,o.x-1,o.y),this.addLocation(o,o.x,o.y+1),this.addLocation(o,o.x,o.y-1),this.parentList.push(o)}return null},t.prototype.addLocation=function(e,i,r){var n=i=Math.floor(i),s=r=Math.floor(r),a=t.NONE;if(null!=e&&(n=e.x,(s=e.y)+1==r&&(a=t.NORTH_TO_SOUTH),s-1==r&&(a=t.SOUTH_TO_NORTH),n+1==i&&(a=t.WEST_TO_EAST),n-1==i&&(a=t.EAST_TO_WEST)),this.map.validLocation(i,r)&&this.open[i+r*this.width][a]!=this.pathFindCounter&&this.closed[i+r*this.width][a]!=this.pathFindCounter)if(null!=e&&e.depth>this.max)this.closed[i+r*this.width][a]=this.pathFindCounter;else if(this.blocked(n,s,i,r))this.closed[i+r*this.width][a]=this.pathFindCounter;else{this.open[i+r*this.width][a]=this.pathFindCounter;var o=Math.abs(this.cx-i),h=Math.abs(this.cy-r),l=this.createMapNode(i,r,e,o+h),u=t.binarySearch(this.openList,l.h);this.openList.splice(u,0,l)}},t.binarySearch=function(t,e){for(var i=-1,r=t.length;1+i<r;){var n=i+(r-i>>1);t[n].h>e?r=n:i=n}return r},t.prototype.createMapNode=function(t,e,i,n){if(0==this.objectPool.length){var s=new r.MapNode;this.objectPool.push(s)}var a=this.objectPool[0];return this.objectPool.splice(0,1),a.x=t,a.y=e,a.parent=i,a.depth=null!=i?i.depth+1:0,a.h=n+a.depth,a},t.NORTH_TO_SOUTH=0,t.EAST_TO_WEST=1,t.SOUTH_TO_NORTH=2,t.WEST_TO_EAST=3,t.NONE=4,t}();e.AStarPathFinder=s},343:function(t,e){"use strict";var i=this&&this.__assign||function(){return i=Object.assign||function(t){for(var e,i=1,r=arguments.length;i<r;i++)for(var n in e=arguments[i])Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t},i.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0}),e.MapEntity=void 0;var r=function(){function t(t,e,i,r,n,s){this.fields={},this.level=t,this.x=e,this.y=i,this.width=r,this.height=n,this.type=s}return t.prototype.copy=function(e){var r=new t(e,this.x,this.y,this.width,this.height,this.type);return r.fields=i({},this.fields),r.id=this.id,r},t}();e.MapEntity=r},463:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Path=void 0;var r=i(870),n=i(94),s=function(){function t(){this.steps=new Array}return t.prototype.add=function(t,e){this.steps.splice(0,0,new n.Step(t,e))},t.prototype.getLastStep=function(){return this.steps[this.steps.length-1]},t.prototype.pop=function(){var t=this.steps[0];return this.steps.splice(0,1),t},t.prototype.copy=function(){for(var e=new t,i=0,s=this.steps;i<s.length;i++){var a=s[i];e.steps.push(new n.Step(a.x,a.y))}return 0===e.steps.length&&r.GuteLog.log("Created copy of path with zero steps: "),e},t}();e.Path=s},508:(t,e)=>{"use strict";function i(t){var e=parseInt(t,16);return{r:e>>16&255,g:e>>8&255,b:255&e}}function r(t,e){var i=n(t),r=n(e),s=i[0]-r[0],a=i[1]-r[1],o=i[2]-r[2],h=Math.sqrt(i[1]*i[1]+i[2]*i[2]),l=h-Math.sqrt(r[1]*r[1]+r[2]*r[2]),u=a*a+o*o-l*l,c=s/1,d=l/(1+.045*h),f=(u=u<0?0:Math.sqrt(u))/(1+.015*h),p=c*c+d*d+f*f;return p<0?0:Math.sqrt(p)}function n(t){var e,i,r,n=t.r/255,s=t.g/255,a=t.b/255;return i=(.2126*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)+.7152*(s=s>.04045?Math.pow((s+.055)/1.055,2.4):s/12.92)+.0722*(a=a>.04045?Math.pow((a+.055)/1.055,2.4):a/12.92))/1,r=(.0193*n+.1192*s+.9505*a)/1.08883,e=(e=(.4124*n+.3576*s+.1805*a)/.95047)>.008856?Math.pow(e,1/3):7.787*e+16/116,[116*(i=i>.008856?Math.pow(i,1/3):7.787*i+16/116)-16,500*(e-i),200*(i-(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116))]}Object.defineProperty(e,"__esModule",{value:!0}),e.Palette=void 0;var s=function(){function t(t){this.cols=[],this.mapping={};for(var e=0,r=t.split("\n");e<r.length;e++){var n=r[e];this.cols.push(i(n))}}return t.prototype.findBestMatch=function(t,e,i){for(var n={r:t,g:e,b:i},s=this.cols[0],a=1e3,o=0,h=this.cols;o<h.length;o++){var l=h[o],u=r(l,n);u<a&&(a=u,s=l)}return s},t.prototype.adjustImage=function(t){var e=this;return new Promise(function(i,r){var n=document.createElement("canvas");n.width=t.width,n.height=t.height;var s=n.getContext("2d");if(s){s.drawImage(t,0,0);for(var a=s.getImageData(0,0,t.width,t.height),o=0;o<a.data.length;o+=4){a.data[o];var h=a.data[o],l=a.data[o+1],u=a.data[o+2],c=h|65280&l<<8|16711680&u<<16,d=e.mapping[c];d||(d=e.findBestMatch(h,l,u),e.mapping[c]=d),a.data[o]=d.r,a.data[o+1]=d.g,a.data[o+2]=d.b}s.putImageData(a,0,0);var f=new Image;f.onload=function(){i(f)},f.src=n.toDataURL()}else r("Failure to create context")})},t}();e.Palette=s},526:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Keys=void 0;var i=function(){function t(){}return t.ESCAPE_KEY="Escape",t.ENTER_KEY="Enter",t.LEFT_KEY="ArrowLeft",t.RIGHT_KEY="ArrowRight",t.UP_KEY="ArrowUp",t.DOWN_KEY="ArrowDown",t.SPACE_KEY=" ",t.S_KEY="s",t.M_KEY="m",t.A_KEY="a",t.W_KEY="w",t.D_KEY="d",t.CONTROL_KEY="Control",t.META_KEY="Meta",t.ALT_KEY="Alt",t.TAB_KEY="Tab",t}();e.Keys=i},544:function(t,e,i){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(t){for(var e,i=1,r=arguments.length;i<r;i++)for(var n in e=arguments[i])Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t},r.apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0}),e.MapLevel=void 0;var n=i(134),s=function(){function t(t,e){this.layers=[],this.layerByName={},this.entities=[],this.fields={},this.worldX=0,this.worldY=0,this.worldDepth=0,this.world=t,this.id=e}return t.prototype.entitiesOfType=function(t){return this.entities.filter(function(e){return e.type===t})},t.prototype.firstEntityOfType=function(t){return this.entities.find(function(e){return e.type===t})},t.prototype.copy=function(e){var i=new n.MapWorld;i.gridSize=this.world.gridSize,i.loaded=this.world.loaded,i.tilesetScanline=this.world.tilesetScanline,i.tilesetSize=this.world.tilesetSize;var s=new t(i,e);s.width=this.width,s.height=this.height,s.worldX=this.worldX,s.worldY=this.worldY,s.worldDepth=this.worldDepth,s.fields=r({},this.fields);for(var a=0,o=this.layers;a<o.length;a++){var h=o[a].copy(s);s.layers.push(h),s.layerByName[h.name]=h}for(var l=0,u=this.entities;l<u.length;l++)h=u[l].copy(s),s.entities.push(h);return s},t}();e.MapLevel=s},549:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TilesetImpl=void 0;var r=i(156),n=i(717),s=i(772),a=function(){function t(t,e,i,r,n,s){this.name="tile",this.cached={},this.image=t,this.width=r,this.height=n,this.x=e,this.y=i,this.scale=s,this.loaded=!0}return t.prototype.draw=function(t,e,i){var r=t.ctx;if((0,n.shouldPrescaleTilesets)()||!(0,n.shouldUseXbr)()||2!==this.scale&&3!==this.scale)r.drawImage(this.image,this.x,this.y,this.width-.1,this.height-.1,e,i,this.width*this.scale,this.height*this.scale);else{if(!this.cached[this.scale]){this.cached[this.scale]=document.createElement("canvas"),this.cached[this.scale].width=this.width,this.cached[this.scale].height=this.height;var a=this.cached[this.scale].getContext("2d");a.drawImage(this.image,this.x,this.y,this.width,this.height,0,0,this.width,this.height);var o=a.getImageData(0,0,this.width,this.height),h=new Uint32Array(o.data.buffer),l=2===this.scale?(0,s.xbr2x)(h,this.width,this.height):(0,s.xbr3x)(h,this.width,this.height),u=this.width*this.scale,c=this.height*this.scale;this.cached[this.scale].width=u,this.cached[this.scale].height=c;var d=new ImageData(new Uint8ClampedArray(l.buffer),this.cached[this.scale].width,this.cached[this.scale].height);a.putImageData(d,0,0)}r.drawImage(this.cached[this.scale],e,i)}},t.prototype.drawScaled=function(t,e,i,r,a){var o=t.ctx,h=Math.min(Math.floor(r/this.width),Math.floor(a/this.height));if((0,n.shouldPrescaleTilesets)()||!(0,n.shouldUseXbr)()||2!==h&&3!==h)o.drawImage(this.image,this.x,this.y,this.width,this.height,e,i,r,a);else{if(!this.cached[h]){this.cached[h]=document.createElement("canvas"),this.cached[h].width=this.width,this.cached[h].height=this.height;var l=this.cached[h].getContext("2d");l.drawImage(this.image,this.x,this.y,this.width,this.height,0,0,this.width,this.height);var u=l.getImageData(0,0,this.width,this.height),c=new Uint32Array(u.data.buffer),d=2===h?(0,s.xbr2x)(c,this.width,this.height):(0,s.xbr3x)(c,this.width,this.height),f=this.width*h,p=this.height*h;this.cached[h].width=f,this.cached[h].height=p;var g=new ImageData(new Uint8ClampedArray(d.buffer),this.cached[h].width,this.cached[h].height);l.putImageData(g,0,0)}o.drawImage(this.cached[h],e,i,r,a)}},t.prototype.initOnFirstClick=function(){},t}(),o=function(){function t(t,e,i,o,h,l){void 0===h&&(h=1),void 0===l&&(l=void 0);var u=this;this.loaded=!1,this.bitmaps=[],this.scanline=0,this.tileCount=0,this.tints={},this.tintTiles={},this.onLoaded=function(){},this.tileWidth=this.originalTileWidth=i,this.tileHeight=this.originalTileHeight=o,this.scale=h,this.name=t,this.image=new Image,this.image.onerror=function(){r.GuteLog.log("Error loading: "+t)},this.image.onload=function(){if((0,n.shouldPrescaleTilesets)()&&1!==h){var t=document.createElement("canvas");if((0,n.shouldUseXbr)()){(c=t.getContext("2d")).drawImage(u.image,0,0);var e=c.getImageData(0,0,u.image.width,u.image.height),i=new Uint32Array(e.data.buffer),r=2===h?(0,s.xbr2x)(i,u.image.width,u.image.height):(0,s.xbr3x)(i,u.image.width,u.image.height);t.width=u.image.width*h,t.height=u.image.height*h;var o=new ImageData(new Uint8ClampedArray(r.buffer),t.width,t.height);c.putImageData(o,0,0)}else{var c;t.width=u.image.width*h,t.height=u.image.height*h,(c=t.getContext("2d")).imageSmoothingEnabled=!1,c.webkitImageSmoothingEnabled=!1,null==c||c.drawImage(u.image,0,0,t.width,t.height)}u.image=t,u.tileWidth*=h,u.tileHeight*=h,u.originalTileWidth*=h,u.originalTileHeight*=h,u.scale=1,h=1}u.scanline=Math.floor(u.image.width/u.tileWidth);var d=Math.floor(u.image.height/u.tileHeight);if(u.tileCount=d*u.scanline,l)l.adjustImage(u.image).then(function(t){u.image=t;for(var e=0;e<d;e++)for(var i=0;i<u.scanline;i++)u.bitmaps.push(new a(u.image,i*u.tileWidth,e*u.tileHeight,u.tileWidth,u.tileHeight,h));u.tileWidth*=h,u.tileHeight*=h,u.onLoaded(),u.loaded=!0});else{for(var f=0;f<d;f++)for(var p=0;p<u.scanline;p++)u.bitmaps.push(new a(u.image,p*u.tileWidth,f*u.tileHeight,u.tileWidth,u.tileHeight,h));u.tileWidth*=h,u.tileHeight*=h,u.onLoaded(),u.loaded=!0}},e?e.then(function(t){var e=window.URL||window.webkitURL;u.image.src=e.createObjectURL(t)}):this.image.src=t}return t.prototype.getTilesAcross=function(){return this.scanline},t.prototype.getTileWidth=function(){return this.tileWidth},t.prototype.getTileHeight=function(){return this.tileHeight},t.prototype.getTileCount=function(){return this.tileCount},t.prototype.initOnFirstClick=function(){},t.prototype.getTile=function(t){return this.bitmaps[t]},t.prototype.getShadedTile=function(t,e,i){var r=this.tintTiles[e];r||(r=this.tintTiles[e]=[]);var n=r[t];if(!n){var s=t%this.scanline,o=Math.floor(t/this.scanline),h=this.tints[e];if(!h){var l=document.createElement("canvas");l.width=this.image.width,l.height=this.image.height;var u=l.getContext("2d");if(u){u.drawImage(this.image,0,0);for(var c=u.getImageData(0,0,l.width,l.height),d=0;d<c.data.length;d+=4)c.data[d]*=i,c.data[d+1]*=i,c.data[d+2]*=i;u.putImageData(c,0,0)}(h=new Image).src=l.toDataURL(),this.tints[e]=h}n=r[t]=new a(h,s*this.originalTileWidth,o*this.originalTileHeight,this.originalTileWidth,this.originalTileHeight,this.scale)}return n},t.prototype.getTintedTile=function(t,e,i){var r=this.tintTiles[e];r||(r=this.tintTiles[e]=[]);var n=r[t];if(!n){var s=t%this.scanline,o=Math.floor(t/this.scanline),h=this.tints[e];if(!h){var l=document.createElement("canvas");l.width=this.image.width,l.height=this.image.height;var u=l.getContext("2d");if(u){u.drawImage(this.image,0,0);for(var c=u.getImageData(0,0,l.width,l.height),d=0;d<c.data.length;d+=4){var f=(c.data[d]+c.data[d+1]+c.data[d+2])/3;c.data[d]=Math.floor(f*i[0]),c.data[d+1]=Math.floor(f*i[1]),c.data[d+2]=Math.floor(f*i[2])}u.putImageData(c,0,0)}(h=new Image).src=l.toDataURL(),this.tints[e]=h}n=r[t]=new a(h,s*this.originalTileWidth,o*this.originalTileHeight,this.originalTileWidth,this.originalTileHeight,this.scale)}return n},t.prototype.modify=function(t){var e=document.createElement("canvas");e.width=this.image.width,e.height=this.image.height;var i=e.getContext("2d");if(i){i.drawImage(this.image,0,0);var r=i.getImageData(0,0,e.width,e.height);t(r),i.putImageData(r,0,0)}this.image=new Image,this.image.src=e.toDataURL();for(var n=0,s=this.bitmaps;n<s.length;n++)s[n].image=this.image;return this},t.prototype.getBlockColorTile=function(t,e,i){var r=this.tintTiles[e];r||(r=this.tintTiles[e]=[]);var n=r[t];if(!n){var s=t%this.scanline,o=Math.floor(t/this.scanline),h=this.tints[e];if(!h){var l=document.createElement("canvas");l.width=this.image.width,l.height=this.image.height;var u=l.getContext("2d");if(u){u.drawImage(this.image,0,0);for(var c=u.getImageData(0,0,l.width,l.height),d=0;d<c.data.length;d+=4)c.data[d]=Math.floor(255*i[0]),c.data[d+1]=Math.floor(255*i[1]),c.data[d+2]=Math.floor(255*i[2]),c.data[d+3]=Math.floor(c.data[d+3]*i[3]);u.putImageData(c,0,0)}(h=new Image).src=l.toDataURL(),this.tints[e]=h}n=r[t]=new a(h,s*this.originalTileWidth,o*this.originalTileHeight,this.originalTileWidth,this.originalTileHeight,this.scale)}return n},t}();e.TilesetImpl=o},608:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.GraphicsImpl=void 0;var r=i(652),n="undefined"!=typeof InstallTrigger,s=function(){function t(t,e){this.canvas=t,this.ctx=e}return t.prototype.release=function(){},t.prototype.needsRefresh=function(){return!1},t.prototype.getWidth=function(){return this.canvas.width},t.prototype.getHeight=function(){return this.canvas.height},t.prototype.setDimension=function(t,e){this.canvas.width=t,this.canvas.height=e},t}(),a=function(){function t(t){this.name="copy",this.canvas=t,this.width=t.width,this.height=t.height,this.loaded=!0}return t.prototype.draw=function(t,e,i){t.ctx.drawImage(this.canvas,e,i)},t.prototype.drawScaled=function(t,e,i,r,n){t.ctx.drawImage(this.canvas,e,i,r,n)},t.prototype.getDrawable=function(){return this.canvas},t.prototype.initOnFirstClick=function(){},t}(),o=function(){function t(){this.fontSize=20,this.offscreen=null,this.canvas=document.getElementById("gamecanvas"),this.ctx=this.canvas.getContext("2d",{alpha:!1}),this.mainCtx=this.ctx,this.ctx.webkitImageSmoothingEnabled=!1,this.ctx.imageSmoothingEnabled=!1,this.canvas.style.fontSmooth="never",this.canvas.style.webkitFontSmoothing="none",this.canvas.style.imageRendering=n?"crisp-edges":"pixelated",this.font=new r.FontImpl("font.ttf","GuteDefault"),this.font&&this.applyFont()}return t.prototype.resize=function(){},t.prototype.getError=function(){},t.prototype.renderStart=function(){},t.prototype.renderEnd=function(){},t.prototype.newResourceLoaded=function(){},t.prototype.initResourceOnLoaded=function(){},t.prototype.smooth=function(){this.ctx.webkitImageSmoothingEnabled=!0,this.ctx.imageSmoothingEnabled=!0,this.canvas.style.fontSmooth="initial",this.canvas.style.webkitFontSmoothing="initial",this.canvas.style.imageRendering="initial"},t.prototype.getTransform=function(){return this.ctx.getTransform()},t.prototype.clear=function(){this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height)},t.prototype.clip=function(t,e,i,r){var n=new Path2D;n.rect(t,e,i,r),this.ctx.clip(n)},t.prototype.createOffscreen=function(){var t=document.createElement("canvas");t.width=this.getWidth(),t.height=this.getHeight();var e=t.getContext("2d");if(e)return e.webkitImageSmoothingEnabled=!1,e.imageSmoothingEnabled=!1,t.style.fontSmooth="never",t.style.webkitFontSmoothing="none",new s(t,e);throw new Error("Unable to create offscreen canvas")},t.prototype.getOffscreen=function(){return this.offscreen},t.prototype.drawToOffscreen=function(t){t?(this.ctx=t.ctx,this.ctx.resetTransform()):this.ctx=this.mainCtx,this.offscreen=t},t.prototype.drawOffscreen=function(t){this.ctx.webkitImageSmoothingEnabled=!1,this.ctx.imageSmoothingEnabled=!1,this.ctx.drawImage(t.canvas,0,0)},t.prototype.drawScaledOffscreen=function(t,e,i,r,n){this.ctx.webkitImageSmoothingEnabled=!1,this.ctx.imageSmoothingEnabled=!1,this.ctx.drawImage(t.canvas,e,i,r,n)},t.prototype.drawScaledOffscreenSegment=function(t,e,i,r,n,s,a,o,h){this.ctx.webkitImageSmoothingEnabled=!1,this.ctx.imageSmoothingEnabled=!1,this.ctx.drawImage(t.canvas,e,i,r,n,s,a,o,h)},t.prototype.clearRect=function(t,e,i,r){this.ctx.clearRect(t,e,i,r)},t.prototype.fitScreen=function(t){var e=Math.max(document.documentElement.clientWidth,window.innerWidth||0),i=Math.max(document.documentElement.clientHeight,window.innerHeight||0),r=Math.floor(e/t)*t,n=Math.floor(i/t)*t,s=r/t,a=n/t;this.canvas.style.position="absolute",this.canvas.style.top="0px",this.canvas.style.left="0px",this.canvas.width=s,this.canvas.height=a,this.canvas.style.width=r+"px",this.canvas.style.height=n+"px"},t.prototype.setAlpha=function(t){this.ctx.globalAlpha=t},t.prototype.copy=function(){var t,e=document.createElement("canvas");return e.width=this.getWidth(),e.height=this.getHeight(),null===(t=e.getContext("2d"))||void 0===t||t.drawImage(this.canvas,0,0),new a(e)},t.prototype.getWidth=function(){return this.ctx.canvas.width},t.prototype.getHeight=function(){return this.ctx.canvas.height},t.prototype.push=function(){this.ctx.save()},t.prototype.pop=function(){this.ctx.restore()},t.prototype.translate=function(t,e){this.ctx.translate(t,e)},t.prototype.scale=function(t,e){this.ctx.scale(t,e)},t.prototype.applyFont=function(){this.font.apply(this.ctx,this.fontSize)},t.prototype.setFont=function(t){this.font=t,this.applyFont()},t.prototype.setFontSize=function(t){this.fontSize=t,this.applyFont()},t.prototype.getStringWidth=function(t){return this.ctx.measureText(t).width},t.prototype.drawString=function(t,e,i,r){this.ctx.fillStyle=r,this.ctx.fillText(i,t,e)},t.prototype.setComposite=function(t){this.ctx.globalCompositeOperation=t},t.prototype.drawCircle=function(t,e,i,r,n){this.ctx.strokeStyle=r,this.ctx.lineWidth=n,this.ctx.beginPath(),this.ctx.arc(t,e,i,0,2*Math.PI),this.ctx.stroke()},t.prototype.fillCircle=function(t,e,i,r){this.ctx.fillStyle=r,this.ctx.beginPath(),this.ctx.arc(t,e,i,0,2*Math.PI),this.ctx.fill()},t.prototype.fillRect=function(t,e,i,r,n){this.ctx.fillStyle=n,this.ctx.fillRect(t,e,i,r)},t.prototype.setLineDash=function(t){this.ctx.setLineDash(t)},t.prototype.drawLine=function(t,e,i,r,n,s){void 0===s&&(s=1),this.ctx.strokeStyle=n,this.ctx.lineWidth=s,this.ctx.moveTo(t,e),this.ctx.lineTo(i,r),this.ctx.stroke()},t.prototype.drawBitmap=function(t,e,i){i&&(this.ctx.imageSmoothingEnabled=!1,this.ctx.webkitImageSmoothingEnabled=!1,i.draw(this,t,e))},t.prototype.drawScaledBitmap=function(t,e,i,r,n){n&&(this.ctx.imageSmoothingEnabled=!1,this.ctx.webkitImageSmoothingEnabled=!1,n.drawScaled(this,t,e,i,r))},t}();e.GraphicsImpl=o},652:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.FontImpl=void 0;var i=function(){function t(t,e){this.name=e;var i=document.createElement("style");i.innerHTML="@font-face { font-family: "+e+"; src: url('"+t+"'); } body { font-family: "+e+"; }",document.head.appendChild(i)}return t.prototype.apply=function(t,e){t.font=e+"px "+this.name},t}();e.FontImpl=i},688:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.MapNode=void 0;e.MapNode=function(){}},710:(t,e,i)=>{t.exports=function t(e,i,r){function n(a,o){if(!i[a]){if(!e[a]){if(s)return s(a,!0);var h=new Error("Cannot find module '"+a+"'");throw h.code="MODULE_NOT_FOUND",h}var l=i[a]={exports:{}};e[a][0].call(l.exports,function(t){return n(e[a][1][t]||t)},l,l.exports,t,e,i,r)}return i[a].exports}for(var s=void 0,a=0;a<r.length;a++)n(r[a]);return n}({1:[function(t,e,i){"use strict";var r=t("./utils"),n=t("./support"),s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";i.encode=function(t){for(var e,i,n,a,o,h,l,u=[],c=0,d=t.length,f=d,p="string"!==r.getTypeOf(t);c<t.length;)f=d-c,n=p?(e=t[c++],i=c<d?t[c++]:0,c<d?t[c++]:0):(e=t.charCodeAt(c++),i=c<d?t.charCodeAt(c++):0,c<d?t.charCodeAt(c++):0),a=e>>2,o=(3&e)<<4|i>>4,h=1<f?(15&i)<<2|n>>6:64,l=2<f?63&n:64,u.push(s.charAt(a)+s.charAt(o)+s.charAt(h)+s.charAt(l));return u.join("")},i.decode=function(t){var e,i,r,a,o,h,l=0,u=0,c="data:";if(t.substr(0,5)===c)throw new Error("Invalid base64 input, it looks like a data url.");var d,f=3*(t=t.replace(/[^A-Za-z0-9+/=]/g,"")).length/4;if(t.charAt(t.length-1)===s.charAt(64)&&f--,t.charAt(t.length-2)===s.charAt(64)&&f--,f%1!=0)throw new Error("Invalid base64 input, bad content length.");for(d=n.uint8array?new Uint8Array(0|f):new Array(0|f);l<t.length;)e=s.indexOf(t.charAt(l++))<<2|(a=s.indexOf(t.charAt(l++)))>>4,i=(15&a)<<4|(o=s.indexOf(t.charAt(l++)))>>2,r=(3&o)<<6|(h=s.indexOf(t.charAt(l++))),d[u++]=e,64!==o&&(d[u++]=i),64!==h&&(d[u++]=r);return d}},{"./support":30,"./utils":32}],2:[function(t,e,i){"use strict";var r=t("./external"),n=t("./stream/DataWorker"),s=t("./stream/Crc32Probe"),a=t("./stream/DataLengthProbe");function o(t,e,i,r,n){this.compressedSize=t,this.uncompressedSize=e,this.crc32=i,this.compression=r,this.compressedContent=n}o.prototype={getContentWorker:function(){var t=new n(r.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a("data_length")),e=this;return t.on("end",function(){if(this.streamInfo.data_length!==e.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")}),t},getCompressedWorker:function(){return new n(r.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)}},o.createWorkerFrom=function(t,e,i){return t.pipe(new s).pipe(new a("uncompressedSize")).pipe(e.compressWorker(i)).pipe(new a("compressedSize")).withStreamInfo("compression",e)},e.exports=o},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(t,e,i){"use strict";var r=t("./stream/GenericWorker");i.STORE={magic:"\0\0",compressWorker:function(){return new r("STORE compression")},uncompressWorker:function(){return new r("STORE decompression")}},i.DEFLATE=t("./flate")},{"./flate":7,"./stream/GenericWorker":28}],4:[function(t,e,i){"use strict";var r=t("./utils"),n=function(){for(var t,e=[],i=0;i<256;i++){t=i;for(var r=0;r<8;r++)t=1&t?3988292384^t>>>1:t>>>1;e[i]=t}return e}();e.exports=function(t,e){return void 0!==t&&t.length?"string"!==r.getTypeOf(t)?function(t,e,i){var r=n,s=0+i;t^=-1;for(var a=0;a<s;a++)t=t>>>8^r[255&(t^e[a])];return-1^t}(0|e,t,t.length):function(t,e,i){var r=n,s=0+i;t^=-1;for(var a=0;a<s;a++)t=t>>>8^r[255&(t^e.charCodeAt(a))];return-1^t}(0|e,t,t.length):0}},{"./utils":32}],5:[function(t,e,i){"use strict";i.base64=!1,i.binary=!1,i.dir=!1,i.createFolders=!0,i.date=null,i.compression=null,i.compressionOptions=null,i.comment=null,i.unixPermissions=null,i.dosPermissions=null},{}],6:[function(t,e,i){"use strict";var r;r="undefined"!=typeof Promise?Promise:t("lie"),e.exports={Promise:r}},{lie:37}],7:[function(t,e,i){"use strict";var r="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Uint32Array,n=t("pako"),s=t("./utils"),a=t("./stream/GenericWorker"),o=r?"uint8array":"array";function h(t,e){a.call(this,"FlateWorker/"+t),this._pako=null,this._pakoAction=t,this._pakoOptions=e,this.meta={}}i.magic="\b\0",s.inherits(h,a),h.prototype.processChunk=function(t){this.meta=t.meta,null===this._pako&&this._createPako(),this._pako.push(s.transformTo(o,t.data),!1)},h.prototype.flush=function(){a.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},h.prototype.cleanUp=function(){a.prototype.cleanUp.call(this),this._pako=null},h.prototype._createPako=function(){this._pako=new n[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var t=this;this._pako.onData=function(e){t.push({data:e,meta:t.meta})}},i.compressWorker=function(t){return new h("Deflate",t)},i.uncompressWorker=function(){return new h("Inflate",{})}},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(t,e,i){"use strict";function r(t,e){var i,r="";for(i=0;i<e;i++)r+=String.fromCharCode(255&t),t>>>=8;return r}function n(t,e,i,n,a,u){var c,d,f=t.file,p=t.compression,g=u!==o.utf8encode,m=s.transformTo("string",u(f.name)),v=s.transformTo("string",o.utf8encode(f.name)),y=f.comment,_=s.transformTo("string",u(y)),w=s.transformTo("string",o.utf8encode(y)),b=v.length!==f.name.length,x=w.length!==y.length,S="",E="",C="",T=f.dir,k=f.date,A={crc32:0,compressedSize:0,uncompressedSize:0};e&&!i||(A.crc32=t.crc32,A.compressedSize=t.compressedSize,A.uncompressedSize=t.uncompressedSize);var O=0;e&&(O|=8),g||!b&&!x||(O|=2048);var R=0,I=0;T&&(R|=16),"UNIX"===a?(I=798,R|=function(t,e){var i=t;return t||(i=e?16893:33204),(65535&i)<<16}(f.unixPermissions,T)):(I=20,R|=function(t){return 63&(t||0)}(f.dosPermissions)),c=k.getUTCHours(),c<<=6,c|=k.getUTCMinutes(),c<<=5,c|=k.getUTCSeconds()/2,d=k.getUTCFullYear()-1980,d<<=4,d|=k.getUTCMonth()+1,d<<=5,d|=k.getUTCDate(),b&&(E=r(1,1)+r(h(m),4)+v,S+="up"+r(E.length,2)+E),x&&(C=r(1,1)+r(h(_),4)+w,S+="uc"+r(C.length,2)+C);var F="";return F+="\n\0",F+=r(O,2),F+=p.magic,F+=r(c,2),F+=r(d,2),F+=r(A.crc32,4),F+=r(A.compressedSize,4),F+=r(A.uncompressedSize,4),F+=r(m.length,2),F+=r(S.length,2),{fileRecord:l.LOCAL_FILE_HEADER+F+m+S,dirRecord:l.CENTRAL_FILE_HEADER+r(I,2)+F+r(_.length,2)+"\0\0\0\0"+r(R,4)+r(n,4)+m+S+_}}var s=t("../utils"),a=t("../stream/GenericWorker"),o=t("../utf8"),h=t("../crc32"),l=t("../signature");function u(t,e,i,r){a.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=e,this.zipPlatform=i,this.encodeFileName=r,this.streamFiles=t,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}s.inherits(u,a),u.prototype.push=function(t){var e=t.meta.percent||0,i=this.entriesCount,r=this._sources.length;this.accumulate?this.contentBuffer.push(t):(this.bytesWritten+=t.data.length,a.prototype.push.call(this,{data:t.data,meta:{currentFile:this.currentFile,percent:i?(e+100*(i-r-1))/i:100}}))},u.prototype.openedSource=function(t){this.currentSourceOffset=this.bytesWritten,this.currentFile=t.file.name;var e=this.streamFiles&&!t.file.dir;if(e){var i=n(t,e,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:i.fileRecord,meta:{percent:0}})}else this.accumulate=!0},u.prototype.closedSource=function(t){this.accumulate=!1;var e=this.streamFiles&&!t.file.dir,i=n(t,e,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(i.dirRecord),e)this.push({data:function(t){return l.DATA_DESCRIPTOR+r(t.crc32,4)+r(t.compressedSize,4)+r(t.uncompressedSize,4)}(t),meta:{percent:100}});else for(this.push({data:i.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},u.prototype.flush=function(){for(var t=this.bytesWritten,e=0;e<this.dirRecords.length;e++)this.push({data:this.dirRecords[e],meta:{percent:100}});var i=this.bytesWritten-t,n=function(t,e,i,n,a){var o=s.transformTo("string",a(n));return l.CENTRAL_DIRECTORY_END+"\0\0\0\0"+r(t,2)+r(t,2)+r(e,4)+r(i,4)+r(o.length,2)+o}(this.dirRecords.length,i,t,this.zipComment,this.encodeFileName);this.push({data:n,meta:{percent:100}})},u.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},u.prototype.registerPrevious=function(t){this._sources.push(t);var e=this;return t.on("data",function(t){e.processChunk(t)}),t.on("end",function(){e.closedSource(e.previous.streamInfo),e._sources.length?e.prepareNextSource():e.end()}),t.on("error",function(t){e.error(t)}),this},u.prototype.resume=function(){return!!a.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},u.prototype.error=function(t){var e=this._sources;if(!a.prototype.error.call(this,t))return!1;for(var i=0;i<e.length;i++)try{e[i].error(t)}catch(t){}return!0},u.prototype.lock=function(){a.prototype.lock.call(this);for(var t=this._sources,e=0;e<t.length;e++)t[e].lock()},e.exports=u},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(t,e,i){"use strict";var r=t("../compressions"),n=t("./ZipFileWorker");i.generateWorker=function(t,e,i){var s=new n(e.streamFiles,i,e.platform,e.encodeFileName),a=0;try{t.forEach(function(t,i){a++;var n=function(t,e){var i=t||e,n=r[i];if(!n)throw new Error(i+" is not a valid compression method !");return n}(i.options.compression,e.compression),o=i.options.compressionOptions||e.compressionOptions||{},h=i.dir,l=i.date;i._compressWorker(n,o).withStreamInfo("file",{name:t,dir:h,date:l,comment:i.comment||"",unixPermissions:i.unixPermissions,dosPermissions:i.dosPermissions}).pipe(s)}),s.entriesCount=a}catch(t){s.error(t)}return s}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(t,e,i){"use strict";function r(){if(!(this instanceof r))return new r;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files=Object.create(null),this.comment=null,this.root="",this.clone=function(){var t=new r;for(var e in this)"function"!=typeof this[e]&&(t[e]=this[e]);return t}}(r.prototype=t("./object")).loadAsync=t("./load"),r.support=t("./support"),r.defaults=t("./defaults"),r.version="3.10.1",r.loadAsync=function(t,e){return(new r).loadAsync(t,e)},r.external=t("./external"),e.exports=r},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(t,e,i){"use strict";var r=t("./utils"),n=t("./external"),s=t("./utf8"),a=t("./zipEntries"),o=t("./stream/Crc32Probe"),h=t("./nodejsUtils");function l(t){return new n.Promise(function(e,i){var r=t.decompressed.getContentWorker().pipe(new o);r.on("error",function(t){i(t)}).on("end",function(){r.streamInfo.crc32!==t.decompressed.crc32?i(new Error("Corrupted zip : CRC32 mismatch")):e()}).resume()})}e.exports=function(t,e){var i=this;return e=r.extend(e||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:s.utf8decode}),h.isNode&&h.isStream(t)?n.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):r.prepareContent("the loaded zip file",t,!0,e.optimizedBinaryString,e.base64).then(function(t){var i=new a(e);return i.load(t),i}).then(function(t){var i=[n.Promise.resolve(t)],r=t.files;if(e.checkCRC32)for(var s=0;s<r.length;s++)i.push(l(r[s]));return n.Promise.all(i)}).then(function(t){for(var n=t.shift(),s=n.files,a=0;a<s.length;a++){var o=s[a],h=o.fileNameStr,l=r.resolve(o.fileNameStr);i.file(l,o.decompressed,{binary:!0,optimizedBinaryString:!0,date:o.date,dir:o.dir,comment:o.fileCommentStr.length?o.fileCommentStr:null,unixPermissions:o.unixPermissions,dosPermissions:o.dosPermissions,createFolders:e.createFolders}),o.dir||(i.file(l).unsafeOriginalName=h)}return n.zipComment.length&&(i.comment=n.zipComment),i})}},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(t,e,i){"use strict";var r=t("../utils"),n=t("../stream/GenericWorker");function s(t,e){n.call(this,"Nodejs stream input adapter for "+t),this._upstreamEnded=!1,this._bindStream(e)}r.inherits(s,n),s.prototype._bindStream=function(t){var e=this;(this._stream=t).pause(),t.on("data",function(t){e.push({data:t,meta:{percent:0}})}).on("error",function(t){e.isPaused?this.generatedError=t:e.error(t)}).on("end",function(){e.isPaused?e._upstreamEnded=!0:e.end()})},s.prototype.pause=function(){return!!n.prototype.pause.call(this)&&(this._stream.pause(),!0)},s.prototype.resume=function(){return!!n.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},e.exports=s},{"../stream/GenericWorker":28,"../utils":32}],13:[function(t,e,i){"use strict";var r=t("readable-stream").Readable;function n(t,e,i){r.call(this,e),this._helper=t;var n=this;t.on("data",function(t,e){n.push(t)||n._helper.pause(),i&&i(e)}).on("error",function(t){n.emit("error",t)}).on("end",function(){n.push(null)})}t("../utils").inherits(n,r),n.prototype._read=function(){this._helper.resume()},e.exports=n},{"../utils":32,"readable-stream":16}],14:[function(t,e,i){"use strict";e.exports={isNode:"undefined"!=typeof Buffer,newBufferFrom:function(t,e){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(t,e);if("number"==typeof t)throw new Error('The "data" argument must not be a number');return new Buffer(t,e)},allocBuffer:function(t){if(Buffer.alloc)return Buffer.alloc(t);var e=new Buffer(t);return e.fill(0),e},isBuffer:function(t){return Buffer.isBuffer(t)},isStream:function(t){return t&&"function"==typeof t.on&&"function"==typeof t.pause&&"function"==typeof t.resume}}},{}],15:[function(t,e,i){"use strict";function r(t,e,i){var r,n=s.getTypeOf(e),o=s.extend(i||{},h);o.date=o.date||new Date,null!==o.compression&&(o.compression=o.compression.toUpperCase()),"string"==typeof o.unixPermissions&&(o.unixPermissions=parseInt(o.unixPermissions,8)),o.unixPermissions&&16384&o.unixPermissions&&(o.dir=!0),o.dosPermissions&&16&o.dosPermissions&&(o.dir=!0),o.dir&&(t=g(t)),o.createFolders&&(r=p(t))&&m.call(this,r,!0);var c="string"===n&&!1===o.binary&&!1===o.base64;i&&void 0!==i.binary||(o.binary=!c),(e instanceof l&&0===e.uncompressedSize||o.dir||!e||0===e.length)&&(o.base64=!1,o.binary=!0,e="",o.compression="STORE",n="string");var v;v=e instanceof l||e instanceof a?e:d.isNode&&d.isStream(e)?new f(t,e):s.prepareContent(t,e,o.binary,o.optimizedBinaryString,o.base64);var y=new u(t,v,o);this.files[t]=y}var n=t("./utf8"),s=t("./utils"),a=t("./stream/GenericWorker"),o=t("./stream/StreamHelper"),h=t("./defaults"),l=t("./compressedObject"),u=t("./zipObject"),c=t("./generate"),d=t("./nodejsUtils"),f=t("./nodejs/NodejsStreamInputAdapter"),p=function(t){"/"===t.slice(-1)&&(t=t.substring(0,t.length-1));var e=t.lastIndexOf("/");return 0<e?t.substring(0,e):""},g=function(t){return"/"!==t.slice(-1)&&(t+="/"),t},m=function(t,e){return e=void 0!==e?e:h.createFolders,t=g(t),this.files[t]||r.call(this,t,null,{dir:!0,createFolders:e}),this.files[t]};function v(t){return"[object RegExp]"===Object.prototype.toString.call(t)}var y={load:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},forEach:function(t){var e,i,r;for(e in this.files)r=this.files[e],(i=e.slice(this.root.length,e.length))&&e.slice(0,this.root.length)===this.root&&t(i,r)},filter:function(t){var e=[];return this.forEach(function(i,r){t(i,r)&&e.push(r)}),e},file:function(t,e,i){if(1!==arguments.length)return t=this.root+t,r.call(this,t,e,i),this;if(v(t)){var n=t;return this.filter(function(t,e){return!e.dir&&n.test(t)})}var s=this.files[this.root+t];return s&&!s.dir?s:null},folder:function(t){if(!t)return this;if(v(t))return this.filter(function(e,i){return i.dir&&t.test(e)});var e=this.root+t,i=m.call(this,e),r=this.clone();return r.root=i.name,r},remove:function(t){t=this.root+t;var e=this.files[t];if(e||("/"!==t.slice(-1)&&(t+="/"),e=this.files[t]),e&&!e.dir)delete this.files[t];else for(var i=this.filter(function(e,i){return i.name.slice(0,t.length)===t}),r=0;r<i.length;r++)delete this.files[i[r].name];return this},generate:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},generateInternalStream:function(t){var e,i={};try{if((i=s.extend(t||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:n.utf8encode})).type=i.type.toLowerCase(),i.compression=i.compression.toUpperCase(),"binarystring"===i.type&&(i.type="string"),!i.type)throw new Error("No output type specified.");s.checkSupport(i.type),"darwin"!==i.platform&&"freebsd"!==i.platform&&"linux"!==i.platform&&"sunos"!==i.platform||(i.platform="UNIX"),"win32"===i.platform&&(i.platform="DOS");var r=i.comment||this.comment||"";e=c.generateWorker(this,i,r)}catch(t){(e=new a("error")).error(t)}return new o(e,i.type||"string",i.mimeType)},generateAsync:function(t,e){return this.generateInternalStream(t).accumulate(e)},generateNodeStream:function(t,e){return(t=t||{}).type||(t.type="nodebuffer"),this.generateInternalStream(t).toNodejsStream(e)}};e.exports=y},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(t,e,i){"use strict";e.exports=t("stream")},{stream:void 0}],17:[function(t,e,i){"use strict";var r=t("./DataReader");function n(t){r.call(this,t);for(var e=0;e<this.data.length;e++)t[e]=255&t[e]}t("../utils").inherits(n,r),n.prototype.byteAt=function(t){return this.data[this.zero+t]},n.prototype.lastIndexOfSignature=function(t){for(var e=t.charCodeAt(0),i=t.charCodeAt(1),r=t.charCodeAt(2),n=t.charCodeAt(3),s=this.length-4;0<=s;--s)if(this.data[s]===e&&this.data[s+1]===i&&this.data[s+2]===r&&this.data[s+3]===n)return s-this.zero;return-1},n.prototype.readAndCheckSignature=function(t){var e=t.charCodeAt(0),i=t.charCodeAt(1),r=t.charCodeAt(2),n=t.charCodeAt(3),s=this.readData(4);return e===s[0]&&i===s[1]&&r===s[2]&&n===s[3]},n.prototype.readData=function(t){if(this.checkOffset(t),0===t)return[];var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{"../utils":32,"./DataReader":18}],18:[function(t,e,i){"use strict";var r=t("../utils");function n(t){this.data=t,this.length=t.length,this.index=0,this.zero=0}n.prototype={checkOffset:function(t){this.checkIndex(this.index+t)},checkIndex:function(t){if(this.length<this.zero+t||t<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+t+"). Corrupted zip ?")},setIndex:function(t){this.checkIndex(t),this.index=t},skip:function(t){this.setIndex(this.index+t)},byteAt:function(){},readInt:function(t){var e,i=0;for(this.checkOffset(t),e=this.index+t-1;e>=this.index;e--)i=(i<<8)+this.byteAt(e);return this.index+=t,i},readString:function(t){return r.transformTo("string",this.readData(t))},readData:function(){},lastIndexOfSignature:function(){},readAndCheckSignature:function(){},readDate:function(){var t=this.readInt(4);return new Date(Date.UTC(1980+(t>>25&127),(t>>21&15)-1,t>>16&31,t>>11&31,t>>5&63,(31&t)<<1))}},e.exports=n},{"../utils":32}],19:[function(t,e,i){"use strict";var r=t("./Uint8ArrayReader");function n(t){r.call(this,t)}t("../utils").inherits(n,r),n.prototype.readData=function(t){this.checkOffset(t);var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(t,e,i){"use strict";var r=t("./DataReader");function n(t){r.call(this,t)}t("../utils").inherits(n,r),n.prototype.byteAt=function(t){return this.data.charCodeAt(this.zero+t)},n.prototype.lastIndexOfSignature=function(t){return this.data.lastIndexOf(t)-this.zero},n.prototype.readAndCheckSignature=function(t){return t===this.readData(4)},n.prototype.readData=function(t){this.checkOffset(t);var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{"../utils":32,"./DataReader":18}],21:[function(t,e,i){"use strict";var r=t("./ArrayReader");function n(t){r.call(this,t)}t("../utils").inherits(n,r),n.prototype.readData=function(t){if(this.checkOffset(t),0===t)return new Uint8Array(0);var e=this.data.subarray(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{"../utils":32,"./ArrayReader":17}],22:[function(t,e,i){"use strict";var r=t("../utils"),n=t("../support"),s=t("./ArrayReader"),a=t("./StringReader"),o=t("./NodeBufferReader"),h=t("./Uint8ArrayReader");e.exports=function(t){var e=r.getTypeOf(t);return r.checkSupport(e),"string"!==e||n.uint8array?"nodebuffer"===e?new o(t):n.uint8array?new h(r.transformTo("uint8array",t)):new s(r.transformTo("array",t)):new a(t)}},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(t,e,i){"use strict";i.LOCAL_FILE_HEADER="PK",i.CENTRAL_FILE_HEADER="PK",i.CENTRAL_DIRECTORY_END="PK",i.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK",i.ZIP64_CENTRAL_DIRECTORY_END="PK",i.DATA_DESCRIPTOR="PK\b"},{}],24:[function(t,e,i){"use strict";var r=t("./GenericWorker"),n=t("../utils");function s(t){r.call(this,"ConvertWorker to "+t),this.destType=t}n.inherits(s,r),s.prototype.processChunk=function(t){this.push({data:n.transformTo(this.destType,t.data),meta:t.meta})},e.exports=s},{"../utils":32,"./GenericWorker":28}],25:[function(t,e,i){"use strict";var r=t("./GenericWorker"),n=t("../crc32");function s(){r.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}t("../utils").inherits(s,r),s.prototype.processChunk=function(t){this.streamInfo.crc32=n(t.data,this.streamInfo.crc32||0),this.push(t)},e.exports=s},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(t,e,i){"use strict";var r=t("../utils"),n=t("./GenericWorker");function s(t){n.call(this,"DataLengthProbe for "+t),this.propName=t,this.withStreamInfo(t,0)}r.inherits(s,n),s.prototype.processChunk=function(t){if(t){var e=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=e+t.data.length}n.prototype.processChunk.call(this,t)},e.exports=s},{"../utils":32,"./GenericWorker":28}],27:[function(t,e,i){"use strict";var r=t("../utils"),n=t("./GenericWorker");function s(t){n.call(this,"DataWorker");var e=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,t.then(function(t){e.dataIsReady=!0,e.data=t,e.max=t&&t.length||0,e.type=r.getTypeOf(t),e.isPaused||e._tickAndRepeat()},function(t){e.error(t)})}r.inherits(s,n),s.prototype.cleanUp=function(){n.prototype.cleanUp.call(this),this.data=null},s.prototype.resume=function(){return!!n.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,r.delay(this._tickAndRepeat,[],this)),!0)},s.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(r.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},s.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var t=null,e=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case"string":t=this.data.substring(this.index,e);break;case"uint8array":t=this.data.subarray(this.index,e);break;case"array":case"nodebuffer":t=this.data.slice(this.index,e)}return this.index=e,this.push({data:t,meta:{percent:this.max?this.index/this.max*100:0}})},e.exports=s},{"../utils":32,"./GenericWorker":28}],28:[function(t,e,i){"use strict";function r(t){this.name=t||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}r.prototype={push:function(t){this.emit("data",t)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(t){this.emit("error",t)}return!0},error:function(t){return!this.isFinished&&(this.isPaused?this.generatedError=t:(this.isFinished=!0,this.emit("error",t),this.previous&&this.previous.error(t),this.cleanUp()),!0)},on:function(t,e){return this._listeners[t].push(e),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(t,e){if(this._listeners[t])for(var i=0;i<this._listeners[t].length;i++)this._listeners[t][i].call(this,e)},pipe:function(t){return t.registerPrevious(this)},registerPrevious:function(t){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=t.streamInfo,this.mergeStreamInfo(),this.previous=t;var e=this;return t.on("data",function(t){e.processChunk(t)}),t.on("end",function(){e.end()}),t.on("error",function(t){e.error(t)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var t=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),t=!0),this.previous&&this.previous.resume(),!t},flush:function(){},processChunk:function(t){this.push(t)},withStreamInfo:function(t,e){return this.extraStreamInfo[t]=e,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var t in this.extraStreamInfo)Object.prototype.hasOwnProperty.call(this.extraStreamInfo,t)&&(this.streamInfo[t]=this.extraStreamInfo[t])},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var t="Worker "+this.name;return this.previous?this.previous+" -> "+t:t}},e.exports=r},{}],29:[function(t,e,i){"use strict";var r=t("../utils"),n=t("./ConvertWorker"),s=t("./GenericWorker"),a=t("../base64"),o=t("../support"),h=t("../external"),l=null;if(o.nodestream)try{l=t("../nodejs/NodejsStreamOutputAdapter")}catch(t){}function u(t,e,i){var a=e;switch(e){case"blob":case"arraybuffer":a="uint8array";break;case"base64":a="string"}try{this._internalType=a,this._outputType=e,this._mimeType=i,r.checkSupport(a),this._worker=t.pipe(new n(a)),t.lock()}catch(t){this._worker=new s("error"),this._worker.error(t)}}u.prototype={accumulate:function(t){return function(t,e){return new h.Promise(function(i,n){var s=[],o=t._internalType,h=t._outputType,l=t._mimeType;t.on("data",function(t,i){s.push(t),e&&e(i)}).on("error",function(t){s=[],n(t)}).on("end",function(){try{var t=function(t,e,i){switch(t){case"blob":return r.newBlob(r.transformTo("arraybuffer",e),i);case"base64":return a.encode(e);default:return r.transformTo(t,e)}}(h,function(t,e){var i,r=0,n=null,s=0;for(i=0;i<e.length;i++)s+=e[i].length;switch(t){case"string":return e.join("");case"array":return Array.prototype.concat.apply([],e);case"uint8array":for(n=new Uint8Array(s),i=0;i<e.length;i++)n.set(e[i],r),r+=e[i].length;return n;case"nodebuffer":return Buffer.concat(e);default:throw new Error("concat : unsupported type '"+t+"'")}}(o,s),l);i(t)}catch(t){n(t)}s=[]}).resume()})}(this,t)},on:function(t,e){var i=this;return"data"===t?this._worker.on(t,function(t){e.call(i,t.data,t.meta)}):this._worker.on(t,function(){r.delay(e,arguments,i)}),this},resume:function(){return r.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(t){if(r.checkSupport("nodestream"),"nodebuffer"!==this._outputType)throw new Error(this._outputType+" is not supported by this method");return new l(this,{objectMode:"nodebuffer"!==this._outputType},t)}},e.exports=u},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(t,e,i){"use strict";if(i.base64=!0,i.array=!0,i.string=!0,i.arraybuffer="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array,i.nodebuffer="undefined"!=typeof Buffer,i.uint8array="undefined"!=typeof Uint8Array,"undefined"==typeof ArrayBuffer)i.blob=!1;else{var r=new ArrayBuffer(0);try{i.blob=0===new Blob([r],{type:"application/zip"}).size}catch(t){try{var n=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);n.append(r),i.blob=0===n.getBlob("application/zip").size}catch(t){i.blob=!1}}}try{i.nodestream=!!t("readable-stream").Readable}catch(t){i.nodestream=!1}},{"readable-stream":16}],31:[function(t,e,i){"use strict";for(var r=t("./utils"),n=t("./support"),s=t("./nodejsUtils"),a=t("./stream/GenericWorker"),o=new Array(256),h=0;h<256;h++)o[h]=252<=h?6:248<=h?5:240<=h?4:224<=h?3:192<=h?2:1;function l(){a.call(this,"utf-8 decode"),this.leftOver=null}function u(){a.call(this,"utf-8 encode")}o[254]=o[254]=1,i.utf8encode=function(t){return n.nodebuffer?s.newBufferFrom(t,"utf-8"):function(t){var e,i,r,s,a,o=t.length,h=0;for(s=0;s<o;s++)55296==(64512&(i=t.charCodeAt(s)))&&s+1<o&&56320==(64512&(r=t.charCodeAt(s+1)))&&(i=65536+(i-55296<<10)+(r-56320),s++),h+=i<128?1:i<2048?2:i<65536?3:4;for(e=n.uint8array?new Uint8Array(h):new Array(h),s=a=0;a<h;s++)55296==(64512&(i=t.charCodeAt(s)))&&s+1<o&&56320==(64512&(r=t.charCodeAt(s+1)))&&(i=65536+(i-55296<<10)+(r-56320),s++),i<128?e[a++]=i:(i<2048?e[a++]=192|i>>>6:(i<65536?e[a++]=224|i>>>12:(e[a++]=240|i>>>18,e[a++]=128|i>>>12&63),e[a++]=128|i>>>6&63),e[a++]=128|63&i);return e}(t)},i.utf8decode=function(t){return n.nodebuffer?r.transformTo("nodebuffer",t).toString("utf-8"):function(t){var e,i,n,s,a=t.length,h=new Array(2*a);for(e=i=0;e<a;)if((n=t[e++])<128)h[i++]=n;else if(4<(s=o[n]))h[i++]=65533,e+=s-1;else{for(n&=2===s?31:3===s?15:7;1<s&&e<a;)n=n<<6|63&t[e++],s--;1<s?h[i++]=65533:n<65536?h[i++]=n:(n-=65536,h[i++]=55296|n>>10&1023,h[i++]=56320|1023&n)}return h.length!==i&&(h.subarray?h=h.subarray(0,i):h.length=i),r.applyFromCharCode(h)}(t=r.transformTo(n.uint8array?"uint8array":"array",t))},r.inherits(l,a),l.prototype.processChunk=function(t){var e=r.transformTo(n.uint8array?"uint8array":"array",t.data);if(this.leftOver&&this.leftOver.length){if(n.uint8array){var s=e;(e=new Uint8Array(s.length+this.leftOver.length)).set(this.leftOver,0),e.set(s,this.leftOver.length)}else e=this.leftOver.concat(e);this.leftOver=null}var a=function(t,e){var i;for((e=e||t.length)>t.length&&(e=t.length),i=e-1;0<=i&&128==(192&t[i]);)i--;return i<0||0===i?e:i+o[t[i]]>e?i:e}(e),h=e;a!==e.length&&(n.uint8array?(h=e.subarray(0,a),this.leftOver=e.subarray(a,e.length)):(h=e.slice(0,a),this.leftOver=e.slice(a,e.length))),this.push({data:i.utf8decode(h),meta:t.meta})},l.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:i.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},i.Utf8DecodeWorker=l,r.inherits(u,a),u.prototype.processChunk=function(t){this.push({data:i.utf8encode(t.data),meta:t.meta})},i.Utf8EncodeWorker=u},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(t,e,i){"use strict";var r=t("./support"),n=t("./base64"),s=t("./nodejsUtils"),a=t("./external");function o(t){return t}function h(t,e){for(var i=0;i<t.length;++i)e[i]=255&t.charCodeAt(i);return e}t("setimmediate"),i.newBlob=function(t,e){i.checkSupport("blob");try{return new Blob([t],{type:e})}catch(i){try{var r=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return r.append(t),r.getBlob(e)}catch(t){throw new Error("Bug : can't construct the Blob.")}}};var l={stringifyByChunk:function(t,e,i){var r=[],n=0,s=t.length;if(s<=i)return String.fromCharCode.apply(null,t);for(;n<s;)"array"===e||"nodebuffer"===e?r.push(String.fromCharCode.apply(null,t.slice(n,Math.min(n+i,s)))):r.push(String.fromCharCode.apply(null,t.subarray(n,Math.min(n+i,s)))),n+=i;return r.join("")},stringifyByChar:function(t){for(var e="",i=0;i<t.length;i++)e+=String.fromCharCode(t[i]);return e},applyCanBeUsed:{uint8array:function(){try{return r.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(t){return!1}}(),nodebuffer:function(){try{return r.nodebuffer&&1===String.fromCharCode.apply(null,s.allocBuffer(1)).length}catch(t){return!1}}()}};function u(t){var e=65536,r=i.getTypeOf(t),n=!0;if("uint8array"===r?n=l.applyCanBeUsed.uint8array:"nodebuffer"===r&&(n=l.applyCanBeUsed.nodebuffer),n)for(;1<e;)try{return l.stringifyByChunk(t,r,e)}catch(t){e=Math.floor(e/2)}return l.stringifyByChar(t)}function c(t,e){for(var i=0;i<t.length;i++)e[i]=t[i];return e}i.applyFromCharCode=u;var d={};d.string={string:o,array:function(t){return h(t,new Array(t.length))},arraybuffer:function(t){return d.string.uint8array(t).buffer},uint8array:function(t){return h(t,new Uint8Array(t.length))},nodebuffer:function(t){return h(t,s.allocBuffer(t.length))}},d.array={string:u,array:o,arraybuffer:function(t){return new Uint8Array(t).buffer},uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return s.newBufferFrom(t)}},d.arraybuffer={string:function(t){return u(new Uint8Array(t))},array:function(t){return c(new Uint8Array(t),new Array(t.byteLength))},arraybuffer:o,uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return s.newBufferFrom(new Uint8Array(t))}},d.uint8array={string:u,array:function(t){return c(t,new Array(t.length))},arraybuffer:function(t){return t.buffer},uint8array:o,nodebuffer:function(t){return s.newBufferFrom(t)}},d.nodebuffer={string:u,array:function(t){return c(t,new Array(t.length))},arraybuffer:function(t){return d.nodebuffer.uint8array(t).buffer},uint8array:function(t){return c(t,new Uint8Array(t.length))},nodebuffer:o},i.transformTo=function(t,e){if(e=e||"",!t)return e;i.checkSupport(t);var r=i.getTypeOf(e);return d[r][t](e)},i.resolve=function(t){for(var e=t.split("/"),i=[],r=0;r<e.length;r++){var n=e[r];"."===n||""===n&&0!==r&&r!==e.length-1||(".."===n?i.pop():i.push(n))}return i.join("/")},i.getTypeOf=function(t){return"string"==typeof t?"string":"[object Array]"===Object.prototype.toString.call(t)?"array":r.nodebuffer&&s.isBuffer(t)?"nodebuffer":r.uint8array&&t instanceof Uint8Array?"uint8array":r.arraybuffer&&t instanceof ArrayBuffer?"arraybuffer":void 0},i.checkSupport=function(t){if(!r[t.toLowerCase()])throw new Error(t+" is not supported by this platform")},i.MAX_VALUE_16BITS=65535,i.MAX_VALUE_32BITS=-1,i.pretty=function(t){var e,i,r="";for(i=0;i<(t||"").length;i++)r+="\\x"+((e=t.charCodeAt(i))<16?"0":"")+e.toString(16).toUpperCase();return r},i.delay=function(t,e,i){setImmediate(function(){t.apply(i||null,e||[])})},i.inherits=function(t,e){function i(){}i.prototype=e.prototype,t.prototype=new i},i.extend=function(){var t,e,i={};for(t=0;t<arguments.length;t++)for(e in arguments[t])Object.prototype.hasOwnProperty.call(arguments[t],e)&&void 0===i[e]&&(i[e]=arguments[t][e]);return i},i.prepareContent=function(t,e,s,o,l){return a.Promise.resolve(e).then(function(t){return r.blob&&(t instanceof Blob||-1!==["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(t)))&&"undefined"!=typeof FileReader?new a.Promise(function(e,i){var r=new FileReader;r.onload=function(t){e(t.target.result)},r.onerror=function(t){i(t.target.error)},r.readAsArrayBuffer(t)}):t}).then(function(e){var u=i.getTypeOf(e);return u?("arraybuffer"===u?e=i.transformTo("uint8array",e):"string"===u&&(l?e=n.decode(e):s&&!0!==o&&(e=function(t){return h(t,r.uint8array?new Uint8Array(t.length):new Array(t.length))}(e))),e):a.Promise.reject(new Error("Can't read the data of '"+t+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))})}},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,setimmediate:54}],33:[function(t,e,i){"use strict";var r=t("./reader/readerFor"),n=t("./utils"),s=t("./signature"),a=t("./zipEntry"),o=t("./support");function h(t){this.files=[],this.loadOptions=t}h.prototype={checkSignature:function(t){if(!this.reader.readAndCheckSignature(t)){this.reader.index-=4;var e=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+n.pretty(e)+", expected "+n.pretty(t)+")")}},isSignature:function(t,e){var i=this.reader.index;this.reader.setIndex(t);var r=this.reader.readString(4)===e;return this.reader.setIndex(i),r},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var t=this.reader.readData(this.zipCommentLength),e=o.uint8array?"uint8array":"array",i=n.transformTo(e,t);this.zipComment=this.loadOptions.decodeFileName(i)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var t,e,i,r=this.zip64EndOfCentralSize-44;0<r;)t=this.reader.readInt(2),e=this.reader.readInt(4),i=this.reader.readData(e),this.zip64ExtensibleData[t]={id:t,length:e,value:i}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var t,e;for(t=0;t<this.files.length;t++)e=this.files[t],this.reader.setIndex(e.localHeaderOffset),this.checkSignature(s.LOCAL_FILE_HEADER),e.readLocalPart(this.reader),e.handleUTF8(),e.processAttributes()},readCentralDir:function(){var t;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);)(t=new a({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(t);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var t=this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);if(t<0)throw this.isSignature(0,s.LOCAL_FILE_HEADER)?new Error("Corrupted zip: can't find end of central directory"):new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");this.reader.setIndex(t);var e=t;if(this.checkSignature(s.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===n.MAX_VALUE_16BITS||this.diskWithCentralDirStart===n.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===n.MAX_VALUE_16BITS||this.centralDirRecords===n.MAX_VALUE_16BITS||this.centralDirSize===n.MAX_VALUE_32BITS||this.centralDirOffset===n.MAX_VALUE_32BITS){if(this.zip64=!0,(t=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(t),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,s.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var i=this.centralDirOffset+this.centralDirSize;this.zip64&&(i+=20,i+=12+this.zip64EndOfCentralSize);var r=e-i;if(0<r)this.isSignature(e,s.CENTRAL_FILE_HEADER)||(this.reader.zero=r);else if(r<0)throw new Error("Corrupted zip: missing "+Math.abs(r)+" bytes.")},prepareReader:function(t){this.reader=r(t)},load:function(t){this.prepareReader(t),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},e.exports=h},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utils":32,"./zipEntry":34}],34:[function(t,e,i){"use strict";var r=t("./reader/readerFor"),n=t("./utils"),s=t("./compressedObject"),a=t("./crc32"),o=t("./utf8"),h=t("./compressions"),l=t("./support");function u(t,e){this.options=t,this.loadOptions=e}u.prototype={isEncrypted:function(){return!(1&~this.bitFlag)},useUTF8:function(){return!(2048&~this.bitFlag)},readLocalPart:function(t){var e,i;if(t.skip(22),this.fileNameLength=t.readInt(2),i=t.readInt(2),this.fileName=t.readData(this.fileNameLength),t.skip(i),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");if(null===(e=function(t){for(var e in h)if(Object.prototype.hasOwnProperty.call(h,e)&&h[e].magic===t)return h[e];return null}(this.compressionMethod)))throw new Error("Corrupted zip : compression "+n.pretty(this.compressionMethod)+" unknown (inner file : "+n.transformTo("string",this.fileName)+")");this.decompressed=new s(this.compressedSize,this.uncompressedSize,this.crc32,e,t.readData(this.compressedSize))},readCentralPart:function(t){this.versionMadeBy=t.readInt(2),t.skip(2),this.bitFlag=t.readInt(2),this.compressionMethod=t.readString(2),this.date=t.readDate(),this.crc32=t.readInt(4),this.compressedSize=t.readInt(4),this.uncompressedSize=t.readInt(4);var e=t.readInt(2);if(this.extraFieldsLength=t.readInt(2),this.fileCommentLength=t.readInt(2),this.diskNumberStart=t.readInt(2),this.internalFileAttributes=t.readInt(2),this.externalFileAttributes=t.readInt(4),this.localHeaderOffset=t.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");t.skip(e),this.readExtraFields(t),this.parseZIP64ExtraField(t),this.fileComment=t.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var t=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==t&&(this.dosPermissions=63&this.externalFileAttributes),3==t&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||"/"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(){if(this.extraFields[1]){var t=r(this.extraFields[1].value);this.uncompressedSize===n.MAX_VALUE_32BITS&&(this.uncompressedSize=t.readInt(8)),this.compressedSize===n.MAX_VALUE_32BITS&&(this.compressedSize=t.readInt(8)),this.localHeaderOffset===n.MAX_VALUE_32BITS&&(this.localHeaderOffset=t.readInt(8)),this.diskNumberStart===n.MAX_VALUE_32BITS&&(this.diskNumberStart=t.readInt(4))}},readExtraFields:function(t){var e,i,r,n=t.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});t.index+4<n;)e=t.readInt(2),i=t.readInt(2),r=t.readData(i),this.extraFields[e]={id:e,length:i,value:r};t.setIndex(n)},handleUTF8:function(){var t=l.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=o.utf8decode(this.fileName),this.fileCommentStr=o.utf8decode(this.fileComment);else{var e=this.findExtraFieldUnicodePath();if(null!==e)this.fileNameStr=e;else{var i=n.transformTo(t,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(i)}var r=this.findExtraFieldUnicodeComment();if(null!==r)this.fileCommentStr=r;else{var s=n.transformTo(t,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(s)}}},findExtraFieldUnicodePath:function(){var t=this.extraFields[28789];if(t){var e=r(t.value);return 1!==e.readInt(1)||a(this.fileName)!==e.readInt(4)?null:o.utf8decode(e.readData(t.length-5))}return null},findExtraFieldUnicodeComment:function(){var t=this.extraFields[25461];if(t){var e=r(t.value);return 1!==e.readInt(1)||a(this.fileComment)!==e.readInt(4)?null:o.utf8decode(e.readData(t.length-5))}return null}},e.exports=u},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(t,e,i){"use strict";function r(t,e,i){this.name=t,this.dir=i.dir,this.date=i.date,this.comment=i.comment,this.unixPermissions=i.unixPermissions,this.dosPermissions=i.dosPermissions,this._data=e,this._dataBinary=i.binary,this.options={compression:i.compression,compressionOptions:i.compressionOptions}}var n=t("./stream/StreamHelper"),s=t("./stream/DataWorker"),a=t("./utf8"),o=t("./compressedObject"),h=t("./stream/GenericWorker");r.prototype={internalStream:function(t){var e=null,i="string";try{if(!t)throw new Error("No output type specified.");var r="string"===(i=t.toLowerCase())||"text"===i;"binarystring"!==i&&"text"!==i||(i="string"),e=this._decompressWorker();var s=!this._dataBinary;s&&!r&&(e=e.pipe(new a.Utf8EncodeWorker)),!s&&r&&(e=e.pipe(new a.Utf8DecodeWorker))}catch(t){(e=new h("error")).error(t)}return new n(e,i,"")},async:function(t,e){return this.internalStream(t).accumulate(e)},nodeStream:function(t,e){return this.internalStream(t||"nodebuffer").toNodejsStream(e)},_compressWorker:function(t,e){if(this._data instanceof o&&this._data.compression.magic===t.magic)return this._data.getCompressedWorker();var i=this._decompressWorker();return this._dataBinary||(i=i.pipe(new a.Utf8EncodeWorker)),o.createWorkerFrom(i,t,e)},_decompressWorker:function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof h?this._data:new s(this._data)}};for(var l=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],u=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},c=0;c<l.length;c++)r.prototype[l[c]]=u;e.exports=r},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(t,e,r){(function(t){"use strict";var i,r,n=t.MutationObserver||t.WebKitMutationObserver;if(n){var s=0,a=new n(u),o=t.document.createTextNode("");a.observe(o,{characterData:!0}),i=function(){o.data=s=++s%2}}else if(t.setImmediate||void 0===t.MessageChannel)i="document"in t&&"onreadystatechange"in t.document.createElement("script")?function(){var e=t.document.createElement("script");e.onreadystatechange=function(){u(),e.onreadystatechange=null,e.parentNode.removeChild(e),e=null},t.document.documentElement.appendChild(e)}:function(){setTimeout(u,0)};else{var h=new t.MessageChannel;h.port1.onmessage=u,i=function(){h.port2.postMessage(0)}}var l=[];function u(){var t,e;r=!0;for(var i=l.length;i;){for(e=l,l=[],t=-1;++t<i;)e[t]();i=l.length}r=!1}e.exports=function(t){1!==l.push(t)||r||i()}}).call(this,void 0!==i.g?i.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],37:[function(t,e,i){"use strict";var r=t("immediate");function n(){}var s={},a=["REJECTED"],o=["FULFILLED"],h=["PENDING"];function l(t){if("function"!=typeof t)throw new TypeError("resolver must be a function");this.state=h,this.queue=[],this.outcome=void 0,t!==n&&f(this,t)}function u(t,e,i){this.promise=t,"function"==typeof e&&(this.onFulfilled=e,this.callFulfilled=this.otherCallFulfilled),"function"==typeof i&&(this.onRejected=i,this.callRejected=this.otherCallRejected)}function c(t,e,i){r(function(){var r;try{r=e(i)}catch(r){return s.reject(t,r)}r===t?s.reject(t,new TypeError("Cannot resolve promise with itself")):s.resolve(t,r)})}function d(t){var e=t&&t.then;if(t&&("object"==typeof t||"function"==typeof t)&&"function"==typeof e)return function(){e.apply(t,arguments)}}function f(t,e){var i=!1;function r(e){i||(i=!0,s.reject(t,e))}function n(e){i||(i=!0,s.resolve(t,e))}var a=p(function(){e(n,r)});"error"===a.status&&r(a.value)}function p(t,e){var i={};try{i.value=t(e),i.status="success"}catch(t){i.status="error",i.value=t}return i}(e.exports=l).prototype.finally=function(t){if("function"!=typeof t)return this;var e=this.constructor;return this.then(function(i){return e.resolve(t()).then(function(){return i})},function(i){return e.resolve(t()).then(function(){throw i})})},l.prototype.catch=function(t){return this.then(null,t)},l.prototype.then=function(t,e){if("function"!=typeof t&&this.state===o||"function"!=typeof e&&this.state===a)return this;var i=new this.constructor(n);return this.state!==h?c(i,this.state===o?t:e,this.outcome):this.queue.push(new u(i,t,e)),i},u.prototype.callFulfilled=function(t){s.resolve(this.promise,t)},u.prototype.otherCallFulfilled=function(t){c(this.promise,this.onFulfilled,t)},u.prototype.callRejected=function(t){s.reject(this.promise,t)},u.prototype.otherCallRejected=function(t){c(this.promise,this.onRejected,t)},s.resolve=function(t,e){var i=p(d,e);if("error"===i.status)return s.reject(t,i.value);var r=i.value;if(r)f(t,r);else{t.state=o,t.outcome=e;for(var n=-1,a=t.queue.length;++n<a;)t.queue[n].callFulfilled(e)}return t},s.reject=function(t,e){t.state=a,t.outcome=e;for(var i=-1,r=t.queue.length;++i<r;)t.queue[i].callRejected(e);return t},l.resolve=function(t){return t instanceof this?t:s.resolve(new this(n),t)},l.reject=function(t){var e=new this(n);return s.reject(e,t)},l.all=function(t){var e=this;if("[object Array]"!==Object.prototype.toString.call(t))return this.reject(new TypeError("must be an array"));var i=t.length,r=!1;if(!i)return this.resolve([]);for(var a=new Array(i),o=0,h=-1,l=new this(n);++h<i;)u(t[h],h);return l;function u(t,n){e.resolve(t).then(function(t){a[n]=t,++o!==i||r||(r=!0,s.resolve(l,a))},function(t){r||(r=!0,s.reject(l,t))})}},l.race=function(t){if("[object Array]"!==Object.prototype.toString.call(t))return this.reject(new TypeError("must be an array"));var e=t.length,i=!1;if(!e)return this.resolve([]);for(var r,a=-1,o=new this(n);++a<e;)r=t[a],this.resolve(r).then(function(t){i||(i=!0,s.resolve(o,t))},function(t){i||(i=!0,s.reject(o,t))});return o}},{immediate:36}],38:[function(t,e,i){"use strict";var r={};(0,t("./lib/utils/common").assign)(r,t("./lib/deflate"),t("./lib/inflate"),t("./lib/zlib/constants")),e.exports=r},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(t,e,i){"use strict";var r=t("./zlib/deflate"),n=t("./utils/common"),s=t("./utils/strings"),a=t("./zlib/messages"),o=t("./zlib/zstream"),h=Object.prototype.toString;function l(t){if(!(this instanceof l))return new l(t);this.options=n.assign({level:-1,method:8,chunkSize:16384,windowBits:15,memLevel:8,strategy:0,to:""},t||{});var e=this.options;e.raw&&0<e.windowBits?e.windowBits=-e.windowBits:e.gzip&&0<e.windowBits&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new o,this.strm.avail_out=0;var i=r.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(0!==i)throw new Error(a[i]);if(e.header&&r.deflateSetHeader(this.strm,e.header),e.dictionary){var u;if(u="string"==typeof e.dictionary?s.string2buf(e.dictionary):"[object ArrayBuffer]"===h.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,0!==(i=r.deflateSetDictionary(this.strm,u)))throw new Error(a[i]);this._dict_set=!0}}function u(t,e){var i=new l(e);if(i.push(t,!0),i.err)throw i.msg||a[i.err];return i.result}l.prototype.push=function(t,e){var i,a,o=this.strm,l=this.options.chunkSize;if(this.ended)return!1;a=e===~~e?e:!0===e?4:0,"string"==typeof t?o.input=s.string2buf(t):"[object ArrayBuffer]"===h.call(t)?o.input=new Uint8Array(t):o.input=t,o.next_in=0,o.avail_in=o.input.length;do{if(0===o.avail_out&&(o.output=new n.Buf8(l),o.next_out=0,o.avail_out=l),1!==(i=r.deflate(o,a))&&0!==i)return this.onEnd(i),!(this.ended=!0);0!==o.avail_out&&(0!==o.avail_in||4!==a&&2!==a)||("string"===this.options.to?this.onData(s.buf2binstring(n.shrinkBuf(o.output,o.next_out))):this.onData(n.shrinkBuf(o.output,o.next_out)))}while((0<o.avail_in||0===o.avail_out)&&1!==i);return 4===a?(i=r.deflateEnd(this.strm),this.onEnd(i),this.ended=!0,0===i):2!==a||(this.onEnd(0),!(o.avail_out=0))},l.prototype.onData=function(t){this.chunks.push(t)},l.prototype.onEnd=function(t){0===t&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=n.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},i.Deflate=l,i.deflate=u,i.deflateRaw=function(t,e){return(e=e||{}).raw=!0,u(t,e)},i.gzip=function(t,e){return(e=e||{}).gzip=!0,u(t,e)}},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(t,e,i){"use strict";var r=t("./zlib/inflate"),n=t("./utils/common"),s=t("./utils/strings"),a=t("./zlib/constants"),o=t("./zlib/messages"),h=t("./zlib/zstream"),l=t("./zlib/gzheader"),u=Object.prototype.toString;function c(t){if(!(this instanceof c))return new c(t);this.options=n.assign({chunkSize:16384,windowBits:0,to:""},t||{});var e=this.options;e.raw&&0<=e.windowBits&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(0<=e.windowBits&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),15<e.windowBits&&e.windowBits<48&&!(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new h,this.strm.avail_out=0;var i=r.inflateInit2(this.strm,e.windowBits);if(i!==a.Z_OK)throw new Error(o[i]);this.header=new l,r.inflateGetHeader(this.strm,this.header)}function d(t,e){var i=new c(e);if(i.push(t,!0),i.err)throw i.msg||o[i.err];return i.result}c.prototype.push=function(t,e){var i,o,h,l,c,d,f=this.strm,p=this.options.chunkSize,g=this.options.dictionary,m=!1;if(this.ended)return!1;o=e===~~e?e:!0===e?a.Z_FINISH:a.Z_NO_FLUSH,"string"==typeof t?f.input=s.binstring2buf(t):"[object ArrayBuffer]"===u.call(t)?f.input=new Uint8Array(t):f.input=t,f.next_in=0,f.avail_in=f.input.length;do{if(0===f.avail_out&&(f.output=new n.Buf8(p),f.next_out=0,f.avail_out=p),(i=r.inflate(f,a.Z_NO_FLUSH))===a.Z_NEED_DICT&&g&&(d="string"==typeof g?s.string2buf(g):"[object ArrayBuffer]"===u.call(g)?new Uint8Array(g):g,i=r.inflateSetDictionary(this.strm,d)),i===a.Z_BUF_ERROR&&!0===m&&(i=a.Z_OK,m=!1),i!==a.Z_STREAM_END&&i!==a.Z_OK)return this.onEnd(i),!(this.ended=!0);f.next_out&&(0!==f.avail_out&&i!==a.Z_STREAM_END&&(0!==f.avail_in||o!==a.Z_FINISH&&o!==a.Z_SYNC_FLUSH)||("string"===this.options.to?(h=s.utf8border(f.output,f.next_out),l=f.next_out-h,c=s.buf2string(f.output,h),f.next_out=l,f.avail_out=p-l,l&&n.arraySet(f.output,f.output,h,l,0),this.onData(c)):this.onData(n.shrinkBuf(f.output,f.next_out)))),0===f.avail_in&&0===f.avail_out&&(m=!0)}while((0<f.avail_in||0===f.avail_out)&&i!==a.Z_STREAM_END);return i===a.Z_STREAM_END&&(o=a.Z_FINISH),o===a.Z_FINISH?(i=r.inflateEnd(this.strm),this.onEnd(i),this.ended=!0,i===a.Z_OK):o!==a.Z_SYNC_FLUSH||(this.onEnd(a.Z_OK),!(f.avail_out=0))},c.prototype.onData=function(t){this.chunks.push(t)},c.prototype.onEnd=function(t){t===a.Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=n.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},i.Inflate=c,i.inflate=d,i.inflateRaw=function(t,e){return(e=e||{}).raw=!0,d(t,e)},i.ungzip=d},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(t,e,i){"use strict";var r="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;i.assign=function(t){for(var e=Array.prototype.slice.call(arguments,1);e.length;){var i=e.shift();if(i){if("object"!=typeof i)throw new TypeError(i+"must be non-object");for(var r in i)i.hasOwnProperty(r)&&(t[r]=i[r])}}return t},i.shrinkBuf=function(t,e){return t.length===e?t:t.subarray?t.subarray(0,e):(t.length=e,t)};var n={arraySet:function(t,e,i,r,n){if(e.subarray&&t.subarray)t.set(e.subarray(i,i+r),n);else for(var s=0;s<r;s++)t[n+s]=e[i+s]},flattenChunks:function(t){var e,i,r,n,s,a;for(e=r=0,i=t.length;e<i;e++)r+=t[e].length;for(a=new Uint8Array(r),e=n=0,i=t.length;e<i;e++)s=t[e],a.set(s,n),n+=s.length;return a}},s={arraySet:function(t,e,i,r,n){for(var s=0;s<r;s++)t[n+s]=e[i+s]},flattenChunks:function(t){return[].concat.apply([],t)}};i.setTyped=function(t){t?(i.Buf8=Uint8Array,i.Buf16=Uint16Array,i.Buf32=Int32Array,i.assign(i,n)):(i.Buf8=Array,i.Buf16=Array,i.Buf32=Array,i.assign(i,s))},i.setTyped(r)},{}],42:[function(t,e,i){"use strict";var r=t("./common"),n=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(t){n=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){s=!1}for(var a=new r.Buf8(256),o=0;o<256;o++)a[o]=252<=o?6:248<=o?5:240<=o?4:224<=o?3:192<=o?2:1;function h(t,e){if(e<65537&&(t.subarray&&s||!t.subarray&&n))return String.fromCharCode.apply(null,r.shrinkBuf(t,e));for(var i="",a=0;a<e;a++)i+=String.fromCharCode(t[a]);return i}a[254]=a[254]=1,i.string2buf=function(t){var e,i,n,s,a,o=t.length,h=0;for(s=0;s<o;s++)55296==(64512&(i=t.charCodeAt(s)))&&s+1<o&&56320==(64512&(n=t.charCodeAt(s+1)))&&(i=65536+(i-55296<<10)+(n-56320),s++),h+=i<128?1:i<2048?2:i<65536?3:4;for(e=new r.Buf8(h),s=a=0;a<h;s++)55296==(64512&(i=t.charCodeAt(s)))&&s+1<o&&56320==(64512&(n=t.charCodeAt(s+1)))&&(i=65536+(i-55296<<10)+(n-56320),s++),i<128?e[a++]=i:(i<2048?e[a++]=192|i>>>6:(i<65536?e[a++]=224|i>>>12:(e[a++]=240|i>>>18,e[a++]=128|i>>>12&63),e[a++]=128|i>>>6&63),e[a++]=128|63&i);return e},i.buf2binstring=function(t){return h(t,t.length)},i.binstring2buf=function(t){for(var e=new r.Buf8(t.length),i=0,n=e.length;i<n;i++)e[i]=t.charCodeAt(i);return e},i.buf2string=function(t,e){var i,r,n,s,o=e||t.length,l=new Array(2*o);for(i=r=0;i<o;)if((n=t[i++])<128)l[r++]=n;else if(4<(s=a[n]))l[r++]=65533,i+=s-1;else{for(n&=2===s?31:3===s?15:7;1<s&&i<o;)n=n<<6|63&t[i++],s--;1<s?l[r++]=65533:n<65536?l[r++]=n:(n-=65536,l[r++]=55296|n>>10&1023,l[r++]=56320|1023&n)}return h(l,r)},i.utf8border=function(t,e){var i;for((e=e||t.length)>t.length&&(e=t.length),i=e-1;0<=i&&128==(192&t[i]);)i--;return i<0||0===i?e:i+a[t[i]]>e?i:e}},{"./common":41}],43:[function(t,e,i){"use strict";e.exports=function(t,e,i,r){for(var n=65535&t,s=t>>>16&65535,a=0;0!==i;){for(i-=a=2e3<i?2e3:i;s=s+(n=n+e[r++]|0)|0,--a;);n%=65521,s%=65521}return n|s<<16}},{}],44:[function(t,e,i){"use strict";e.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(t,e,i){"use strict";var r=function(){for(var t,e=[],i=0;i<256;i++){t=i;for(var r=0;r<8;r++)t=1&t?3988292384^t>>>1:t>>>1;e[i]=t}return e}();e.exports=function(t,e,i,n){var s=r,a=n+i;t^=-1;for(var o=n;o<a;o++)t=t>>>8^s[255&(t^e[o])];return-1^t}},{}],46:[function(t,e,i){"use strict";var r,n=t("../utils/common"),s=t("./trees"),a=t("./adler32"),o=t("./crc32"),h=t("./messages"),l=-2,u=258,c=262,d=113;function f(t,e){return t.msg=h[e],e}function p(t){return(t<<1)-(4<t?9:0)}function g(t){for(var e=t.length;0<=--e;)t[e]=0}function m(t){var e=t.state,i=e.pending;i>t.avail_out&&(i=t.avail_out),0!==i&&(n.arraySet(t.output,e.pending_buf,e.pending_out,i,t.next_out),t.next_out+=i,e.pending_out+=i,t.total_out+=i,t.avail_out-=i,e.pending-=i,0===e.pending&&(e.pending_out=0))}function v(t,e){s._tr_flush_block(t,0<=t.block_start?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,m(t.strm)}function y(t,e){t.pending_buf[t.pending++]=e}function _(t,e){t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e}function w(t,e){var i,r,n=t.max_chain_length,s=t.strstart,a=t.prev_length,o=t.nice_match,h=t.strstart>t.w_size-c?t.strstart-(t.w_size-c):0,l=t.window,d=t.w_mask,f=t.prev,p=t.strstart+u,g=l[s+a-1],m=l[s+a];t.prev_length>=t.good_match&&(n>>=2),o>t.lookahead&&(o=t.lookahead);do{if(l[(i=e)+a]===m&&l[i+a-1]===g&&l[i]===l[s]&&l[++i]===l[s+1]){s+=2,i++;do{}while(l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&l[++s]===l[++i]&&s<p);if(r=u-(p-s),s=p-u,a<r){if(t.match_start=e,o<=(a=r))break;g=l[s+a-1],m=l[s+a]}}}while((e=f[e&d])>h&&0!=--n);return a<=t.lookahead?a:t.lookahead}function b(t){var e,i,r,s,h,l,u,d,f,p,g=t.w_size;do{if(s=t.window_size-t.lookahead-t.strstart,t.strstart>=g+(g-c)){for(n.arraySet(t.window,t.window,g,g,0),t.match_start-=g,t.strstart-=g,t.block_start-=g,e=i=t.hash_size;r=t.head[--e],t.head[e]=g<=r?r-g:0,--i;);for(e=i=g;r=t.prev[--e],t.prev[e]=g<=r?r-g:0,--i;);s+=g}if(0===t.strm.avail_in)break;if(l=t.strm,u=t.window,d=t.strstart+t.lookahead,p=void 0,(f=s)<(p=l.avail_in)&&(p=f),i=0===p?0:(l.avail_in-=p,n.arraySet(u,l.input,l.next_in,p,d),1===l.state.wrap?l.adler=a(l.adler,u,p,d):2===l.state.wrap&&(l.adler=o(l.adler,u,p,d)),l.next_in+=p,l.total_in+=p,p),t.lookahead+=i,t.lookahead+t.insert>=3)for(h=t.strstart-t.insert,t.ins_h=t.window[h],t.ins_h=(t.ins_h<<t.hash_shift^t.window[h+1])&t.hash_mask;t.insert&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[h+3-1])&t.hash_mask,t.prev[h&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=h,h++,t.insert--,!(t.lookahead+t.insert<3)););}while(t.lookahead<c&&0!==t.strm.avail_in)}function x(t,e){for(var i,r;;){if(t.lookahead<c){if(b(t),t.lookahead<c&&0===e)return 1;if(0===t.lookahead)break}if(i=0,t.lookahead>=3&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+3-1])&t.hash_mask,i=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==i&&t.strstart-i<=t.w_size-c&&(t.match_length=w(t,i)),t.match_length>=3)if(r=s._tr_tally(t,t.strstart-t.match_start,t.match_length-3),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=3){for(t.match_length--;t.strstart++,t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+3-1])&t.hash_mask,i=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart,0!=--t.match_length;);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+1])&t.hash_mask;else r=s._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(r&&(v(t,!1),0===t.strm.avail_out))return 1}return t.insert=t.strstart<2?t.strstart:2,4===e?(v(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(v(t,!1),0===t.strm.avail_out)?1:2}function S(t,e){for(var i,r,n;;){if(t.lookahead<c){if(b(t),t.lookahead<c&&0===e)return 1;if(0===t.lookahead)break}if(i=0,t.lookahead>=3&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+3-1])&t.hash_mask,i=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=2,0!==i&&t.prev_length<t.max_lazy_match&&t.strstart-i<=t.w_size-c&&(t.match_length=w(t,i),t.match_length<=5&&(1===t.strategy||3===t.match_length&&4096<t.strstart-t.match_start)&&(t.match_length=2)),t.prev_length>=3&&t.match_length<=t.prev_length){for(n=t.strstart+t.lookahead-3,r=s._tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-3),t.lookahead-=t.prev_length-1,t.prev_length-=2;++t.strstart<=n&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+3-1])&t.hash_mask,i=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!=--t.prev_length;);if(t.match_available=0,t.match_length=2,t.strstart++,r&&(v(t,!1),0===t.strm.avail_out))return 1}else if(t.match_available){if((r=s._tr_tally(t,0,t.window[t.strstart-1]))&&v(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return 1}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(r=s._tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<2?t.strstart:2,4===e?(v(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(v(t,!1),0===t.strm.avail_out)?1:2}function E(t,e,i,r,n){this.good_length=t,this.max_lazy=e,this.nice_length=i,this.max_chain=r,this.func=n}function C(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=8,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new n.Buf16(1146),this.dyn_dtree=new n.Buf16(122),this.bl_tree=new n.Buf16(78),g(this.dyn_ltree),g(this.dyn_dtree),g(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new n.Buf16(16),this.heap=new n.Buf16(573),g(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new n.Buf16(573),g(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function T(t){var e;return t&&t.state?(t.total_in=t.total_out=0,t.data_type=2,(e=t.state).pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap?42:d,t.adler=2===e.wrap?0:1,e.last_flush=0,s._tr_init(e),0):f(t,l)}function k(t){var e=T(t);return 0===e&&function(t){t.window_size=2*t.w_size,g(t.head),t.max_lazy_match=r[t.level].max_lazy,t.good_match=r[t.level].good_length,t.nice_match=r[t.level].nice_length,t.max_chain_length=r[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=2,t.match_available=0,t.ins_h=0}(t.state),e}function A(t,e,i,r,s,a){if(!t)return l;var o=1;if(-1===e&&(e=6),r<0?(o=0,r=-r):15<r&&(o=2,r-=16),s<1||9<s||8!==i||r<8||15<r||e<0||9<e||a<0||4<a)return f(t,l);8===r&&(r=9);var h=new C;return(t.state=h).strm=t,h.wrap=o,h.gzhead=null,h.w_bits=r,h.w_size=1<<h.w_bits,h.w_mask=h.w_size-1,h.hash_bits=s+7,h.hash_size=1<<h.hash_bits,h.hash_mask=h.hash_size-1,h.hash_shift=~~((h.hash_bits+3-1)/3),h.window=new n.Buf8(2*h.w_size),h.head=new n.Buf16(h.hash_size),h.prev=new n.Buf16(h.w_size),h.lit_bufsize=1<<s+6,h.pending_buf_size=4*h.lit_bufsize,h.pending_buf=new n.Buf8(h.pending_buf_size),h.d_buf=1*h.lit_bufsize,h.l_buf=3*h.lit_bufsize,h.level=e,h.strategy=a,h.method=i,k(t)}r=[new E(0,0,0,0,function(t,e){var i=65535;for(i>t.pending_buf_size-5&&(i=t.pending_buf_size-5);;){if(t.lookahead<=1){if(b(t),0===t.lookahead&&0===e)return 1;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;var r=t.block_start+i;if((0===t.strstart||t.strstart>=r)&&(t.lookahead=t.strstart-r,t.strstart=r,v(t,!1),0===t.strm.avail_out))return 1;if(t.strstart-t.block_start>=t.w_size-c&&(v(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,4===e?(v(t,!0),0===t.strm.avail_out?3:4):(t.strstart>t.block_start&&(v(t,!1),t.strm.avail_out),1)}),new E(4,4,8,4,x),new E(4,5,16,8,x),new E(4,6,32,32,x),new E(4,4,16,16,S),new E(8,16,32,32,S),new E(8,16,128,128,S),new E(8,32,128,256,S),new E(32,128,258,1024,S),new E(32,258,258,4096,S)],i.deflateInit=function(t,e){return A(t,e,8,15,8,0)},i.deflateInit2=A,i.deflateReset=k,i.deflateResetKeep=T,i.deflateSetHeader=function(t,e){return t&&t.state?2!==t.state.wrap?l:(t.state.gzhead=e,0):l},i.deflate=function(t,e){var i,n,a,h;if(!t||!t.state||5<e||e<0)return t?f(t,l):l;if(n=t.state,!t.output||!t.input&&0!==t.avail_in||666===n.status&&4!==e)return f(t,0===t.avail_out?-5:l);if(n.strm=t,i=n.last_flush,n.last_flush=e,42===n.status)if(2===n.wrap)t.adler=0,y(n,31),y(n,139),y(n,8),n.gzhead?(y(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),y(n,255&n.gzhead.time),y(n,n.gzhead.time>>8&255),y(n,n.gzhead.time>>16&255),y(n,n.gzhead.time>>24&255),y(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),y(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(y(n,255&n.gzhead.extra.length),y(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(t.adler=o(t.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69):(y(n,0),y(n,0),y(n,0),y(n,0),y(n,0),y(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),y(n,3),n.status=d);else{var c=8+(n.w_bits-8<<4)<<8;c|=(2<=n.strategy||n.level<2?0:n.level<6?1:6===n.level?2:3)<<6,0!==n.strstart&&(c|=32),c+=31-c%31,n.status=d,_(n,c),0!==n.strstart&&(_(n,t.adler>>>16),_(n,65535&t.adler)),t.adler=1}if(69===n.status)if(n.gzhead.extra){for(a=n.pending;n.gzindex<(65535&n.gzhead.extra.length)&&(n.pending!==n.pending_buf_size||(n.gzhead.hcrc&&n.pending>a&&(t.adler=o(t.adler,n.pending_buf,n.pending-a,a)),m(t),a=n.pending,n.pending!==n.pending_buf_size));)y(n,255&n.gzhead.extra[n.gzindex]),n.gzindex++;n.gzhead.hcrc&&n.pending>a&&(t.adler=o(t.adler,n.pending_buf,n.pending-a,a)),n.gzindex===n.gzhead.extra.length&&(n.gzindex=0,n.status=73)}else n.status=73;if(73===n.status)if(n.gzhead.name){a=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>a&&(t.adler=o(t.adler,n.pending_buf,n.pending-a,a)),m(t),a=n.pending,n.pending===n.pending_buf_size)){h=1;break}h=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,y(n,h)}while(0!==h);n.gzhead.hcrc&&n.pending>a&&(t.adler=o(t.adler,n.pending_buf,n.pending-a,a)),0===h&&(n.gzindex=0,n.status=91)}else n.status=91;if(91===n.status)if(n.gzhead.comment){a=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>a&&(t.adler=o(t.adler,n.pending_buf,n.pending-a,a)),m(t),a=n.pending,n.pending===n.pending_buf_size)){h=1;break}h=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,y(n,h)}while(0!==h);n.gzhead.hcrc&&n.pending>a&&(t.adler=o(t.adler,n.pending_buf,n.pending-a,a)),0===h&&(n.status=103)}else n.status=103;if(103===n.status&&(n.gzhead.hcrc?(n.pending+2>n.pending_buf_size&&m(t),n.pending+2<=n.pending_buf_size&&(y(n,255&t.adler),y(n,t.adler>>8&255),t.adler=0,n.status=d)):n.status=d),0!==n.pending){if(m(t),0===t.avail_out)return n.last_flush=-1,0}else if(0===t.avail_in&&p(e)<=p(i)&&4!==e)return f(t,-5);if(666===n.status&&0!==t.avail_in)return f(t,-5);if(0!==t.avail_in||0!==n.lookahead||0!==e&&666!==n.status){var w=2===n.strategy?function(t,e){for(var i;;){if(0===t.lookahead&&(b(t),0===t.lookahead)){if(0===e)return 1;break}if(t.match_length=0,i=s._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,i&&(v(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,4===e?(v(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(v(t,!1),0===t.strm.avail_out)?1:2}(n,e):3===n.strategy?function(t,e){for(var i,r,n,a,o=t.window;;){if(t.lookahead<=u){if(b(t),t.lookahead<=u&&0===e)return 1;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=3&&0<t.strstart&&(r=o[n=t.strstart-1])===o[++n]&&r===o[++n]&&r===o[++n]){a=t.strstart+u;do{}while(r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&n<a);t.match_length=u-(a-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=3?(i=s._tr_tally(t,1,t.match_length-3),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(i=s._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),i&&(v(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,4===e?(v(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(v(t,!1),0===t.strm.avail_out)?1:2}(n,e):r[n.level].func(n,e);if(3!==w&&4!==w||(n.status=666),1===w||3===w)return 0===t.avail_out&&(n.last_flush=-1),0;if(2===w&&(1===e?s._tr_align(n):5!==e&&(s._tr_stored_block(n,0,0,!1),3===e&&(g(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),m(t),0===t.avail_out))return n.last_flush=-1,0}return 4!==e?0:n.wrap<=0?1:(2===n.wrap?(y(n,255&t.adler),y(n,t.adler>>8&255),y(n,t.adler>>16&255),y(n,t.adler>>24&255),y(n,255&t.total_in),y(n,t.total_in>>8&255),y(n,t.total_in>>16&255),y(n,t.total_in>>24&255)):(_(n,t.adler>>>16),_(n,65535&t.adler)),m(t),0<n.wrap&&(n.wrap=-n.wrap),0!==n.pending?0:1)},i.deflateEnd=function(t){var e;return t&&t.state?42!==(e=t.state.status)&&69!==e&&73!==e&&91!==e&&103!==e&&e!==d&&666!==e?f(t,l):(t.state=null,e===d?f(t,-3):0):l},i.deflateSetDictionary=function(t,e){var i,r,s,o,h,u,c,d,f=e.length;if(!t||!t.state)return l;if(2===(o=(i=t.state).wrap)||1===o&&42!==i.status||i.lookahead)return l;for(1===o&&(t.adler=a(t.adler,e,f,0)),i.wrap=0,f>=i.w_size&&(0===o&&(g(i.head),i.strstart=0,i.block_start=0,i.insert=0),d=new n.Buf8(i.w_size),n.arraySet(d,e,f-i.w_size,i.w_size,0),e=d,f=i.w_size),h=t.avail_in,u=t.next_in,c=t.input,t.avail_in=f,t.next_in=0,t.input=e,b(i);i.lookahead>=3;){for(r=i.strstart,s=i.lookahead-2;i.ins_h=(i.ins_h<<i.hash_shift^i.window[r+3-1])&i.hash_mask,i.prev[r&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=r,r++,--s;);i.strstart=r,i.lookahead=2,b(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,t.next_in=u,t.input=c,t.avail_in=h,i.wrap=o,0},i.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(t,e,i){"use strict";e.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},{}],48:[function(t,e,i){"use strict";e.exports=function(t,e){var i,r,n,s,a,o,h,l,u,c,d,f,p,g,m,v,y,_,w,b,x,S,E,C,T;i=t.state,r=t.next_in,C=t.input,n=r+(t.avail_in-5),s=t.next_out,T=t.output,a=s-(e-t.avail_out),o=s+(t.avail_out-257),h=i.dmax,l=i.wsize,u=i.whave,c=i.wnext,d=i.window,f=i.hold,p=i.bits,g=i.lencode,m=i.distcode,v=(1<<i.lenbits)-1,y=(1<<i.distbits)-1;t:do{p<15&&(f+=C[r++]<<p,p+=8,f+=C[r++]<<p,p+=8),_=g[f&v];e:for(;;){if(f>>>=w=_>>>24,p-=w,0==(w=_>>>16&255))T[s++]=65535&_;else{if(!(16&w)){if(!(64&w)){_=g[(65535&_)+(f&(1<<w)-1)];continue e}if(32&w){i.mode=12;break t}t.msg="invalid literal/length code",i.mode=30;break t}b=65535&_,(w&=15)&&(p<w&&(f+=C[r++]<<p,p+=8),b+=f&(1<<w)-1,f>>>=w,p-=w),p<15&&(f+=C[r++]<<p,p+=8,f+=C[r++]<<p,p+=8),_=m[f&y];i:for(;;){if(f>>>=w=_>>>24,p-=w,!(16&(w=_>>>16&255))){if(!(64&w)){_=m[(65535&_)+(f&(1<<w)-1)];continue i}t.msg="invalid distance code",i.mode=30;break t}if(x=65535&_,p<(w&=15)&&(f+=C[r++]<<p,(p+=8)<w&&(f+=C[r++]<<p,p+=8)),h<(x+=f&(1<<w)-1)){t.msg="invalid distance too far back",i.mode=30;break t}if(f>>>=w,p-=w,(w=s-a)<x){if(u<(w=x-w)&&i.sane){t.msg="invalid distance too far back",i.mode=30;break t}if(E=d,(S=0)===c){if(S+=l-w,w<b){for(b-=w;T[s++]=d[S++],--w;);S=s-x,E=T}}else if(c<w){if(S+=l+c-w,(w-=c)<b){for(b-=w;T[s++]=d[S++],--w;);if(S=0,c<b){for(b-=w=c;T[s++]=d[S++],--w;);S=s-x,E=T}}}else if(S+=c-w,w<b){for(b-=w;T[s++]=d[S++],--w;);S=s-x,E=T}for(;2<b;)T[s++]=E[S++],T[s++]=E[S++],T[s++]=E[S++],b-=3;b&&(T[s++]=E[S++],1<b&&(T[s++]=E[S++]))}else{for(S=s-x;T[s++]=T[S++],T[s++]=T[S++],T[s++]=T[S++],2<(b-=3););b&&(T[s++]=T[S++],1<b&&(T[s++]=T[S++]))}break}}break}}while(r<n&&s<o);r-=b=p>>3,f&=(1<<(p-=b<<3))-1,t.next_in=r,t.next_out=s,t.avail_in=r<n?n-r+5:5-(r-n),t.avail_out=s<o?o-s+257:257-(s-o),i.hold=f,i.bits=p}},{}],49:[function(t,e,i){"use strict";var r=t("../utils/common"),n=t("./adler32"),s=t("./crc32"),a=t("./inffast"),o=t("./inftrees"),h=-2;function l(t){return(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24)}function u(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new r.Buf16(320),this.work=new r.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function c(t){var e;return t&&t.state?(e=t.state,t.total_in=t.total_out=e.total=0,t.msg="",e.wrap&&(t.adler=1&e.wrap),e.mode=1,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new r.Buf32(852),e.distcode=e.distdyn=new r.Buf32(592),e.sane=1,e.back=-1,0):h}function d(t){var e;return t&&t.state?((e=t.state).wsize=0,e.whave=0,e.wnext=0,c(t)):h}function f(t,e){var i,r;return t&&t.state?(r=t.state,e<0?(i=0,e=-e):(i=1+(e>>4),e<48&&(e&=15)),e&&(e<8||15<e)?h:(null!==r.window&&r.wbits!==e&&(r.window=null),r.wrap=i,r.wbits=e,d(t))):h}function p(t,e){var i,r;return t?(r=new u,(t.state=r).window=null,0!==(i=f(t,e))&&(t.state=null),i):h}var g,m,v=!0;function y(t){if(v){var e;for(g=new r.Buf32(512),m=new r.Buf32(32),e=0;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(o(1,t.lens,0,288,g,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;o(2,t.lens,0,32,m,0,t.work,{bits:5}),v=!1}t.lencode=g,t.lenbits=9,t.distcode=m,t.distbits=5}function _(t,e,i,n){var s,a=t.state;return null===a.window&&(a.wsize=1<<a.wbits,a.wnext=0,a.whave=0,a.window=new r.Buf8(a.wsize)),n>=a.wsize?(r.arraySet(a.window,e,i-a.wsize,a.wsize,0),a.wnext=0,a.whave=a.wsize):(n<(s=a.wsize-a.wnext)&&(s=n),r.arraySet(a.window,e,i-n,s,a.wnext),(n-=s)?(r.arraySet(a.window,e,i-n,n,0),a.wnext=n,a.whave=a.wsize):(a.wnext+=s,a.wnext===a.wsize&&(a.wnext=0),a.whave<a.wsize&&(a.whave+=s))),0}i.inflateReset=d,i.inflateReset2=f,i.inflateResetKeep=c,i.inflateInit=function(t){return p(t,15)},i.inflateInit2=p,i.inflate=function(t,e){var i,u,c,d,f,p,g,m,v,w,b,x,S,E,C,T,k,A,O,R,I,F,L,D,P=0,B=new r.Buf8(4),z=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return h;12===(i=t.state).mode&&(i.mode=13),f=t.next_out,c=t.output,g=t.avail_out,d=t.next_in,u=t.input,p=t.avail_in,m=i.hold,v=i.bits,w=p,b=g,F=0;t:for(;;)switch(i.mode){case 1:if(0===i.wrap){i.mode=13;break}for(;v<16;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}if(2&i.wrap&&35615===m){B[i.check=0]=255&m,B[1]=m>>>8&255,i.check=s(i.check,B,2,0),v=m=0,i.mode=2;break}if(i.flags=0,i.head&&(i.head.done=!1),!(1&i.wrap)||(((255&m)<<8)+(m>>8))%31){t.msg="incorrect header check",i.mode=30;break}if(8!=(15&m)){t.msg="unknown compression method",i.mode=30;break}if(v-=4,I=8+(15&(m>>>=4)),0===i.wbits)i.wbits=I;else if(I>i.wbits){t.msg="invalid window size",i.mode=30;break}i.dmax=1<<I,t.adler=i.check=1,i.mode=512&m?10:12,v=m=0;break;case 2:for(;v<16;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}if(i.flags=m,8!=(255&i.flags)){t.msg="unknown compression method",i.mode=30;break}if(57344&i.flags){t.msg="unknown header flags set",i.mode=30;break}i.head&&(i.head.text=m>>8&1),512&i.flags&&(B[0]=255&m,B[1]=m>>>8&255,i.check=s(i.check,B,2,0)),v=m=0,i.mode=3;case 3:for(;v<32;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}i.head&&(i.head.time=m),512&i.flags&&(B[0]=255&m,B[1]=m>>>8&255,B[2]=m>>>16&255,B[3]=m>>>24&255,i.check=s(i.check,B,4,0)),v=m=0,i.mode=4;case 4:for(;v<16;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}i.head&&(i.head.xflags=255&m,i.head.os=m>>8),512&i.flags&&(B[0]=255&m,B[1]=m>>>8&255,i.check=s(i.check,B,2,0)),v=m=0,i.mode=5;case 5:if(1024&i.flags){for(;v<16;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}i.length=m,i.head&&(i.head.extra_len=m),512&i.flags&&(B[0]=255&m,B[1]=m>>>8&255,i.check=s(i.check,B,2,0)),v=m=0}else i.head&&(i.head.extra=null);i.mode=6;case 6:if(1024&i.flags&&(p<(x=i.length)&&(x=p),x&&(i.head&&(I=i.head.extra_len-i.length,i.head.extra||(i.head.extra=new Array(i.head.extra_len)),r.arraySet(i.head.extra,u,d,x,I)),512&i.flags&&(i.check=s(i.check,u,x,d)),p-=x,d+=x,i.length-=x),i.length))break t;i.length=0,i.mode=7;case 7:if(2048&i.flags){if(0===p)break t;for(x=0;I=u[d+x++],i.head&&I&&i.length<65536&&(i.head.name+=String.fromCharCode(I)),I&&x<p;);if(512&i.flags&&(i.check=s(i.check,u,x,d)),p-=x,d+=x,I)break t}else i.head&&(i.head.name=null);i.length=0,i.mode=8;case 8:if(4096&i.flags){if(0===p)break t;for(x=0;I=u[d+x++],i.head&&I&&i.length<65536&&(i.head.comment+=String.fromCharCode(I)),I&&x<p;);if(512&i.flags&&(i.check=s(i.check,u,x,d)),p-=x,d+=x,I)break t}else i.head&&(i.head.comment=null);i.mode=9;case 9:if(512&i.flags){for(;v<16;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}if(m!==(65535&i.check)){t.msg="header crc mismatch",i.mode=30;break}v=m=0}i.head&&(i.head.hcrc=i.flags>>9&1,i.head.done=!0),t.adler=i.check=0,i.mode=12;break;case 10:for(;v<32;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}t.adler=i.check=l(m),v=m=0,i.mode=11;case 11:if(0===i.havedict)return t.next_out=f,t.avail_out=g,t.next_in=d,t.avail_in=p,i.hold=m,i.bits=v,2;t.adler=i.check=1,i.mode=12;case 12:if(5===e||6===e)break t;case 13:if(i.last){m>>>=7&v,v-=7&v,i.mode=27;break}for(;v<3;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}switch(i.last=1&m,v-=1,3&(m>>>=1)){case 0:i.mode=14;break;case 1:if(y(i),i.mode=20,6!==e)break;m>>>=2,v-=2;break t;case 2:i.mode=17;break;case 3:t.msg="invalid block type",i.mode=30}m>>>=2,v-=2;break;case 14:for(m>>>=7&v,v-=7&v;v<32;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}if((65535&m)!=(m>>>16^65535)){t.msg="invalid stored block lengths",i.mode=30;break}if(i.length=65535&m,v=m=0,i.mode=15,6===e)break t;case 15:i.mode=16;case 16:if(x=i.length){if(p<x&&(x=p),g<x&&(x=g),0===x)break t;r.arraySet(c,u,d,x,f),p-=x,d+=x,g-=x,f+=x,i.length-=x;break}i.mode=12;break;case 17:for(;v<14;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}if(i.nlen=257+(31&m),m>>>=5,v-=5,i.ndist=1+(31&m),m>>>=5,v-=5,i.ncode=4+(15&m),m>>>=4,v-=4,286<i.nlen||30<i.ndist){t.msg="too many length or distance symbols",i.mode=30;break}i.have=0,i.mode=18;case 18:for(;i.have<i.ncode;){for(;v<3;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}i.lens[z[i.have++]]=7&m,m>>>=3,v-=3}for(;i.have<19;)i.lens[z[i.have++]]=0;if(i.lencode=i.lendyn,i.lenbits=7,L={bits:i.lenbits},F=o(0,i.lens,0,19,i.lencode,0,i.work,L),i.lenbits=L.bits,F){t.msg="invalid code lengths set",i.mode=30;break}i.have=0,i.mode=19;case 19:for(;i.have<i.nlen+i.ndist;){for(;T=(P=i.lencode[m&(1<<i.lenbits)-1])>>>16&255,k=65535&P,!((C=P>>>24)<=v);){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}if(k<16)m>>>=C,v-=C,i.lens[i.have++]=k;else{if(16===k){for(D=C+2;v<D;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}if(m>>>=C,v-=C,0===i.have){t.msg="invalid bit length repeat",i.mode=30;break}I=i.lens[i.have-1],x=3+(3&m),m>>>=2,v-=2}else if(17===k){for(D=C+3;v<D;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}v-=C,I=0,x=3+(7&(m>>>=C)),m>>>=3,v-=3}else{for(D=C+7;v<D;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}v-=C,I=0,x=11+(127&(m>>>=C)),m>>>=7,v-=7}if(i.have+x>i.nlen+i.ndist){t.msg="invalid bit length repeat",i.mode=30;break}for(;x--;)i.lens[i.have++]=I}}if(30===i.mode)break;if(0===i.lens[256]){t.msg="invalid code -- missing end-of-block",i.mode=30;break}if(i.lenbits=9,L={bits:i.lenbits},F=o(1,i.lens,0,i.nlen,i.lencode,0,i.work,L),i.lenbits=L.bits,F){t.msg="invalid literal/lengths set",i.mode=30;break}if(i.distbits=6,i.distcode=i.distdyn,L={bits:i.distbits},F=o(2,i.lens,i.nlen,i.ndist,i.distcode,0,i.work,L),i.distbits=L.bits,F){t.msg="invalid distances set",i.mode=30;break}if(i.mode=20,6===e)break t;case 20:i.mode=21;case 21:if(6<=p&&258<=g){t.next_out=f,t.avail_out=g,t.next_in=d,t.avail_in=p,i.hold=m,i.bits=v,a(t,b),f=t.next_out,c=t.output,g=t.avail_out,d=t.next_in,u=t.input,p=t.avail_in,m=i.hold,v=i.bits,12===i.mode&&(i.back=-1);break}for(i.back=0;T=(P=i.lencode[m&(1<<i.lenbits)-1])>>>16&255,k=65535&P,!((C=P>>>24)<=v);){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}if(T&&!(240&T)){for(A=C,O=T,R=k;T=(P=i.lencode[R+((m&(1<<A+O)-1)>>A)])>>>16&255,k=65535&P,!(A+(C=P>>>24)<=v);){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}m>>>=A,v-=A,i.back+=A}if(m>>>=C,v-=C,i.back+=C,i.length=k,0===T){i.mode=26;break}if(32&T){i.back=-1,i.mode=12;break}if(64&T){t.msg="invalid literal/length code",i.mode=30;break}i.extra=15&T,i.mode=22;case 22:if(i.extra){for(D=i.extra;v<D;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}i.length+=m&(1<<i.extra)-1,m>>>=i.extra,v-=i.extra,i.back+=i.extra}i.was=i.length,i.mode=23;case 23:for(;T=(P=i.distcode[m&(1<<i.distbits)-1])>>>16&255,k=65535&P,!((C=P>>>24)<=v);){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}if(!(240&T)){for(A=C,O=T,R=k;T=(P=i.distcode[R+((m&(1<<A+O)-1)>>A)])>>>16&255,k=65535&P,!(A+(C=P>>>24)<=v);){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}m>>>=A,v-=A,i.back+=A}if(m>>>=C,v-=C,i.back+=C,64&T){t.msg="invalid distance code",i.mode=30;break}i.offset=k,i.extra=15&T,i.mode=24;case 24:if(i.extra){for(D=i.extra;v<D;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}i.offset+=m&(1<<i.extra)-1,m>>>=i.extra,v-=i.extra,i.back+=i.extra}if(i.offset>i.dmax){t.msg="invalid distance too far back",i.mode=30;break}i.mode=25;case 25:if(0===g)break t;if(x=b-g,i.offset>x){if((x=i.offset-x)>i.whave&&i.sane){t.msg="invalid distance too far back",i.mode=30;break}S=x>i.wnext?(x-=i.wnext,i.wsize-x):i.wnext-x,x>i.length&&(x=i.length),E=i.window}else E=c,S=f-i.offset,x=i.length;for(g<x&&(x=g),g-=x,i.length-=x;c[f++]=E[S++],--x;);0===i.length&&(i.mode=21);break;case 26:if(0===g)break t;c[f++]=i.length,g--,i.mode=21;break;case 27:if(i.wrap){for(;v<32;){if(0===p)break t;p--,m|=u[d++]<<v,v+=8}if(b-=g,t.total_out+=b,i.total+=b,b&&(t.adler=i.check=i.flags?s(i.check,c,b,f-b):n(i.check,c,b,f-b)),b=g,(i.flags?m:l(m))!==i.check){t.msg="incorrect data check",i.mode=30;break}v=m=0}i.mode=28;case 28:if(i.wrap&&i.flags){for(;v<32;){if(0===p)break t;p--,m+=u[d++]<<v,v+=8}if(m!==(4294967295&i.total)){t.msg="incorrect length check",i.mode=30;break}v=m=0}i.mode=29;case 29:F=1;break t;case 30:F=-3;break t;case 31:return-4;default:return h}return t.next_out=f,t.avail_out=g,t.next_in=d,t.avail_in=p,i.hold=m,i.bits=v,(i.wsize||b!==t.avail_out&&i.mode<30&&(i.mode<27||4!==e))&&_(t,t.output,t.next_out,b-t.avail_out)?(i.mode=31,-4):(w-=t.avail_in,b-=t.avail_out,t.total_in+=w,t.total_out+=b,i.total+=b,i.wrap&&b&&(t.adler=i.check=i.flags?s(i.check,c,b,t.next_out-b):n(i.check,c,b,t.next_out-b)),t.data_type=i.bits+(i.last?64:0)+(12===i.mode?128:0)+(20===i.mode||15===i.mode?256:0),(0==w&&0===b||4===e)&&0===F&&(F=-5),F)},i.inflateEnd=function(t){if(!t||!t.state)return h;var e=t.state;return e.window&&(e.window=null),t.state=null,0},i.inflateGetHeader=function(t,e){var i;return t&&t.state&&2&(i=t.state).wrap?((i.head=e).done=!1,0):h},i.inflateSetDictionary=function(t,e){var i,r=e.length;return t&&t.state?0!==(i=t.state).wrap&&11!==i.mode?h:11===i.mode&&n(1,e,r,0)!==i.check?-3:_(t,e,r,r)?(i.mode=31,-4):(i.havedict=1,0):h},i.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(t,e,i){"use strict";var r=t("../utils/common"),n=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],s=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],a=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],o=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];e.exports=function(t,e,i,h,l,u,c,d){var f,p,g,m,v,y,_,w,b,x=d.bits,S=0,E=0,C=0,T=0,k=0,A=0,O=0,R=0,I=0,F=0,L=null,D=0,P=new r.Buf16(16),B=new r.Buf16(16),z=null,M=0;for(S=0;S<=15;S++)P[S]=0;for(E=0;E<h;E++)P[e[i+E]]++;for(k=x,T=15;1<=T&&0===P[T];T--);if(T<k&&(k=T),0===T)return l[u++]=20971520,l[u++]=20971520,d.bits=1,0;for(C=1;C<T&&0===P[C];C++);for(k<C&&(k=C),S=R=1;S<=15;S++)if(R<<=1,(R-=P[S])<0)return-1;if(0<R&&(0===t||1!==T))return-1;for(B[1]=0,S=1;S<15;S++)B[S+1]=B[S]+P[S];for(E=0;E<h;E++)0!==e[i+E]&&(c[B[e[i+E]]++]=E);if(y=0===t?(L=z=c,19):1===t?(L=n,D-=257,z=s,M-=257,256):(L=a,z=o,-1),S=C,v=u,O=E=F=0,g=-1,m=(I=1<<(A=k))-1,1===t&&852<I||2===t&&592<I)return 1;for(;;){for(_=S-O,b=c[E]<y?(w=0,c[E]):c[E]>y?(w=z[M+c[E]],L[D+c[E]]):(w=96,0),f=1<<S-O,C=p=1<<A;l[v+(F>>O)+(p-=f)]=_<<24|w<<16|b,0!==p;);for(f=1<<S-1;F&f;)f>>=1;if(0!==f?(F&=f-1,F+=f):F=0,E++,0==--P[S]){if(S===T)break;S=e[i+c[E]]}if(k<S&&(F&m)!==g){for(0===O&&(O=k),v+=C,R=1<<(A=S-O);A+O<T&&!((R-=P[A+O])<=0);)A++,R<<=1;if(I+=1<<A,1===t&&852<I||2===t&&592<I)return 1;l[g=F&m]=k<<24|A<<16|v-u}}return 0!==F&&(l[v+F]=S-O<<24|64<<16),d.bits=k,0}},{"../utils/common":41}],51:[function(t,e,i){"use strict";e.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(t,e,i){"use strict";var r=t("../utils/common");function n(t){for(var e=t.length;0<=--e;)t[e]=0}var s=256,a=286,o=30,h=15,l=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],u=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],c=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],d=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],f=new Array(576);n(f);var p=new Array(60);n(p);var g=new Array(512);n(g);var m=new Array(256);n(m);var v=new Array(29);n(v);var y,_,w,b=new Array(o);function x(t,e,i,r,n){this.static_tree=t,this.extra_bits=e,this.extra_base=i,this.elems=r,this.max_length=n,this.has_stree=t&&t.length}function S(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}function E(t){return t<256?g[t]:g[256+(t>>>7)]}function C(t,e){t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255}function T(t,e,i){t.bi_valid>16-i?(t.bi_buf|=e<<t.bi_valid&65535,C(t,t.bi_buf),t.bi_buf=e>>16-t.bi_valid,t.bi_valid+=i-16):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=i)}function k(t,e,i){T(t,i[2*e],i[2*e+1])}function A(t,e){for(var i=0;i|=1&t,t>>>=1,i<<=1,0<--e;);return i>>>1}function O(t,e,i){var r,n,s=new Array(16),a=0;for(r=1;r<=h;r++)s[r]=a=a+i[r-1]<<1;for(n=0;n<=e;n++){var o=t[2*n+1];0!==o&&(t[2*n]=A(s[o]++,o))}}function R(t){var e;for(e=0;e<a;e++)t.dyn_ltree[2*e]=0;for(e=0;e<o;e++)t.dyn_dtree[2*e]=0;for(e=0;e<19;e++)t.bl_tree[2*e]=0;t.dyn_ltree[512]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0}function I(t){8<t.bi_valid?C(t,t.bi_buf):0<t.bi_valid&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0}function F(t,e,i,r){var n=2*e,s=2*i;return t[n]<t[s]||t[n]===t[s]&&r[e]<=r[i]}function L(t,e,i){for(var r=t.heap[i],n=i<<1;n<=t.heap_len&&(n<t.heap_len&&F(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!F(e,r,t.heap[n],t.depth));)t.heap[i]=t.heap[n],i=n,n<<=1;t.heap[i]=r}function D(t,e,i){var r,n,a,o,h=0;if(0!==t.last_lit)for(;r=t.pending_buf[t.d_buf+2*h]<<8|t.pending_buf[t.d_buf+2*h+1],n=t.pending_buf[t.l_buf+h],h++,0===r?k(t,n,e):(k(t,(a=m[n])+s+1,e),0!==(o=l[a])&&T(t,n-=v[a],o),k(t,a=E(--r),i),0!==(o=u[a])&&T(t,r-=b[a],o)),h<t.last_lit;);k(t,256,e)}function P(t,e){var i,r,n,s=e.dyn_tree,a=e.stat_desc.static_tree,o=e.stat_desc.has_stree,l=e.stat_desc.elems,u=-1;for(t.heap_len=0,t.heap_max=573,i=0;i<l;i++)0!==s[2*i]?(t.heap[++t.heap_len]=u=i,t.depth[i]=0):s[2*i+1]=0;for(;t.heap_len<2;)s[2*(n=t.heap[++t.heap_len]=u<2?++u:0)]=1,t.depth[n]=0,t.opt_len--,o&&(t.static_len-=a[2*n+1]);for(e.max_code=u,i=t.heap_len>>1;1<=i;i--)L(t,s,i);for(n=l;i=t.heap[1],t.heap[1]=t.heap[t.heap_len--],L(t,s,1),r=t.heap[1],t.heap[--t.heap_max]=i,t.heap[--t.heap_max]=r,s[2*n]=s[2*i]+s[2*r],t.depth[n]=(t.depth[i]>=t.depth[r]?t.depth[i]:t.depth[r])+1,s[2*i+1]=s[2*r+1]=n,t.heap[1]=n++,L(t,s,1),2<=t.heap_len;);t.heap[--t.heap_max]=t.heap[1],function(t,e){var i,r,n,s,a,o,l=e.dyn_tree,u=e.max_code,c=e.stat_desc.static_tree,d=e.stat_desc.has_stree,f=e.stat_desc.extra_bits,p=e.stat_desc.extra_base,g=e.stat_desc.max_length,m=0;for(s=0;s<=h;s++)t.bl_count[s]=0;for(l[2*t.heap[t.heap_max]+1]=0,i=t.heap_max+1;i<573;i++)g<(s=l[2*l[2*(r=t.heap[i])+1]+1]+1)&&(s=g,m++),l[2*r+1]=s,u<r||(t.bl_count[s]++,a=0,p<=r&&(a=f[r-p]),o=l[2*r],t.opt_len+=o*(s+a),d&&(t.static_len+=o*(c[2*r+1]+a)));if(0!==m){do{for(s=g-1;0===t.bl_count[s];)s--;t.bl_count[s]--,t.bl_count[s+1]+=2,t.bl_count[g]--,m-=2}while(0<m);for(s=g;0!==s;s--)for(r=t.bl_count[s];0!==r;)u<(n=t.heap[--i])||(l[2*n+1]!==s&&(t.opt_len+=(s-l[2*n+1])*l[2*n],l[2*n+1]=s),r--)}}(t,e),O(s,u,t.bl_count)}function B(t,e,i){var r,n,s=-1,a=e[1],o=0,h=7,l=4;for(0===a&&(h=138,l=3),e[2*(i+1)+1]=65535,r=0;r<=i;r++)n=a,a=e[2*(r+1)+1],++o<h&&n===a||(o<l?t.bl_tree[2*n]+=o:0!==n?(n!==s&&t.bl_tree[2*n]++,t.bl_tree[32]++):o<=10?t.bl_tree[34]++:t.bl_tree[36]++,s=n,l=(o=0)===a?(h=138,3):n===a?(h=6,3):(h=7,4))}function z(t,e,i){var r,n,s=-1,a=e[1],o=0,h=7,l=4;for(0===a&&(h=138,l=3),r=0;r<=i;r++)if(n=a,a=e[2*(r+1)+1],!(++o<h&&n===a)){if(o<l)for(;k(t,n,t.bl_tree),0!=--o;);else 0!==n?(n!==s&&(k(t,n,t.bl_tree),o--),k(t,16,t.bl_tree),T(t,o-3,2)):o<=10?(k(t,17,t.bl_tree),T(t,o-3,3)):(k(t,18,t.bl_tree),T(t,o-11,7));s=n,l=(o=0)===a?(h=138,3):n===a?(h=6,3):(h=7,4)}}n(b);var M=!1;function U(t,e,i,n){T(t,0+(n?1:0),3),function(t,e,i){I(t),C(t,i),C(t,~i),r.arraySet(t.pending_buf,t.window,e,i,t.pending),t.pending+=i}(t,e,i)}i._tr_init=function(t){M||(function(){var t,e,i,r,n,s=new Array(16);for(r=i=0;r<28;r++)for(v[r]=i,t=0;t<1<<l[r];t++)m[i++]=r;for(m[i-1]=r,r=n=0;r<16;r++)for(b[r]=n,t=0;t<1<<u[r];t++)g[n++]=r;for(n>>=7;r<o;r++)for(b[r]=n<<7,t=0;t<1<<u[r]-7;t++)g[256+n++]=r;for(e=0;e<=h;e++)s[e]=0;for(t=0;t<=143;)f[2*t+1]=8,t++,s[8]++;for(;t<=255;)f[2*t+1]=9,t++,s[9]++;for(;t<=279;)f[2*t+1]=7,t++,s[7]++;for(;t<=287;)f[2*t+1]=8,t++,s[8]++;for(O(f,287,s),t=0;t<o;t++)p[2*t+1]=5,p[2*t]=A(t,5);y=new x(f,l,257,a,h),_=new x(p,u,0,o,h),w=new x(new Array(0),c,0,19,7)}(),M=!0),t.l_desc=new S(t.dyn_ltree,y),t.d_desc=new S(t.dyn_dtree,_),t.bl_desc=new S(t.bl_tree,w),t.bi_buf=0,t.bi_valid=0,R(t)},i._tr_stored_block=U,i._tr_flush_block=function(t,e,i,r){var n,a,o=0;0<t.level?(2===t.strm.data_type&&(t.strm.data_type=function(t){var e,i=4093624447;for(e=0;e<=31;e++,i>>>=1)if(1&i&&0!==t.dyn_ltree[2*e])return 0;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return 1;for(e=32;e<s;e++)if(0!==t.dyn_ltree[2*e])return 1;return 0}(t)),P(t,t.l_desc),P(t,t.d_desc),o=function(t){var e;for(B(t,t.dyn_ltree,t.l_desc.max_code),B(t,t.dyn_dtree,t.d_desc.max_code),P(t,t.bl_desc),e=18;3<=e&&0===t.bl_tree[2*d[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e}(t),n=t.opt_len+3+7>>>3,(a=t.static_len+3+7>>>3)<=n&&(n=a)):n=a=i+5,i+4<=n&&-1!==e?U(t,e,i,r):4===t.strategy||a===n?(T(t,2+(r?1:0),3),D(t,f,p)):(T(t,4+(r?1:0),3),function(t,e,i,r){var n;for(T(t,e-257,5),T(t,i-1,5),T(t,r-4,4),n=0;n<r;n++)T(t,t.bl_tree[2*d[n]+1],3);z(t,t.dyn_ltree,e-1),z(t,t.dyn_dtree,i-1)}(t,t.l_desc.max_code+1,t.d_desc.max_code+1,o+1),D(t,t.dyn_ltree,t.dyn_dtree)),R(t),r&&I(t)},i._tr_tally=function(t,e,i){return t.pending_buf[t.d_buf+2*t.last_lit]=e>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&e,t.pending_buf[t.l_buf+t.last_lit]=255&i,t.last_lit++,0===e?t.dyn_ltree[2*i]++:(t.matches++,e--,t.dyn_ltree[2*(m[i]+s+1)]++,t.dyn_dtree[2*E(e)]++),t.last_lit===t.lit_bufsize-1},i._tr_align=function(t){T(t,2,3),k(t,256,f),function(t){16===t.bi_valid?(C(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):8<=t.bi_valid&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)}(t)}},{"../utils/common":41}],53:[function(t,e,i){"use strict";e.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(t,e,r){(function(t){!function(t){"use strict";if(!t.setImmediate){var e,i,r,n,s=1,a={},o=!1,h=t.document,l=Object.getPrototypeOf&&Object.getPrototypeOf(t);l=l&&l.setTimeout?l:t,e="[object process]"==={}.toString.call(t.process)?function(t){process.nextTick(function(){c(t)})}:function(){if(t.postMessage&&!t.importScripts){var e=!0,i=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=i,e}}()?(n="setImmediate$"+Math.random()+"$",t.addEventListener?t.addEventListener("message",d,!1):t.attachEvent("onmessage",d),function(e){t.postMessage(n+e,"*")}):t.MessageChannel?((r=new MessageChannel).port1.onmessage=function(t){c(t.data)},function(t){r.port2.postMessage(t)}):h&&"onreadystatechange"in h.createElement("script")?(i=h.documentElement,function(t){var e=h.createElement("script");e.onreadystatechange=function(){c(t),e.onreadystatechange=null,i.removeChild(e),e=null},i.appendChild(e)}):function(t){setTimeout(c,0,t)},l.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var i=new Array(arguments.length-1),r=0;r<i.length;r++)i[r]=arguments[r+1];var n={callback:t,args:i};return a[s]=n,e(s),s++},l.clearImmediate=u}function u(t){delete a[t]}function c(t){if(o)setTimeout(c,0,t);else{var e=a[t];if(e){o=!0;try{!function(t){var e=t.callback,i=t.args;switch(i.length){case 0:e();break;case 1:e(i[0]);break;case 2:e(i[0],i[1]);break;case 3:e(i[0],i[1],i[2]);break;default:e.apply(undefined,i)}}(e)}finally{u(t),o=!1}}}}function d(e){e.source===t&&"string"==typeof e.data&&0===e.data.indexOf(n)&&c(+e.data.slice(n.length))}}("undefined"==typeof self?void 0===t?this:t:self)}).call(this,void 0!==i.g?i.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}]},{},[10])(10)},717:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Renderer=void 0,e.isSoundOn=function(){return m},e.isMusicOn=function(){return v},e.shouldUseXbr=function(){return _},e.setUseXbr=function(t){_=t},e.shouldPrescaleTilesets=function(){return y},e.setPrescaleTilesets=function(t){y=t},e.setSoundOn=function(t){m=t},e.setMusicOn=function(t){!t&&v&&(v=!1,o.SoundImpl.CURRENT_MUSIC&&o.SoundImpl.CURRENT_MUSIC.stop()),t&&!v&&(v=!0,o.SoundImpl.CURRENT_MUSIC&&o.SoundImpl.CURRENT_MUSIC.play(o.SoundImpl.CURRENT_MUSIC.volume))},e.startGame=function(t,e){void 0===e&&(e=r.CANVAS);var i=new w;i.renderer=e,i.start(t)};var r,n=i(138),s=i(652),a=i(608),o=i(866),h=i(549),l=i(741),u=i(710),c=i(508),d=i(864),f=i(933),p=i(957),g=i(870),m=!0,v=!0,y=!1,_=!1;!function(t){t.CANVAS="Canvas",t.OPENGL="OpenGL"}(r||(e.Renderer=r={}));var w=function(){function t(){this.resources=[],this.lastFrame=0,this.inited=!1,this.mainZipFile=void 0,this.zipPercentLoaded=0,this.palette=void 0,this.lastWaiting="",this.wait=0,this.shiftPressed=!1,this.commandPressed=!1,this.controlPressed=!1,this.altPressed=!1,this.renderer=r.OPENGL,this.graphicsInited=!1}return t.prototype.isCommandPressed=function(){return this.commandPressed},t.prototype.isAltPressed=function(){return this.altPressed},t.prototype.isControlPressed=function(){return this.controlPressed},t.prototype.isShiftPressed=function(){return this.shiftPressed},t.prototype.getGraphics=function(){return this.graphics},t.prototype.resourcesRemaining=function(){return this.resources.filter(function(t){return!t.loaded}).length},t.prototype.resourcesTotal=function(){return this.resources.length},t.prototype.dumpResourceIssues=function(){g.GuteLog.log("There are "+this.resources.length+" resources pending.")},t.prototype.currentResource=function(){for(var t=0,e=this.resources;t<e.length;t++){var i=e[t];if(!i.loaded)return i.name}return""},t.prototype.allResourcesLoaded=function(){for(var t=0,e=this.resources;t<e.length;t++){var i=e[t];if(!i.loaded)return this.lastWaiting!==i.name&&(this.lastWaiting&&g.GuteLog.log("[GUTE] Was waiting on: "+this.lastWaiting+" for "+this.wait+" frames"),this.lastWaiting=i.name,this.wait=0),this.wait++,!1}return this.lastWaiting&&(g.GuteLog.log("[GUTE] Was waiting on last one: "+this.lastWaiting+" for "+this.wait+" frames"),this.lastWaiting=void 0,this.graphicsInited||(this.graphicsInited=!0,this.graphics.initResourceOnLoaded())),!0},t.prototype.initResourcesOnFirstClick=function(){if(this.allResourcesLoaded()&&!this.inited){this.inited=!0;for(var t=0,e=this.resources;t<e.length;t++)e[t].initOnFirstClick()}},t.prototype.applyPalette=function(t){var e=this;return new Promise(function(i,r){e.loadText(t).then(function(t){e.palette=new c.Palette(t),i()})})},t.prototype.mouseMoveHandler=function(t,e,i){void 0===i&&(i=0),this.initResourcesOnFirstClick();var r=this.graphics.canvas;r.focus();var n=r.clientWidth,s=r.clientHeight;t=Math.floor(t/n*r.width),e=Math.floor(e/s*r.height),this.game.onMouseMove(this,t,e)},t.prototype.mouseWheelHandler=function(t){this.game.onMouseWheel(this,t)},t.prototype.mouseDownHandler=function(t,e,i){void 0===i&&(i=0),this.initResourcesOnFirstClick();var r=this.graphics.canvas;r.focus();var n=r.clientWidth,s=r.clientHeight;t=Math.floor(t/n*r.width),e=Math.floor(e/s*r.height),this.game.onMouseDown(this,t,e,i)},t.prototype.mouseUpHandler=function(t,e,i){void 0===i&&(i=0),this.initResourcesOnFirstClick();var r=this.graphics.canvas,n=r.clientWidth,s=r.clientHeight;t=Math.floor(t/n*r.width),e=Math.floor(e/s*r.height),this.game.onMouseUp(this,t,e,i)},t.prototype.keyDownHandler=function(t){this.initResourcesOnFirstClick(),this.game.onKeyDown(this,t)},t.prototype.keyUpHandler=function(t){this.game.onKeyUp(this,t)},t.prototype.start=function(t){var e=this;return this.game=t,this.graphics=this.renderer===r.CANVAS?new a.GraphicsImpl:new d.OpenGLGraphicsImpl,this.graphics.canvas.addEventListener("touchstart",function(t){try{if(t.target){var i=t.target.getBoundingClientRect(),r=t.targetTouches[0].pageX-i.left,n=t.targetTouches[0].pageY-i.top;e.lastTouch=t,e.mouseDownHandler(r,n),t.preventDefault(),t.stopPropagation()}}catch(t){g.GuteLog.log(t)}},{passive:!1}),this.graphics.canvas.addEventListener("touchmove",function(t){try{if(t.target){var i=t.target.getBoundingClientRect(),r=t.targetTouches[0].pageX-i.left,n=t.targetTouches[0].pageY-i.top;e.lastTouch=t,e.mouseMoveHandler(r,n),t.preventDefault(),t.stopPropagation()}}catch(t){g.GuteLog.log(t)}},{passive:!1}),this.graphics.canvas.addEventListener("touchend",function(t){try{if(t.target){var i=t.target.getBoundingClientRect();if(e.lastTouch){var r=e.lastTouch.targetTouches[0].pageX-i.left,n=e.lastTouch.targetTouches[0].pageY-i.top;e.mouseUpHandler(r,n)}else e.mouseUpHandler(0,0);t.preventDefault(),t.stopPropagation()}}catch(t){g.GuteLog.log(t)}},{passive:!1}),window.addEventListener("contextmenu",function(t){return t.stopPropagation(),t.preventDefault(),!1}),this.graphics.canvas.addEventListener("wheel",function(t){try{e.mouseWheelHandler(t.deltaY)}catch(t){g.GuteLog.log(t)}}),window.addEventListener("blur",function(t){e.shiftPressed=!1,e.commandPressed=!1,e.controlPressed=!1,e.altPressed=!1}),this.graphics.canvas.addEventListener("mousedown",function(t){e.shiftPressed=t.shiftKey,e.commandPressed=t.metaKey,e.controlPressed=t.ctrlKey,e.altPressed=t.altKey;try{e.mouseDownHandler(t.offsetX,t.offsetY,t.button),t.preventDefault(),t.stopPropagation()}catch(t){g.GuteLog.log(t)}}),this.graphics.canvas.addEventListener("mousemove",function(t){e.shiftPressed=t.shiftKey,e.commandPressed=t.metaKey,e.controlPressed=t.ctrlKey,e.altPressed=t.altKey;try{e.mouseMoveHandler(t.offsetX,t.offsetY),t.preventDefault(),t.stopPropagation()}catch(t){g.GuteLog.log(t)}}),this.graphics.canvas.addEventListener("mouseup",function(t){e.shiftPressed=t.shiftKey,e.commandPressed=t.metaKey,e.controlPressed=t.ctrlKey,e.altPressed=t.altKey;try{e.mouseUpHandler(t.offsetX,t.offsetY,t.button),t.preventDefault(),t.stopPropagation()}catch(t){g.GuteLog.log(t)}}),window.addEventListener("keydown",function(t){"Shift"===t.key&&(e.shiftPressed=!0),"Meta"===t.key&&(e.commandPressed=!0),"Control"===t.key&&(e.controlPressed=!0),"Alt"===t.key&&(e.altPressed=!0),e.keyDownHandler(t.code)}),window.addEventListener("keyup",function(t){"Shift"===t.key&&(e.shiftPressed=!1),"Meta"===t.key&&(e.commandPressed=!1),"Control"===t.key&&(e.controlPressed=!1),"Alt"===t.key&&(e.altPressed=!1),e.keyUpHandler(t.code)}),t.init(this),requestAnimationFrame(function(){e.loop()}),this},t.prototype.loop=function(){var t=this,e=this.graphics.getError();if(e)throw this.game.rendererError(e),new Error("Renderer Error - "+e);requestAnimationFrame(function(){t.loop()});var i=(new Date).getTime(),r=0;0!==this.lastFrame&&(r=i-this.lastFrame),this.lastFrame=i,this.graphics.renderStart(),this.graphics.applyFont(),this.game.update(this,r),this.game.render(this,this.graphics),this.graphics.renderEnd()},t.prototype.getZipProgress=function(){return this.zipPercentLoaded},t.prototype.loadZip=function(t){var e=this;return new Promise(function(i,r){var n=new XMLHttpRequest;n.open("GET",t,!0),n.responseType="arraybuffer",n.onprogress=function(t){e.zipPercentLoaded=t.loaded/t.total},n.onload=function(t){u.loadAsync(n.response).then(function(t){e.mainZipFile=t,g.GuteLog.log("Loaded Zip"),i()})},n.onerror=function(t){r(t)},n.send()})},t.prototype.getZipFile=function(t){var e=this.mainZipFile.file(t);if(!e)throw g.GuteLog.log("zip file entry: "+t+" not found!"),Error("Zip file entry not found: "+t);return e},t.prototype.getZipFileText=function(t){var e=this;return new Promise(function(i,r){e.getZipFile(t).async("string").then(function(t){i(t)}).catch(function(t){g.GuteLog.error(t),r(t)})})},t.prototype.getZipArrayBuffer=function(t){var e=this;return new Promise(function(i,r){e.getZipFile(t).async("arraybuffer").then(function(t){i(t)}).catch(function(t){g.GuteLog.error(t),r(t)})})},t.prototype.getZipBase64=function(t){var e=this;return new Promise(function(i,r){e.getZipFile(t).async("arraybuffer").then(function(t){i(t)}).catch(function(t){g.GuteLog.error(t),r(t)})})},t.prototype.getZipBlob=function(t){var e=this;return new Promise(function(i,r){e.getZipFile(t).async("blob").then(function(t){i(t)}).catch(function(t){g.GuteLog.error(t),r(t)})})},t.prototype.loadMusic=function(t){var e=void 0;t.indexOf("_/")>=0&&(e=this.getZipArrayBuffer(t.substring(t.indexOf("_/"))));var i=new o.SoundImpl(t,!0,e);return this.resources.push(i),i},t.prototype.loadSound=function(t){var e=void 0;t.indexOf("_/")>=0&&(e=this.getZipArrayBuffer(t.substring(t.indexOf("_/"))));var i=new o.SoundImpl(t,!1,e);return this.resources.push(i),i},t.prototype.toPotentialZipLoadBlob=function(t){if(t.indexOf("_/")>=0)return this.getZipBlob(t.substring(t.indexOf("_/")))},t.prototype.toPotentialZipLoad=function(t){if(t.indexOf("_/")>=0)return this.getZipBase64(t.substring(t.indexOf("_/")))},t.prototype.loadBitmap=function(t){if(this.renderer===r.CANVAS){var e=new n.BitmapImpl(t,this.toPotentialZipLoad(t),this.palette);return this.resources.push(e),e}return e=new f.OpenGLBitmap(this.graphics,t,this.toPotentialZipLoad(t),this.palette),this.resources.push(e),e},t.prototype.loadScaledTileset=function(t,e,i,n){if(this.renderer===r.CANVAS){var s=new h.TilesetImpl(t,this.toPotentialZipLoadBlob(t),e,i,n,this.palette);return this.resources.push(s),s}return s=new p.OpenGLTilesetImpl(this.graphics,t,this.toPotentialZipLoadBlob(t),e,i,n,this.palette),this.resources.push(s),s},t.prototype.loadTileset=function(t,e,i){if(this.renderer===r.CANVAS){var n=new h.TilesetImpl(t,this.toPotentialZipLoadBlob(t),e,i,1,this.palette);return this.resources.push(n),n}return n=new p.OpenGLTilesetImpl(this.graphics,t,this.toPotentialZipLoadBlob(t),e,i,1,this.palette),this.resources.push(n),n},t.prototype.loadFont=function(t,e){return new s.FontImpl(t,e)},t.prototype.loadLDTK=function(t,e){var i=this,r=new l.LDTKWorld;return this.resources.push(r),r.load(t,function(t){return i.loadJson(e(t))})},t.prototype.loadText=function(t){var e=this;return new Promise(function(i,r){if(t.indexOf("_/")>=0)return e.getZipFileText(t.substring(t.indexOf("_/"))).then(function(t){i(t)});var n=new XMLHttpRequest;n.open("GET",t,!0),n.onload=function(t){n.responseText&&i(n.responseText)},n.onerror=function(t){r(t)},n.send()})},t.prototype.loadJson=function(t,e){var i=this;return new Promise(function(r,n){if(t.indexOf("_/")>=0)return t=t.substring(t.indexOf("_/")),i.getZipFileText(t).then(function(i){try{var n=JSON.parse(e?e(i):i);r(n)}catch(e){throw g.GuteLog.log("Failed to parse JSON: "+t),e}});if(t.startsWith("data:application/json;utf8,")){var s=t.substring(t.indexOf(",")+1);r(JSON.parse(e?e(s):s))}else{var a=new XMLHttpRequest;a.open("GET",t,!0),a.onload=function(t){if(a.responseText){var i=a.responseText;r(JSON.parse(e?e(i):i))}},a.onerror=function(t){n(t)},a.send()}})},t.prototype.isRunningStandalone=function(){return!0===window.navigator.standalone||window.matchMedia("(display-mode: standalone)").matches},t.prototype.isTablet=function(){return!(this.isPhone()||!this.isIOS())||/(ipad|tablet|(android(?!.*mobile))|(windows(?!.*phone)(.*touch))|kindle|playbook|silk|(puffin(?!.*(IP|AP|WP))))/.test(navigator.userAgent.toLowerCase())},t.prototype.isMobile=function(){return this.isIOS()||this.isAndroid()},t.prototype.isAndroid=function(){return null!=navigator.userAgent.match(/Android/i)},t.prototype.isIOS=function(){return["iPad Simulator","iPhone Simulator","iPod Simulator","iPad","iPhone","iPod"].indexOf(navigator.platform)>=0||navigator.userAgent.includes("Mac")&&"ontouchend"in document},t.prototype.isPhone=function(){return this.isIOS()&&(window.matchMedia("only screen and (max-width: 760px)").matches||window.matchMedia("only screen and (max-height: 760px)").matches)},t.prototype.setSoundVolume=function(t){o.SoundImpl.setSoundVolume(t)},t.prototype.getSoundVolume=function(){return o.SoundImpl.getSoundVolume()},t.prototype.setMusicVolume=function(t){o.SoundImpl.setMusicVolume(t)},t.prototype.getMusicVolume=function(){return o.SoundImpl.getMusicVolume()},t}()},741:function(t,e,i){"use strict";var r,n=this&&this.__extends||(r=function(t,e){return r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])},r(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function i(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)});Object.defineProperty(e,"__esModule",{value:!0}),e.LDTKWorld=void 0;var s=i(870),a=i(343),o=i(971),h=i(544),l=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.name="world",e.tilesets=[],e}return n(e,t),e.prototype.initOnFirstClick=function(){},e.prototype.load=function(t,i){var r=this;return this.name=t,i(t).then(function(t){var n=[],s={};r.gridSize=t.defaultGridSize;var a=t.defs.tilesets[0];r.tilesets=t.defs.tilesets,r.tilesetScanline=a.pxWid/a.tileGridSize,r.tilesetSize=a.tileGridSize;var o=t.levels;if(t.worlds&&t.worlds.length>0){o=[];for(var l=0,u=t.worlds;l<u.length;l++){var c=u[l];o=o.concat(c.levels)}}for(var d=[],f=function(t){var a=new h.MapLevel(r,t.identifier);a.worldX=t.worldX,a.worldY=t.worldY,a.worldDepth=t.worldDepth;for(var o=0,l=t.fieldInstances;o<l.length;o++){var u=l[o];a.fields[u.__identifier]=u.__value}var c=void 0;if(t.layerInstances)c=Promise.resolve(t);else{if(!t.externalRelPath)throw new Error("Unknown LDTK file format");c=i(t.externalRelPath)}d.push(c.then(function(i){return e.loadLayers(a,i.layerInstances,n,s),a.layers.length>0?(a.width=a.layers[0].width,a.height=a.layers[0].height):(a.width=t.pxWid/r.gridSize,a.height=t.pxHei/r.gridSize),r.levels[a.id]=a,a}))},p=0,g=t.levels;p<g.length;p++)f(g[p]);return Promise.all(d).then(function(t){for(var e=0,i=n;e<i.length;e++){var a=i[e];if(a.value instanceof Array){for(var o=[],h=0,l=a.value;h<l.length;h++){var u=l[h];(c=s[u])&&o.push(c)}a.entity.fields[a.field]=o}else{var c;(c=s[a.value])&&(a.entity.fields[a.field]=c)}}return r.loaded=!0,r})}).catch(function(t){throw s.GuteLog.error(t),t})},e.loadLayers=function(t,i,r,n){for(var s=function(i){if("Entities"===i.__type)for(var s=0,h=i.entityInstances;s<h.length;s++){var l=h[s],u=new a.MapEntity(t,l.px[0]/i.__gridSize,l.px[1]/i.__gridSize,l.width/i.__gridSize,l.height/i.__gridSize,l.__identifier);u.id=l.iid,n[l.iid]=u;for(var c=0,d=l.fieldInstances;c<d.length;c++){var f=d[c];switch(f.__type){case"EntityRef":r.push({value:f.__value.entityIid,entity:u,field:f.__identifier});break;case"Array<EntityRef>":r.push({value:f.__value.map(function(t){return t.entityIid}),entity:u,field:f.__identifier});break;default:u.fields[f.__identifier]=f.__value}}t.entities.push(u)}else{var p=e.LAYER_COMPRESSIONS.find(function(t){return t.from===i.__identifier}),g=void 0,m=0;if(p){var v=t.layerByName[p.to];if(!v)throw"Unable to find compression layer: "+p.to;g=v,m=p.offset}else g=new o.MapLayer(t,i.__identifier,i.__cWid,i.__cHei);for(var y=t.world.tilesets.find(function(t){return t.uid===i.__tilesetDefUid}),_=y.pxWid/y.tileGridSize,w=y.tileGridSize,b=0,x=i.gridTiles;b<x.length;b++){var S=x[b],E=Math.floor(S.px[0]/i.__gridSize)+Math.floor(S.px[1]/i.__gridSize)*g.width,C=Math.floor(S.src[0]/w),T=Math.floor(S.src[1]/w)*_+C;g.tiles[E]=T+1+m,g.flips[E]=S.f}p||(t.layers.splice(0,0,g),t.layerByName[g.name]=g)}},h=0,l=i;h<l.length;h++)s(l[h])},e.LAYER_COMPRESSIONS=[],e}(i(134).MapWorld);e.LDTKWorld=l},772:(t,e,i)=>{"use strict";i.r(e),i.d(e,{xbr2x:()=>A,xbr3x:()=>O,xbr4x:()=>R});const r=!1,n=255,s=65280,a=16711680,o=4278190080,h=48,l=7,u=6;function c(t){const e=t&n,i=(t&s)>>8,r=(t&a)>>16;return[.299*e+.587*i+.114*r,-.168736*e+-.331264*i+.5*r,.5*e+-.418688*i+-.081312*r]}function d(t,e,i){const r=(t&o)>>24&255,n=(e&o)>>24&255;if(0===r&&0===n)return 0;if(!i&&(r<255||n<255))return 1e6;if(0===r||0===n)return 1e6;const s=c(t),a=c(e);return Math.abs(s[0]-a[0])*h+Math.abs(s[1]-a[1])*l+Math.abs(s[2]-a[2])*u}function f(t,e,i){const r=(t&o)>>24&255,n=(e&o)>>24&255;if(0===r&&0===n)return!0;if(!i&&(r<255||n<255))return!1;if(0===r||0===n)return!1;const s=c(t),a=c(e);return!(Math.abs(s[0]-a[0])>h||Math.abs(s[1]-a[1])>l||Math.abs(s[2]-a[2])>u)}function p(t,e,i,r){const h=(t&o)>>24&255,l=(e&o)>>24&255;let u,c,d,f;return 0===h?(u=e&n,c=(e&s)>>8,d=(e&a)>>16):0===l?(u=t&n,c=(t&s)>>8,d=(t&a)>>16):(u=(r*(e&n)+i*(t&n))/(i+r),c=(r*((e&s)>>8)+i*((t&s)>>8))/(i+r),d=(r*((e&a)>>16)+i*((t&a)>>16))/(i+r)),f=(r*l+i*h)/(i+r),u|c<<8|d<<16|f<<24}function g(t,e,i,r,n){let s=e-1;s<0&&(s=0);let a=e-2;a<0&&(a=0);let o=e+1;o>=r&&(o=r-1);let h=e+2;h>=r&&(h=r-1);let l=i-1;l<0&&(l=0);let u=i-2;u<0&&(u=0);let c=i+1;c>=n&&(c=n-1);let d=i+2;return d>=n&&(d=n-1),[t[s+u*r],t[e+u*r],t[o+u*r],t[a+l*r],t[s+l*r],t[e+l*r],t[o+l*r],t[h+l*r],t[a+i*r],t[s+i*r],t[e+i*r],t[o+i*r],t[h+i*r],t[a+c*r],t[s+c*r],t[e+c*r],t[o+c*r],t[h+c*r],t[s+d*r],t[e+d*r],t[o+d*r]]}function m(t,e,i,r,n,s,a,o,h,l,u){const c=g(t,e,i,r,n),[d,f,p,m,v,y,_,w,b,x,S,C,T,k,A,O,R,I,F,L,D]=c;let P,B,z,M;P=B=z=M=S,[B,z,M]=E(S,R,O,C,A,_,x,y,T,I,L,D,B,z,M,l,u),[P,M,B]=E(S,_,C,y,R,v,O,x,f,p,T,w,P,M,B,l,u),[z,B,P]=E(S,v,y,x,_,A,C,O,b,m,f,d,z,B,P,l,u),[M,P,z]=E(S,A,x,O,v,R,y,C,L,F,b,k,M,P,z,l,u),s[a+o*h]=P,s[a+1+o*h]=B,s[a+(o+1)*h]=z,s[a+1+(o+1)*h]=M}function v(t,e,i,r,n,s,a,o,h,l,u){const c=g(t,e,i,r,n),[d,f,p,m,v,y,_,w,b,x,S,E,T,k,A,O,R,I,F,L,D]=c;let P,B,z,M,U,N,G,W,j;P=B=z=M=U=N=G=W=j=S,[z,N,G,W,j]=C(S,R,O,E,A,_,x,y,T,I,L,D,z,N,G,W,j,l,u),[P,B,j,N,z]=C(S,_,E,y,R,v,O,x,f,p,T,w,P,B,j,N,z,l,u),[G,M,z,B,P]=C(S,v,y,x,_,A,E,O,b,m,f,d,G,M,z,B,P,l,u),[j,W,P,M,G]=C(S,A,x,O,v,R,y,E,L,F,b,k,j,W,P,M,G,l,u),s[a+o*h]=P,s[a+1+o*h]=B,s[a+2+o*h]=z,s[a+(o+1)*h]=M,s[a+1+(o+1)*h]=U,s[a+2+(o+1)*h]=N,s[a+(o+2)*h]=G,s[a+1+(o+2)*h]=W,s[a+2+(o+2)*h]=j}function y(t,e,i,r,n,s,a,o,h,l,u){const c=g(t,e,i,r,n),[d,f,p,m,v,y,_,w,b,x,S,E,C,k,A,O,R,I,F,L,D]=c;let P,B,z,M,U,N,G,W,j,H,X,Z,Y,V,K,q;P=B=z=M=U=N=G=W=j=H=X=Z=Y=V=K=q=S,[q,K,Z,M,W,X,V,Y]=T(S,R,O,E,A,_,x,y,C,I,L,D,q,K,Z,M,W,X,V,Y,l,u),[M,W,z,P,B,G,Z,q]=T(S,_,E,y,R,v,O,x,f,p,C,w,M,W,z,P,B,G,Z,q,l,u),[P,B,U,Y,j,N,z,M]=T(S,v,y,x,_,A,E,O,b,m,f,d,P,B,U,Y,j,N,z,M,l,u),[Y,j,V,q,K,H,U,P]=T(S,A,x,O,v,R,y,E,L,F,b,k,Y,j,V,q,K,H,U,P,l,u),s[a+o*h]=P,s[a+1+o*h]=B,s[a+2+o*h]=z,s[a+3+o*h]=M,s[a+(o+1)*h]=U,s[a+1+(o+1)*h]=N,s[a+2+(o+1)*h]=G,s[a+3+(o+1)*h]=W,s[a+(o+2)*h]=j,s[a+1+(o+2)*h]=H,s[a+2+(o+2)*h]=X,s[a+3+(o+2)*h]=Z,s[a+(o+3)*h]=Y,s[a+1+(o+3)*h]=V,s[a+2+(o+3)*h]=K,s[a+3+(o+3)*h]=q}function _(t,e,i){return i?p(t,e,7,1):t}function w(t,e,i){return i?p(t,e,3,1):t}function b(t,e,i){return i?p(t,e,1,1):t}function x(t,e,i){return i?p(t,e,1,3):e}function S(t,e,i){return i?p(t,e,1,7):e}function E(t,e,i,r,n,s,a,o,h,l,u,c,p,g,m,v,y){if(t==i||t==r)return[p,g,m];let _=d(t,s,y)+d(t,n,y)+d(e,u,y)+d(e,h,y)+(d(i,r)<<2),S=d(i,a,y)+d(i,c,y)+d(r,l,y)+d(r,o,y)+(d(t,e,y)<<2),E=d(t,r,y)<=d(t,i,y)?r:i;if(_<S&&(!f(r,o,y)&&!f(i,a,y)||f(t,e,y)&&!f(r,l,y)&&!f(i,c,y)||f(t,n,y)||f(t,s,y))){let e=d(r,n,y),h=d(i,s,y),l=t!=s&&o!=s,u=t!=n&&a!=n;if(e<<1<=h&&u||e>=h<<1&&l){if(e<<1<=h&&u){let t=function(t,e,i,r){return[x(t,i,r),w(e,i,r)]}(m,g,E,v);m=t[0],g=t[1]}if(e>=h<<1&&l){let t=function(t,e,i,r){return[x(t,i,r),w(e,i,r)]}(m,p,E,v);m=t[0],p=t[1]}}else m=function(t,e,i){return b(t,e,i)}(m,E,v)}else _<=S&&(m=w(m,E,v));return[p,g,m]}function C(t,e,i,n,s,a,o,h,l,u,c,p,g,m,v,y,E,C,T){if(t==i||t==n)return[g,m,v,y,E];const k=d(t,a,T)+d(t,s,T)+d(e,c,T)+d(e,l,T)+(d(i,n,T)<<2),A=d(i,o,T)+d(i,p,T)+d(n,u,T)+d(n,h,T)+(d(t,e,T)<<2);let O;if(O=r?k<A&&(!f(n,h,T)&&!f(i,o,T)||f(t,e,T)&&!f(n,u,T)&&!f(i,p,T)||f(t,s,T)||f(t,a,T)):k<A&&(!f(n,h,T)&&!f(n,a,T)||!f(i,o,T)&&!f(i,s,T)||f(t,e,T)&&(!f(n,l,T)&&!f(n,u,T)||!f(i,c,T)&&!f(i,p,T))||f(t,s,T)||f(t,a,T)),O){const e=d(n,s,T),r=d(i,a,T),l=t!=a&&h!=a,u=t!=s&&o!=s,c=d(t,n,T)<=d(t,i,T)?n:i;e<<1<=r&&u&&e>=r<<1&&l?[y,m,v,g,E]=function(t,e,i,r,n,s,a){const o=x(t,s,a),h=w(i,s,a);return[o,o,h,h,s]}(y,0,v,0,0,c,C):e<<1<=r&&u?[y,m,v,E]=function(t,e,i,r,n,s){return[x(t,n,s),w(e,n,s),w(i,n,s),n]}(y,m,v,0,c,C):e>=r<<1&&l?[m,y,g,E]=function(t,e,i,r,n,s){return[x(t,n,s),w(e,n,s),w(i,n,s),n]}(m,y,g,0,c,C):[E,m,y]=function(t,e,i,r,n){return[S(t,r,n),_(e,r,n),_(i,r,n)]}(E,m,y,c,C)}else k<=A&&(E=b(E,d(t,n,T)<=d(t,i,T)?n:i,C));return[g,m,v,y,E]}function T(t,e,i,r,n,s,a,o,h,l,u,c,p,g,m,v,y,_,S,E,C,T){if(t==i||t==r)return[p,g,m,v,y,_,S,E];const k=d(t,s,T)+d(t,n,T)+d(e,u,T)+d(e,h,T)+(d(i,r,T)<<2),A=d(i,a,T)+d(i,c,T)+d(r,l,T)+d(r,o,T)+(d(t,e,T)<<2),O=d(t,r,T)<=d(t,i,T)?r:i;if(k<A&&(!f(r,o,T)&&!f(i,a,T)||f(t,e,T)&&!f(r,l,T)&&!f(i,c,T)||f(t,n,T)||f(t,s,T))){const e=d(r,n,T),h=d(i,s,T),l=t!=s&&o!=s,u=t!=n&&a!=n;e<<1<=h&&u||e>=h<<1&&l?(e<<1<=h&&u&&([p,g,m,S,E,_]=function(t,e,i,r,n,s,a,o){return[a,a,x(i,a,o),x(r,a,o),w(n,a,o),w(s,a,o)]}(0,0,m,S,E,_,O,C)),e>=h<<1&&l&&([p,g,m,v,y,_]=function(t,e,i,r,n,s,a,o){return[a,x(e,a,o),a,w(r,a,o),x(n,a,o),w(s,a,o)]}(0,g,0,v,y,_,O,C))):[p,g,m]=function(t,e,i,r,n){return[r,b(e,r,n),b(i,r,n)]}(0,g,m,O,C)}else k<=A&&(p=b(p,O,C));return[p,g,m,v,y,_,S,E]}function k(t){let e=!0,i=!1;return t&&(!1===t.blendColors&&(e=!1),!0===t.scaleAlpha&&(i=!0)),{blendColors:e,scaleAlpha:i}}function A(t,e,i,r){const{blendColors:n,scaleAlpha:s}=k(r),a=new Uint32Array(e*i*4);for(let r=0;r<e;r++)for(let o=0;o<i;o++)m(t,r,o,e,i,a,2*r,2*o,2*e,n,s);return a}function O(t,e,i,r){const{blendColors:n,scaleAlpha:s}=k(r),a=new Uint32Array(e*i*9);for(let r=0;r<e;r++)for(let o=0;o<i;o++)v(t,r,o,e,i,a,3*r,3*o,3*e,n,s);return a}function R(t,e,i,r){const{blendColors:n,scaleAlpha:s}=k(r),a=new Uint32Array(e*i*16);for(let r=0;r<e;r++)for(let o=0;o<i;o++)y(t,r,o,e,i,a,4*r,4*o,4*e,n,s);return a}},795:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.BLUE=e.GREEN=e.RED=e.BLACK=e.WHITE=void 0,e.WHITE="white",e.BLACK="black",e.RED="red",e.GREEN="green",e.BLUE="blue"},864:function(t,e,i){"use strict";var r=this&&this.__spreadArray||function(t,e,i){if(i||2===arguments.length)for(var r,n=0,s=e.length;n<s;n++)!r&&n in e||(r||(r=Array.prototype.slice.call(e,0,n)),r[n]=e[n]);return t.concat(r||Array.prototype.slice.call(e))};Object.defineProperty(e,"__esModule",{value:!0}),e.OpenGLGraphicsImpl=void 0,e.colToNumber=l,e.getMaxTextureSize=function(){if(void 0===window.WebGLRenderingContext)return 0;var t=document.createElement("canvas").getContext("experimental-webgl",{antialias:!1,alpha:!1,preserveDrawingBuffer:!0});return t?t.getParameter(t.MAX_TEXTURE_SIZE):0};var n=i(870),s=i(912),a=i(914),o=i(154);function h(t){var e,i;if(e=t.match(/^#?([0-9a-f]{3})$/i))return i=e[1],[17*parseInt(i.charAt(0),16),17*parseInt(i.charAt(1),16),17*parseInt(i.charAt(2),16),1];if(e=t.match(/^#?([0-9a-f]{6})$/i))return i=e[1],[parseInt(i.substr(0,2),16),parseInt(i.substr(2,2),16),parseInt(i.substr(4,2),16),1];if(e=t.match(/^rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*,\s*([+-]?([0-9]*[.])?[0-9]+)\s*\)$/i))return[Number.parseInt(e[1]),Number.parseInt(e[2]),Number.parseInt(e[3]),Number.parseFloat(e[4])];if(e=t.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i))return[Number.parseInt(e[1]),Number.parseInt(e[2]),Number.parseInt(e[3]),1];var r={AliceBlue:"#F0F8FF",AntiqueWhite:"#FAEBD7",Aqua:"#00FFFF",Aquamarine:"#7FFFD4",Azure:"#F0FFFF",Beige:"#F5F5DC",Bisque:"#FFE4C4",Black:"#000000",BlanchedAlmond:"#FFEBCD",Blue:"#0000FF",BlueViolet:"#8A2BE2",Brown:"#A52A2A",BurlyWood:"#DEB887",CadetBlue:"#5F9EA0",Chartreuse:"#7FFF00",Chocolate:"#D2691E",Coral:"#FF7F50",CornflowerBlue:"#6495ED",Cornsilk:"#FFF8DC",Crimson:"#DC143C",Cyan:"#00FFFF",DarkBlue:"#00008B",DarkCyan:"#008B8B",DarkGoldenRod:"#B8860B",DarkGray:"#A9A9A9",DarkGrey:"#A9A9A9",DarkGreen:"#006400",DarkKhaki:"#BDB76B",DarkMagenta:"#8B008B",DarkOliveGreen:"#556B2F",DarkOrange:"#FF8C00",DarkOrchid:"#9932CC",DarkRed:"#8B0000",DarkSalmon:"#E9967A",DarkSeaGreen:"#8FBC8F",DarkSlateBlue:"#483D8B",DarkSlateGray:"#2F4F4F",DarkSlateGrey:"#2F4F4F",DarkTurquoise:"#00CED1",DarkViolet:"#9400D3",DeepPink:"#FF1493",DeepSkyBlue:"#00BFFF",DimGray:"#696969",DimGrey:"#696969",DodgerBlue:"#1E90FF",FireBrick:"#B22222",FloralWhite:"#FFFAF0",ForestGreen:"#228B22",Fuchsia:"#FF00FF",Gainsboro:"#DCDCDC",GhostWhite:"#F8F8FF",Gold:"#FFD700",GoldenRod:"#DAA520",Gray:"#808080",Grey:"#808080",Green:"#008000",GreenYellow:"#ADFF2F",HoneyDew:"#F0FFF0",HotPink:"#FF69B4","IndianRed ":"#CD5C5C","Indigo ":"#4B0082",Ivory:"#FFFFF0",Khaki:"#F0E68C",Lavender:"#E6E6FA",LavenderBlush:"#FFF0F5",LawnGreen:"#7CFC00",LemonChiffon:"#FFFACD",LightBlue:"#ADD8E6",LightCoral:"#F08080",LightCyan:"#E0FFFF",LightGoldenRodYellow:"#FAFAD2",LightGray:"#D3D3D3",LightGrey:"#D3D3D3",LightGreen:"#90EE90",LightPink:"#FFB6C1",LightSalmon:"#FFA07A",LightSeaGreen:"#20B2AA",LightSkyBlue:"#87CEFA",LightSlateGray:"#778899",LightSlateGrey:"#778899",LightSteelBlue:"#B0C4DE",LightYellow:"#FFFFE0",Lime:"#00FF00",LimeGreen:"#32CD32",Linen:"#FAF0E6",Magenta:"#FF00FF",Maroon:"#800000",MediumAquaMarine:"#66CDAA",MediumBlue:"#0000CD",MediumOrchid:"#BA55D3",MediumPurple:"#9370DB",MediumSeaGreen:"#3CB371",MediumSlateBlue:"#7B68EE",MediumSpringGreen:"#00FA9A",MediumTurquoise:"#48D1CC",MediumVioletRed:"#C71585",MidnightBlue:"#191970",MintCream:"#F5FFFA",MistyRose:"#FFE4E1",Moccasin:"#FFE4B5",NavajoWhite:"#FFDEAD",Navy:"#000080",OldLace:"#FDF5E6",Olive:"#808000",OliveDrab:"#6B8E23",Orange:"#FFA500",OrangeRed:"#FF4500",Orchid:"#DA70D6",PaleGoldenRod:"#EEE8AA",PaleGreen:"#98FB98",PaleTurquoise:"#AFEEEE",PaleVioletRed:"#DB7093",PapayaWhip:"#FFEFD5",PeachPuff:"#FFDAB9",Peru:"#CD853F",Pink:"#FFC0CB",Plum:"#DDA0DD",PowderBlue:"#B0E0E6",Purple:"#800080",RebeccaPurple:"#663399",Red:"#FF0000",RosyBrown:"#BC8F8F",RoyalBlue:"#4169E1",SaddleBrown:"#8B4513",Salmon:"#FA8072",SandyBrown:"#F4A460",SeaGreen:"#2E8B57",SeaShell:"#FFF5EE",Sienna:"#A0522D",Silver:"#C0C0C0",SkyBlue:"#87CEEB",SlateBlue:"#6A5ACD",SlateGray:"#708090",SlateGrey:"#708090",Snow:"#FFFAFA",SpringGreen:"#00FF7F",SteelBlue:"#4682B4",Tan:"#D2B48C",Teal:"#008080",Thistle:"#D8BFD8",Tomato:"#FF6347",Turquoise:"#40E0D0",Violet:"#EE82EE",Wheat:"#F5DEB3",White:"#FFFFFF",WhiteSmoke:"#F5F5F5",Yellow:"#FFFF00",YellowGreen:"#9ACD32",Transparent:"rgba(0,0,0,0)"};for(var n in r)r[n.toLowerCase()]=r[n];var s=r[t.toLowerCase()];if(null!=s)return h(s);throw Error("'"+t+"' is not a valid color...")}function l(t){var e=c[t];if(void 0===e){var i=h(t),r=16777216*i[0]+65536*i[1]+256*i[2]+Math.floor(255*i[3]);c[t]=r,e=r,2e3===Object.keys(c).length&&alert("2000 color caches have been created")}return e}var u="undefined"!=typeof InstallTrigger,c={},d=function(){function t(){var t=this;this.offscreen=null,this.images=[],this.atlasTextures=null,this.currentTexture=null,this.texWidth=0,this.texHeight=0,this.offscreenId=1,this.offscreens=[],this.loaded=!1,this.maxDraws=1e4,this.draws=0,this.clipX=0,this.clipY=0,this.clipX2=0,this.clipY2=0,this.alpha=255,this.uniforms={},this.saves=0,this.transformCanvas=document.createElement("canvas"),this.transformCtx=this.transformCanvas.getContext("2d"),this.currentContextState=this,this.canvas=document.getElementById("gamecanvas"),this.canvas.style.fontSmooth="never",this.canvas.style.webkitFontSmoothing="none",this.canvas.addEventListener("webglcontextlost",function(e){t.lostContext(),e.preventDefault()},!1),this.canvas.addEventListener("webglcontextrestored",function(e){t.recoverContext()},!1),this.canvas.style.imageRendering=u?"crisp-edges":"pixelated",this.gl=this.canvas.getContext("experimental-webgl",{antialias:!1,alpha:!1,preserveDrawingBuffer:!1}),this.initGlResources()}return t.prototype.lostContext=function(){n.GuteLog.log("LOST GL CONTEXT"),this.shaderProgram=void 0,this.atlasTextures=null},t.prototype.recoverContext=function(){n.GuteLog.log("RECOVERED GL CONTEXT"),this.initGlResources(),this.initResourceOnLoaded();for(var t=0,e=this.offscreens;t<e.length;t++)e[t].recover();this.resize(),n.GuteLog.log("RECREATE GL RESOURCES")},t.prototype.initGlResources=function(){var t=this;n.GuteLog.log("Init GL Resources");var e=this.gl.getExtension("ANGLE_instanced_arrays");this.extension=e,this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA),this.gl.enable(this.gl.BLEND),this.gl.disable(this.gl.DEPTH_TEST),this.arrayBuffer=new ArrayBuffer(20*this.maxDraws),this.positions=new Int16Array(this.arrayBuffer),this.rgbas=new Uint32Array(this.arrayBuffer);var i=this.gl.createShader(this.gl.VERTEX_SHADER);this.gl.shaderSource(i,"\t\t\tattribute vec2 aSizeMult;\t\t\tattribute vec2 aPos;\t\t\tattribute vec2 aSize;\t\t\tattribute vec4 aTexPos;\t\t\tattribute vec4 aRgba;\t\t\t\t\t\tvarying highp vec2 fragTexturePos;\t\t\tvarying vec4 fragAbgr;\t\t\t\t\t\tuniform vec2 uCanvasSize;\t\t\tuniform vec2 uTexSize;\t\t\t\t\t\tvoid main(void){\t\t\t\tgl_Position.x = ( (aPos.x + (aSize.x * aSizeMult.x) ) / uCanvasSize.x ) - 1.0;                 gl_Position.y = 1.0 -  ( (aPos.y + (aSize.y * aSizeMult.y) ) / uCanvasSize.y );                 gl_Position.z = 0.0;                 gl_Position.w = 1.0;                 \t\t\t\tfragTexturePos = (aTexPos.xy + aTexPos.zw * aSizeMult) / uTexSize;                                fragAbgr.x = aRgba.w/255.0;                 fragAbgr.y = aRgba.z/255.0;                 fragAbgr.z = aRgba.y/255.0;                 fragAbgr.w = aRgba.x/255.0; \t\t\t}\t\t"),this.gl.compileShader(i);var r=this.gl.createShader(this.gl.FRAGMENT_SHADER);this.gl.shaderSource(r,"\t\t\tvarying highp vec2 fragTexturePos;\t\t\tvarying highp vec4 fragAbgr;\t\t\tuniform sampler2D uSampler;\t\t\t\t\t\tvoid main(void){\t\t\t\tgl_FragColor = texture2D(uSampler, fragTexturePos) * fragAbgr;\t\t\t}\t\t"),this.gl.compileShader(r);var s=this.gl.createProgram();this.gl.attachShader(s,i),this.gl.attachShader(s,r),this.gl.linkProgram(s),this.gl.useProgram(s),this.shaderProgram=s,this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,this.gl.createBuffer()),this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER,new Uint8Array([0,1,2,2,1,3]),this.gl.STATIC_DRAW),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.gl.createBuffer()),this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([0,0,0,1,1,0,1,1]),this.gl.STATIC_DRAW);var a=this.gl.getAttribLocation(s,"aSizeMult");this.gl.enableVertexAttribArray(a),this.gl.vertexAttribPointer(a,2,this.gl.FLOAT,!1,0,0),this.glBuffer=this.gl.createBuffer(),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.glBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,this.arrayBuffer,this.gl.DYNAMIC_DRAW);var o=0,h=function(i,r,s){if(t.shaderProgram){var a=t.gl.getAttribLocation(t.shaderProgram,i);-1!==a?(t.gl.enableVertexAttribArray(a),t.gl.vertexAttribPointer(a,s,r,!1,20,o),e.vertexAttribDivisorANGLE(a,1),r==t.gl.SHORT&&(s*=2),r==t.gl.FLOAT&&(s*=4),o+=s):n.GuteLog.log("Attribute not found: "+i)}};h("aPos",this.gl.SHORT,2),h("aSize",this.gl.SHORT,2),h("aTexPos",this.gl.SHORT,4),h("aRgba",this.gl.UNSIGNED_BYTE,4)},t.prototype.registerImage=function(t){this.images.push(t)},t.prototype.newResourceLoaded=function(){this.atlasTextures&&this.initResourceOnLoaded()},t.prototype.initResourceOnLoaded=function(){n.GuteLog.log("[WEBGL] Reloading texture");var t=Math.min(this.gl.getParameter(this.gl.MAX_TEXTURE_SIZE),8192),e=r([],this.images,!0);e.sort(function(t,e){return t.height>e.height?-1:1}),[].push({texX:0,texY:0,width:1,height:1,texIndex:-1});for(var i=e.map(function(t){return{image:t,w:t.width,h:t.height}}),s=0,a=0,h=0;h<i.length;h+=20){var l=(0,o.default)(i.slice(s,h)),u=l.w,c=l.h;if(l.fill,u>t||c>t){var d=(0,o.default)(i.slice(s,h-20)),f=d.w,p=d.h;d.fill,i.slice(s,h-20).forEach(function(t){return t.image.texIndex=a}),n.GuteLog.log(s+" -> "+(h-20-1)+" = "+f+"x"+p),s=h-20,a++}}var g=(0,o.default)(i.slice(s,i.length)),m=g.w,v=g.h;g.fill,i.slice(s,i.length).forEach(function(t){return t.image.texIndex=a}),n.GuteLog.log(s+" -> "+(i.length-1)+" = "+m+"x"+v),a++,n.GuteLog.log("Packed into: "+a+" textures");for(var y=0,_=i;y<_.length;y++){var w=_[y];w.image.texX=w.x+1,w.image.texY=w.y}if(this.atlasTextures)for(var b=0,x=this.atlasTextures;b<x.length;b++){var S=x[b];this.gl.deleteTexture(S)}this.atlasTextures=[];var E=function(i){var r=C.gl.createTexture();if(r){C.atlasTextures.push(r),C.gl.bindTexture(C.gl.TEXTURE_2D,r),C.gl.activeTexture(C.gl.TEXTURE0),C.gl.texImage2D(C.gl.TEXTURE_2D,0,C.gl.RGBA,t,t,0,C.gl.RGBA,C.gl.UNSIGNED_BYTE,null);var n=document.createElement("canvas"),s=n.getContext("2d");s.fillStyle="#FFF",s.fillRect(0,0,1,1),C.gl.texSubImage2D(C.gl.TEXTURE_2D,0,0,0,C.gl.RGBA,C.gl.UNSIGNED_BYTE,n);for(var a=0,o=e.filter(function(t){return t.texIndex===i});a<o.length;a++){var h=o[a];C.gl.texSubImage2D(C.gl.TEXTURE_2D,0,h.texX,h.texY,C.gl.RGBA,C.gl.UNSIGNED_BYTE,h.image)}C.gl.texParameteri(C.gl.TEXTURE_2D,C.gl.TEXTURE_MAG_FILTER,C.gl.NEAREST),C.gl.texParameteri(C.gl.TEXTURE_2D,C.gl.TEXTURE_MIN_FILTER,C.gl.NEAREST),C.texWidth=t,C.texHeight=t,C.shaderProgram&&C.gl.uniform2f(C.getUniformLoc("uTexSize"),C.texWidth,C.texHeight)}},C=this;for(h=0;h<a;h++)E(h);this.resize(),this.loaded=!0},t.prototype.resetState=function(){this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA),this.currentContextState.clipX=0,this.currentContextState.clipX2=0,this.currentContextState.clipY=0,this.currentContextState.clipY2=0,this.currentContextState.alpha=255},t.prototype.getUniformLoc=function(t){var e=this.uniforms[t];if(!e&&this.shaderProgram){var i=this.gl.getUniformLocation(this.shaderProgram,t);i&&(this.uniforms[t]=e=i)}return e},t.prototype.resize=function(){this.gl.viewport(0,0,this.canvas.width,this.canvas.height),this.shaderProgram&&this.gl.uniform2f(this.getUniformLoc("uCanvasSize"),this.canvas.width/2,this.canvas.height/2)},t.prototype.getError=function(){var t=this.gl.getError();if(0!==t){switch(t){case WebGLRenderingContext.INVALID_ENUM:return"Invalid Enum";case WebGLRenderingContext.INVALID_VALUE:return"Invalid Value";case WebGLRenderingContext.INVALID_OPERATION:return"Invalid Operation";case WebGLRenderingContext.INVALID_FRAMEBUFFER_OPERATION:return"Invalid Framebuffer Operation";case WebGLRenderingContext.OUT_OF_MEMORY:return"Out of Memory";case WebGLRenderingContext.CONTEXT_LOST_WEBGL:return}return"Unknown error - "+this.gl.getError()}},t.prototype._drawBitmap=function(t,e,i,r,n,s){void 0===s&&(s=4294967040),this._drawImage(t.texIndex,t.texX,t.texY,t.width,t.height,e,i,r,n,s,this.currentContextState.alpha)},t.prototype._drawImage=function(t,e,i,r,n,s,a,o,h,l,u){if(this.atlasTextures&&this.rgbas&&this.positions){t>=0&&this.atlasTextures[t]!==this.currentTexture&&(this.glCommitContext(),this.currentTexture=this.atlasTextures[t],this.gl.bindTexture(this.gl.TEXTURE_2D,this.currentTexture),this.glStartContext());var c=5*this.draws;u>255&&(u=255),this.rgbas[c+4]=l|u,c*=2;var d=s+o,f=a+h,p=this.transformCtx.getTransform().transformPoint({x:s,y:a}),g=this.transformCtx.getTransform().transformPoint({x:d,y:f});s=p.x,a=p.y,d=g.x,f=g.y,s=Math.floor(s),a=Math.floor(a),o=(d=Math.floor(d))-s,h=(f=Math.floor(f))-a;var m=this.canvas.height;this.offscreen&&(m=this.offscreen.getHeight());var v=this.canvas.width;if(this.offscreen&&(v=this.offscreen.getWidth()),0===this.currentContextState.clipY2&&0===this.currentContextState.clipX2&&(this.currentContextState.clipY=-100,this.currentContextState.clipY2=m+100,this.currentContextState.clipX=-100,this.currentContextState.clipX2=v+100),this.currentContextState.clipX<this.currentContextState.clipX2){if(s>this.currentContextState.clipX2)return;if(d<this.currentContextState.clipX)return;if(d>this.currentContextState.clipX2&&(r*=y=1-(d-this.currentContextState.clipX2)/o,o*=y),s<this.currentContextState.clipX){var y=1-(this.currentContextState.clipX-s)/o;o-=this.currentContextState.clipX-s,s=this.currentContextState.clipX,e+=r*(1-y),r*=y}}if(this.currentContextState.clipY<this.currentContextState.clipY2){if(a>this.currentContextState.clipY2)return;if(f<this.currentContextState.clipY)return;f>this.currentContextState.clipY2&&(n*=y=1-(f-this.currentContextState.clipY2)/h,h*=y),a<this.currentContextState.clipY&&(y=1-(this.currentContextState.clipY-a)/h,h-=this.currentContextState.clipY-a,a=this.currentContextState.clipY,i+=n*(1-y),n*=y)}this.positions[c]=s,this.positions[c+1]=a,this.positions[c+2]=o,this.positions[c+3]=h,this.positions[c+4]=e,this.positions[c+5]=i,this.positions[c+6]=r,this.positions[c+7]=n,this.draws++}},t.prototype.glStartContext=function(){},t.prototype.glCommitContext=function(){this.draws>0&&this.rgbas&&this.extension&&(this.gl.bufferSubData(this.gl.ARRAY_BUFFER,0,this.rgbas.subarray(0,5*this.draws)),this.extension.drawElementsInstancedANGLE(this.gl.TRIANGLES,6,this.gl.UNSIGNED_BYTE,0,this.draws),this.draws=0)},t.prototype.renderStart=function(){this.transformCtx.reset?this.transformCtx.reset():this.canvas.width+=0,this.draws=0,this.resetState(),this.glStartContext()},t.prototype.renderEnd=function(){this.glCommitContext()},t.prototype.applyFont=function(){},t.prototype.smooth=function(){},t.prototype.copy=function(){return t.NULL_COPY},t.prototype.getOffscreen=function(){return this.offscreen},t.prototype.clip=function(t,e,i,r){var n=this.transformCtx.getTransform().transformPoint({x:t,y:e}),s=this.transformCtx.getTransform().transformPoint({x:t+i,y:e+r});this.currentContextState.clipX=n.x,this.currentContextState.clipY=n.y,this.currentContextState.clipX2=s.x,this.currentContextState.clipY2=s.y},t.prototype.createOffscreen=function(){this.offscreenId++;var t=new a.OpenGlOffscreen(this.gl,this,this.offscreenId);return this.offscreens.push(t),50===this.offscreens.length&&n.GuteLog.log("50 offscreens have been created!"),t},t.prototype.drawToOffscreen=function(t){this.offscreen&&this.offscreen.unuse(),this.offscreen=t,this.offscreen&&this.offscreen.use()},t.prototype.drawOffscreen=function(t){if(this.shaderProgram){var e=t;this.glCommitContext(),this.glStartContext(),this.gl.uniform2f(this.getUniformLoc("uTexSize"),e.width,e.height),this.gl.bindTexture(this.gl.TEXTURE_2D,e.texture),this._drawImage(-100,0,e.height,e.width,-e.height,0,0,e.width,e.height,4294967040,255),this.glCommitContext(),this.gl.uniform2f(this.getUniformLoc("uTexSize"),this.texWidth,this.texHeight),this.gl.bindTexture(this.gl.TEXTURE_2D,this.currentTexture),this.glStartContext()}},t.prototype.drawScaledOffscreen=function(t,e,i,r,n){if(this.shaderProgram){var s=t;this.glCommitContext(),this.glStartContext(),this.gl.uniform2f(this.getUniformLoc("uTexSize"),s.width,s.height),this.gl.bindTexture(this.gl.TEXTURE_2D,s.texture),this._drawImage(-100,0,s.height,s.width,-s.height,e,i,r,n,4294967040,255),this.glCommitContext(),this.gl.uniform2f(this.getUniformLoc("uTexSize"),this.texWidth,this.texHeight),this.gl.bindTexture(this.gl.TEXTURE_2D,this.currentTexture),this.glStartContext()}},t.prototype.drawScaledOffscreenSegment=function(t,e,i,r,n,s,a,o,h){if(this.shaderProgram){var l=t;this.glCommitContext(),this.glStartContext(),this.gl.uniform2f(this.getUniformLoc("uTexSize"),l.width,l.height),this.gl.bindTexture(this.gl.TEXTURE_2D,l.texture),this._drawImage(-100,e,l.height-i,r,-n,s,a,o,h,4294967040,255),this.glCommitContext(),this.gl.uniform2f(this.getUniformLoc("uTexSize"),this.texWidth,this.texHeight),this.gl.bindTexture(this.gl.TEXTURE_2D,this.currentTexture),this.glStartContext()}},t.prototype.fillRect=function(t,e,i,r,n){var s=l(n),a=this.alpha<255?this.alpha:s%256;a<255&&(s=4294967040&s|a),this._drawImage(0,0,0,1,1,t,e,i,r,s,a)},t.prototype.fillCircle=function(t,e,i,r){},t.prototype.drawCircle=function(t,e,i,r,n){},t.prototype.setLineDash=function(t){},t.prototype.drawLine=function(t,e,i,r,n,s){},t.prototype.drawBitmap=function(t,e,i){i&&i.draw(this,t,e)},t.prototype.drawScaledBitmap=function(t,e,i,r,n){n&&n.drawScaled(this,t,e,i,r)},t.prototype.clearRect=function(t,e,i,r){this.glCommitContext(),this.glStartContext(),this.gl.blendFunc(this.gl.ZERO,this.gl.ZERO),this.fillRect(t,e,i,r,"rgba(0,0,0,0)"),this.glCommitContext(),this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA),this.glStartContext()},t.prototype.clear=function(){this.gl.clearColor(0,0,0,0),this.gl.clear(this.gl.COLOR_BUFFER_BIT)},t.prototype.setFont=function(t){},t.prototype.setComposite=function(t){"multiply"===t&&(this.glCommitContext(),this.glStartContext(),this.gl.blendFunc(this.gl.ZERO,this.gl.SRC_COLOR)),"source-over"===t&&(this.glCommitContext(),this.glStartContext(),this.gl.blendFunc(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA))},t.prototype.setFontSize=function(t){},t.prototype.drawString=function(t,e,i,r){},t.prototype.translate=function(t,e){this.transformCtx.translate(t,e)},t.prototype.scale=function(t,e){this.transformCtx.scale(t,e)},t.prototype.push=function(){this.saves++,this.transformCtx.save()},t.prototype.pop=function(){this.saves--,this.transformCtx.restore(),this.resetState()},t.prototype.getWidth=function(){return this.canvas.width},t.prototype.getHeight=function(){return this.canvas.height},t.prototype.fitScreen=function(t){var e=Math.max(document.documentElement.clientWidth,window.innerWidth||0),i=Math.max(document.documentElement.clientHeight,window.innerHeight||0),r=Math.floor(e/t)*t,n=Math.floor(i/t)*t,s=r/t,a=n/t;this.canvas.style.position="absolute",this.canvas.style.top="0px",this.canvas.style.left="0px",this.canvas.width=s,this.canvas.height=a,this.canvas.style.width=r+"px",this.canvas.style.height=n+"px"},t.prototype.getStringWidth=function(t){return 0},t.prototype.setAlpha=function(t){this.currentContextState.alpha=Math.floor(255*t)},t.prototype.getTransform=function(){return this.transformCtx.getTransform()},t.NULL_COPY=new s.NullBitmap,t}();e.OpenGLGraphicsImpl=d},866:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.SoundImpl=e.AUDIO_CONTEXT=void 0;var r,n=i(717),s=i(870);"undefined"!=typeof window&&(r=window.AudioContext||window.webkitAudioContext),"undefined"!=typeof document&&document.addEventListener("visibilitychange",function(){if((0,n.isMusicOn)()&&a.CURRENT_MUSIC)if(document.hidden){a.CURRENT_MUSIC.stop();try{e.AUDIO_CONTEXT.suspend().catch(function(t){s.GuteLog.trace("Suspend audio context failed"),s.GuteLog.trace(t)})}catch(t){s.GuteLog.trace("Suspend audio context failed"),s.GuteLog.trace(t)}}else{try{e.AUDIO_CONTEXT.resume().catch(function(t){s.GuteLog.trace("Resume audio context failed"),s.GuteLog.trace(t)})}catch(t){s.GuteLog.trace("Resume audio context failed"),s.GuteLog.trace(t)}setTimeout(function(){a.CURRENT_MUSIC.play(a.CURRENT_MUSIC.volume)},500)}if((0,n.isSoundOn)())for(var t=0,i=a.CURRENT_LOOPS;t<i.length;t++){var r=i[t];document.hidden?r.stop(!1):r.play(r.volume)}});var a=function(){function t(t,e,i){var r=this;if(this.loaded=!1,this.volume=1,this.music=!1,this.looped=!1,this.name=t,this.url=t,this.music=e,i)this.loaded=!0,i.then(function(t){r.data=t,r.tryLoad()});else{var n=new XMLHttpRequest;n.open("GET",t,!0),n.responseType="arraybuffer",n.onload=function(t){var e=n.response;e&&(r.data=e,r.tryLoad())},n.send()}this.loaded=!0}return t.setSoundVolume=function(i){this.soundVolume=i;for(var r=0,n=this.CURRENT_LOOPS;r<n.length;r++){var s=n[r];s.gain.gain.linearRampToValueAtTime(s.volume*t.soundVolume,e.AUDIO_CONTEXT.currentTime+.25)}},t.getSoundVolume=function(){return this.soundVolume},t.setMusicVolume=function(i){this.musicVolume=i,t.CURRENT_MUSIC&&t.CURRENT_MUSIC.gain&&t.CURRENT_MUSIC.gain.gain.linearRampToValueAtTime(t.CURRENT_MUSIC.volume*t.musicVolume,e.AUDIO_CONTEXT.currentTime+.25)},t.getMusicVolume=function(){return this.musicVolume},t.prototype.tryLoad=function(){var i=this;if(e.AUDIO_CONTEXT&&this.data)try{var r=e.AUDIO_CONTEXT.decodeAudioData(this.data,function(e){i.buffer=e,t.CURRENT_MUSIC===i&&(t.CURRENT_MUSIC=null,i.play(i.volume))},function(t){s.GuteLog.error(t),s.GuteLog.log("Sound decode failed for this: "+i.name),s.GuteLog.log("Failed to load: "+i.url)});r&&r.then(function(){}).catch(function(t){})}catch(t){s.GuteLog.log("decodeAudioData exception on loading "+this.url)}},t.prototype.confirmAudioContext=function(){try{e.AUDIO_CONTEXT.resume().catch(function(t){s.GuteLog.trace("Resume audio context failed"),s.GuteLog.trace(t)})}catch(t){s.GuteLog.trace("Resume audio context failed")}},t.prototype.initOnFirstClick=function(){if(!e.AUDIO_CONTEXT)try{e.AUDIO_CONTEXT=new r,e.AUDIO_CONTEXT.resume().catch(function(t){s.GuteLog.trace("Resume audio context failed"),s.GuteLog.trace(t)})}catch(t){s.GuteLog.trace("Resume audio context failed")}this.tryLoad()},t.prototype.play=function(i,r){if(void 0===r&&(r=!1),this.confirmAudioContext(),this.volume=i,this.buffer){if(this.music){if(t.CURRENT_MUSIC!==this&&(t.CURRENT_MUSIC&&t.CURRENT_MUSIC.stop(),t.CURRENT_MUSIC=this),this.source)return}else if(document.hidden)return;this.music&&!(0,n.isMusicOn)()||(this.music||(0,n.isSoundOn)())&&(this.source=e.AUDIO_CONTEXT.createBufferSource(),this.source.buffer=this.buffer,this.gain=e.AUDIO_CONTEXT.createGain(),this.source.connect(this.gain),this.gain.connect(e.AUDIO_CONTEXT.destination),this.looped=!1,(this.music||r)&&(this.gain.gain.value=0,this.source.loop=!0,this.looped=!0),this.source.start(0),this.music||r?this.gain.gain.linearRampToValueAtTime(i*(r?t.soundVolume:t.musicVolume),e.AUDIO_CONTEXT.currentTime+2):this.gain.gain.value=i*t.soundVolume,r&&t.CURRENT_LOOPS.push(this))}else this.music&&(t.CURRENT_MUSIC&&t.CURRENT_MUSIC.stop(),t.CURRENT_MUSIC=this)},t.prototype.stop=function(i){var r=this;if(void 0===i&&(i=!0),this.source){if(this.looped){this.gain.gain.linearRampToValueAtTime(0,e.AUDIO_CONTEXT.currentTime+3);var n=this.source;setTimeout(function(){n.stop()},4e3)}else this.source.stop();this.source=null}if(i){var s=t.CURRENT_LOOPS.findIndex(function(t){return t===r});s>=0&&t.CURRENT_LOOPS.splice(s,1)}},t.CURRENT_LOOPS=[],t.soundVolume=1,t.musicVolume=1,t}();e.SoundImpl=a},870:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.GuteLog=void 0;var i=function(){function t(){}return t.log=function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];t.INFO&&console.log.apply(console,e)},t.info=function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];t.INFO&&console.info.apply(console,e)},t.error=function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];t.ERROR&&console.error.apply(console,e)},t.warm=function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];t.WARN&&console.warn.apply(console,e)},t.trace=function(){for(var e=[],i=0;i<arguments.length;i++)e[i]=arguments[i];t.TRACE&&console.trace.apply(console,e)},t.INFO=!0,t.ERROR=!0,t.WARN=!0,t.TRACE=!1,t}();e.GuteLog=i},905:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.SoundScape=e.SoundEasing=void 0;var r,n=i(866);!function(t){t[t.Linear=0]="Linear",t[t.Quadratic=1]="Quadratic",t[t.Cubic=2]="Cubic"}(r||(e.SoundEasing=r={}));var s=function(){function t(){this._soundVolume=1,this.points=[],this.listenerX=0,this.listenerY=0,this.categories={}}return t.prototype.category=function(t,e,i,r,n){return this.categories[t]={name:t,volume:e,maxDistance2:i*i,scale2:r*r,easing:n},this},Object.defineProperty(t.prototype,"soundVolume",{get:function(){return this._soundVolume},set:function(t){this._soundVolume=t},enumerable:!1,configurable:!0}),t.prototype.moveTo=function(t,e){this.listenerX=t,this.listenerY=e,this.updateVolumes()},t.prototype.clear=function(){for(var t=0,e=this.points;t<e.length;t++)e[t].source.stop();this.points=[]},t.prototype.play=function(t,e,i,r,s){var a=this;if(n.AUDIO_CONTEXT){var o=t,h=n.AUDIO_CONTEXT.createBufferSource();h.buffer=o.buffer;var l=n.AUDIO_CONTEXT.createGain();h.connect(l),l.connect(n.AUDIO_CONTEXT.destination);var u={x:r,y:s,volume:e,source:h,gain:l,category:i};l.gain.value=this.calculateVolume(u),this.points.push(u),h.addEventListener("ended",function(t){var e=a.points.indexOf(u);a.points.splice(e,1)}),h.start()}},t.prototype.updateVolumes=function(){for(var t=0,e=this.points;t<e.length;t++){var i=e[t],r=this.calculateVolume(i);i.gain.gain.linearRampToValueAtTime(r,n.AUDIO_CONTEXT.currentTime)}},t.prototype.calculateVolume=function(t){var e=this.categories[t.category];if(void 0===e)return t.volume*this._soundVolume;if(void 0===t.x||void 0===t.y)return t.volume*e.volume*this._soundVolume;var i=t.x-this.listenerX,n=t.y-this.listenerY,s=(i*i+n*n)/e.scale2,a=Math.max(1-s/e.maxDistance2,0);switch(e.easing){case r.Linear:return this._soundVolume*t.volume*e.volume*a;case r.Quadratic:return this._soundVolume*t.volume*e.volume*a*a;case r.Cubic:return this._soundVolume*t.volume*e.volume*a*a*a}},t}();e.SoundScape=s},912:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.NullBitmap=void 0;var i=function(){function t(){this.width=0,this.height=0,this.loaded=!0,this.name="null"}return t.prototype.draw=function(t,e,i){},t.prototype.drawScaled=function(t,e,i,r,n){},t.prototype.initOnFirstClick=function(){},t}();e.NullBitmap=i},914:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.OpenGlOffscreen=void 0;var i=function(){function t(t,e,i){this.texture=null,this.fb=null,this.id=0,this.inuse=!1,this.clipX=0,this.clipY=0,this.clipX2=0,this.clipY2=0,this.alpha=255,this.refreshRequired=!1,this.gl=t,this.width=0,this.height=0,this.graphics=e,this.id=i}return t.prototype.getWidth=function(){return this.width},t.prototype.getHeight=function(){return this.height},t.prototype.recover=function(){this.fb=null,this.texture=null,this.refreshRequired=!0,this.setDimension(this.width,this.height)},t.prototype.use=function(){this.graphics.shaderProgram&&(this.inuse||(this.refreshRequired=!1,this.graphics.glCommitContext(),this.inuse=!0,this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.fb),this.gl.uniform2f(this.graphics.getUniformLoc("uCanvasSize"),Math.floor(this.width/2),Math.floor(this.height/2)),this.gl.viewport(0,0,this.width,this.height),this.graphics.currentContextState=this,this.graphics.push(),this.graphics.transformCtx.resetTransform(),this.graphics.resetState(),this.graphics.glStartContext()))},t.prototype.unuse=function(){this.graphics.shaderProgram&&this.inuse&&(this.inuse=!1,this.graphics.glCommitContext(),this.graphics.currentContextState=this.graphics,this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.viewport(0,0,this.graphics.canvas.width,this.graphics.canvas.height),this.gl.uniform2f(this.graphics.getUniformLoc("uCanvasSize"),this.graphics.canvas.width/2,this.graphics.canvas.height/2),this.graphics.pop(),this.graphics.glStartContext())},t.prototype.needsRefresh=function(){return this.refreshRequired},t.prototype.release=function(){this.texture&&this.gl.deleteTexture(this.texture),this.fb&&(this.gl.deleteFramebuffer(this.fb),this.fb=0),this.width=0,this.height=0},t.prototype.setDimension=function(t,e){if(this.width!==t||this.height!==e||!this.fb){this.release(),this.width=t,this.height=e,this.texture=this.gl.createTexture(),this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture);var i=this.gl.RGBA,r=this.gl.RGBA,n=this.gl.UNSIGNED_BYTE;this.gl.texImage2D(this.gl.TEXTURE_2D,0,i,t,e,0,r,n,null),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.NEAREST),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.NEAREST),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE),this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE),this.fb=this.gl.createFramebuffer(),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.fb),this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,this.texture,0),this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null),this.gl.bindTexture(this.gl.TEXTURE_2D,this.graphics.currentTexture)}},t}();e.OpenGlOffscreen=i},933:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.OpenGLBitmap=void 0;var r=i(870),n=function(){function t(t,e,i,n){void 0===n&&(n=void 0);var s=this;this.width=0,this.height=0,this.loaded=!1,this.texX=0,this.texY=0,this.texIndex=0,t.registerImage(this),this.name=e,this.image=new Image,this.image.onerror=function(){r.GuteLog.log("Error loading: "+e)},this.image.onload=function(){s.width=s.image.width,s.height=s.image.height,n?n.adjustImage(s.image).then(function(e){s.image=e,s.loaded=!0,t.newResourceLoaded()}):(s.loaded=!0,t.newResourceLoaded())},i?i.then(function(t){s.image.src="data:"+e.substring(e.length-3)+";base64,"+t}):this.image.src=e}return t.prototype.draw=function(t,e,i){t._drawBitmap(this,e,i,this.width,this.height)},t.prototype.drawScaled=function(t,e,i,r,n){t._drawBitmap(this,e,i,r,n)},t.prototype.initOnFirstClick=function(){},t}();e.OpenGLBitmap=n},957:function(t,e,i){"use strict";var r=this&&this.__spreadArray||function(t,e,i){if(i||2===arguments.length)for(var r,n=0,s=e.length;n<s;n++)!r&&n in e||(r||(r=Array.prototype.slice.call(e,0,n)),r[n]=e[n]);return t.concat(r||Array.prototype.slice.call(e))};Object.defineProperty(e,"__esModule",{value:!0}),e.OpenGLTilesetImpl=void 0;var n=i(870),s=function(){function t(t,e,i,r,n,s,a){this.name="tile",this.texX=0,this.texY=0,this.texIndex=0,this.col=4294967040,this.parent=t,this.width=n,this.height=s,this.x=i,this.y=r,this.scale=a,this.loaded=!0,this.image=e}return t.prototype.copyWithCol=function(e){var i=new t(this.parent,this.image,this.x,this.y,this.width,this.height,this.scale);return i.loaded=!0,i.col=e,i.texX=this.texX,i.texY=this.texY,i},t.prototype.draw=function(t,e,i){var r=t;this.texX=this.parent.texX+this.x,this.texY=this.parent.texY+this.y,this.texIndex=this.parent.texIndex,r._drawBitmap(this,e,i,Math.floor(this.width*this.scale),Math.floor(this.height*this.scale),this.col)},t.prototype.drawScaled=function(t,e,i,r,n){var s=t;this.texX=this.parent.texX+this.x,this.texY=this.parent.texY+this.y,this.texIndex=this.parent.texIndex,s._drawBitmap(this,e,i,r,n,this.col)},t.prototype.initOnFirstClick=function(){},t}(),a=function(){function t(t,e,i,r,a,o,h){void 0===o&&(o=1),void 0===h&&(h=void 0);var l=this;this.loaded=!1,this.bitmaps=[],this.scanline=0,this.tileCount=0,this.onLoaded=function(){},this.texX=0,this.texY=0,this.texIndex=0,this.tintTiles={},this.tileWidth=this.originalTileWidth=r,this.tileHeight=this.originalTileHeight=a,this.scale=o,this.name=e,this.image=new Image,this.image.onerror=function(){n.GuteLog.log("Error loading: "+e)},this.image.onload=function(){l.scanline=Math.floor(l.image.width/l.tileWidth);var e=Math.floor(l.image.height/l.tileHeight);if(l.tileCount=e*l.scanline,h)h.adjustImage(l.image).then(function(i){l.image=i;for(var r=0;r<e;r++)for(var n=0;n<l.scanline;n++)l.bitmaps.push(new s(l,l.image,n*l.tileWidth,r*l.tileHeight,l.tileWidth,l.tileHeight,o));l.tileWidth*=o,l.tileHeight*=o,l.onLoaded(),t.registerImage(l),l.loaded=!0});else{for(var i=0;i<e;i++)for(var r=0;r<l.scanline;r++)l.bitmaps.push(new s(l,l.image,r*l.tileWidth,i*l.tileHeight,l.tileWidth,l.tileHeight,o));l.tileWidth*=o,l.tileHeight*=o,l.onLoaded(),t.registerImage(l),l.loaded=!0}},i?i.then(function(t){var e=window.URL||window.webkitURL;l.image.src=e.createObjectURL(t)}):this.image.src=e}return Object.defineProperty(t.prototype,"height",{get:function(){return this.image.height},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"width",{get:function(){return this.image.width},enumerable:!1,configurable:!0}),t.prototype.draw=function(t,e,i){},t.prototype.drawScaled=function(t,e,i,r,n){},t.prototype.getBlockColorTile=function(t,e,i){var r=this.tintTiles[e];r||(r=this.tintTiles[e]=[]);var n=r[t];if(!n){i[0]*=255,i[1]*=255,i[2]*=255;var s=16777216*i[0]+65536*i[1]+256*i[2]+Math.floor(255*i[3]);r[t]=n=this.getTile(t).copyWithCol(s)}return n},t.prototype.getShadedTile=function(t,e,i){var r=this.tintTiles[e];r||(r=this.tintTiles[e]=[]);var n=r[t];if(!n){var s=4294967040+Math.floor(255*i);r[t]=n=this.getTile(t).copyWithCol(s)}return n},t.prototype.getTintedTile=function(t,e,i){var n=this.tintTiles[e];n||(n=this.tintTiles[e]=[]);var s=n[t];if(!s){var a=r([],i,!0);a[0]*=255,a[1]*=255,a[2]*=255,a[3]||(a[3]=1);var o=16777216*a[0]+65536*a[1]+256*a[2]+Math.floor(255*a[3]);n[t]=s=this.getTile(t).copyWithCol(o)}return s},t.prototype.modify=function(t){var e=document.createElement("canvas");e.width=this.image.width,e.height=this.image.height;var i=e.getContext("2d");if(i){i.drawImage(this.image,0,0);var r=i.getImageData(0,0,e.width,e.height);t(r),i.putImageData(r,0,0)}this.image=new Image,this.image.src=e.toDataURL();for(var n=0,s=this.bitmaps;n<s.length;n++)s[n].image=this.image;return this},t.prototype.getTilesAcross=function(){return this.scanline},t.prototype.getTileWidth=function(){return this.tileWidth},t.prototype.getTileHeight=function(){return this.tileHeight},t.prototype.getTileCount=function(){return this.tileCount},t.prototype.initOnFirstClick=function(){},t.prototype.getTile=function(t){return this.bitmaps[t]},t}();e.OpenGLTilesetImpl=a},971:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.MapLayer=void 0;var i=function(){function t(t,e,i,r){this.name=e,this.level=t,this.width=i,this.height=r,this.tiles=[],this.flips=[];for(var n=0;n<this.width*this.height;n++)this.tiles.push(0),this.flips.push(0)}return t.prototype.getFlipFlags=function(t,e){if(t<0||e<0||t>=this.width||e>=this.height)return 0;var i=t+e*this.width;return this.flips[i]},t.prototype.set=function(t,e,i){if(!(t<0||e<0||t>=this.width||e>=this.height)){var r=t+e*this.width;this.tiles[r]=i}},t.prototype.get=function(t,e){if(t<0||e<0||t>=this.width||e>=this.height)return 0;var i=t+e*this.width;return this.tiles[i]},t.prototype.copy=function(e){for(var i=new t(e,this.name,this.width,this.height),r=0;r<this.width*this.height;r++)i.tiles[r]=this.tiles[r],i.flips[r]=this.flips[r];return i},t.FLIP_X=1,t.FLIP_Y=2,t}();e.MapLayer=i}},e={};function i(r){var n=e[r];if(void 0!==n)return n.exports;var s=e[r]={exports:{}};return t[r].call(s.exports,s,s.exports,i),s.exports}return i.d=(t,e)=>{for(var r in e)i.o(e,r)&&!i.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i(156)})());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,