/*! For license information please see index-min.js.LICENSE.txt */
!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.gute=e():t.gute=e()}(self,(function(){return(()=>{var t={733:(t,e,i)=>{t.exports=function t(e,i,r){function n(a,o){if(!i[a]){if(!e[a]){if(s)return s(a,!0);var h=new Error("Cannot find module '"+a+"'");throw h.code="MODULE_NOT_FOUND",h}var u=i[a]={exports:{}};e[a][0].call(u.exports,(function(t){return n(e[a][1][t]||t)}),u,u.exports,t,e,i,r)}return i[a].exports}for(var s=void 0,a=0;a<r.length;a++)n(r[a]);return n}({1:[function(t,e,i){"use strict";var r=t("./utils"),n=t("./support"),s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";i.encode=function(t){for(var e,i,n,a,o,h,u,l=[],c=0,d=t.length,f=d,p="string"!==r.getTypeOf(t);c<t.length;)f=d-c,n=p?(e=t[c++],i=c<d?t[c++]:0,c<d?t[c++]:0):(e=t.charCodeAt(c++),i=c<d?t.charCodeAt(c++):0,c<d?t.charCodeAt(c++):0),a=e>>2,o=(3&e)<<4|i>>4,h=1<f?(15&i)<<2|n>>6:64,u=2<f?63&n:64,l.push(s.charAt(a)+s.charAt(o)+s.charAt(h)+s.charAt(u));return l.join("")},i.decode=function(t){var e,i,r,a,o,h,u=0,l=0,c="data:";if(t.substr(0,c.length)===c)throw new Error("Invalid base64 input, it looks like a data url.");var d,f=3*(t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"")).length/4;if(t.charAt(t.length-1)===s.charAt(64)&&f--,t.charAt(t.length-2)===s.charAt(64)&&f--,f%1!=0)throw new Error("Invalid base64 input, bad content length.");for(d=n.uint8array?new Uint8Array(0|f):new Array(0|f);u<t.length;)e=s.indexOf(t.charAt(u++))<<2|(a=s.indexOf(t.charAt(u++)))>>4,i=(15&a)<<4|(o=s.indexOf(t.charAt(u++)))>>2,r=(3&o)<<6|(h=s.indexOf(t.charAt(u++))),d[l++]=e,64!==o&&(d[l++]=i),64!==h&&(d[l++]=r);return d}},{"./support":30,"./utils":32}],2:[function(t,e,i){"use strict";var r=t("./external"),n=t("./stream/DataWorker"),s=t("./stream/Crc32Probe"),a=t("./stream/DataLengthProbe");function o(t,e,i,r,n){this.compressedSize=t,this.uncompressedSize=e,this.crc32=i,this.compression=r,this.compressedContent=n}o.prototype={getContentWorker:function(){var t=new n(r.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a("data_length")),e=this;return t.on("end",(function(){if(this.streamInfo.data_length!==e.uncompressedSize)throw new Error("Bug : uncompressed data size mismatch")})),t},getCompressedWorker:function(){return new n(r.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize",this.compressedSize).withStreamInfo("uncompressedSize",this.uncompressedSize).withStreamInfo("crc32",this.crc32).withStreamInfo("compression",this.compression)}},o.createWorkerFrom=function(t,e,i){return t.pipe(new s).pipe(new a("uncompressedSize")).pipe(e.compressWorker(i)).pipe(new a("compressedSize")).withStreamInfo("compression",e)},e.exports=o},{"./external":6,"./stream/Crc32Probe":25,"./stream/DataLengthProbe":26,"./stream/DataWorker":27}],3:[function(t,e,i){"use strict";var r=t("./stream/GenericWorker");i.STORE={magic:"\0\0",compressWorker:function(t){return new r("STORE compression")},uncompressWorker:function(){return new r("STORE decompression")}},i.DEFLATE=t("./flate")},{"./flate":7,"./stream/GenericWorker":28}],4:[function(t,e,i){"use strict";var r=t("./utils"),n=function(){for(var t,e=[],i=0;i<256;i++){t=i;for(var r=0;r<8;r++)t=1&t?3988292384^t>>>1:t>>>1;e[i]=t}return e}();e.exports=function(t,e){return void 0!==t&&t.length?"string"!==r.getTypeOf(t)?function(t,e,i,r){var s=n,a=0+i;t^=-1;for(var o=0;o<a;o++)t=t>>>8^s[255&(t^e[o])];return-1^t}(0|e,t,t.length):function(t,e,i,r){var s=n,a=0+i;t^=-1;for(var o=0;o<a;o++)t=t>>>8^s[255&(t^e.charCodeAt(o))];return-1^t}(0|e,t,t.length):0}},{"./utils":32}],5:[function(t,e,i){"use strict";i.base64=!1,i.binary=!1,i.dir=!1,i.createFolders=!0,i.date=null,i.compression=null,i.compressionOptions=null,i.comment=null,i.unixPermissions=null,i.dosPermissions=null},{}],6:[function(t,e,i){"use strict";var r;r="undefined"!=typeof Promise?Promise:t("lie"),e.exports={Promise:r}},{lie:37}],7:[function(t,e,i){"use strict";var r="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Uint32Array,n=t("pako"),s=t("./utils"),a=t("./stream/GenericWorker"),o=r?"uint8array":"array";function h(t,e){a.call(this,"FlateWorker/"+t),this._pako=null,this._pakoAction=t,this._pakoOptions=e,this.meta={}}i.magic="\b\0",s.inherits(h,a),h.prototype.processChunk=function(t){this.meta=t.meta,null===this._pako&&this._createPako(),this._pako.push(s.transformTo(o,t.data),!1)},h.prototype.flush=function(){a.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},h.prototype.cleanUp=function(){a.prototype.cleanUp.call(this),this._pako=null},h.prototype._createPako=function(){this._pako=new n[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var t=this;this._pako.onData=function(e){t.push({data:e,meta:t.meta})}},i.compressWorker=function(t){return new h("Deflate",t)},i.uncompressWorker=function(){return new h("Inflate",{})}},{"./stream/GenericWorker":28,"./utils":32,pako:38}],8:[function(t,e,i){"use strict";function r(t,e){var i,r="";for(i=0;i<e;i++)r+=String.fromCharCode(255&t),t>>>=8;return r}function n(t,e,i,n,a,l){var c,d,f=t.file,p=t.compression,m=l!==o.utf8encode,g=s.transformTo("string",l(f.name)),_=s.transformTo("string",o.utf8encode(f.name)),v=f.comment,y=s.transformTo("string",l(v)),w=s.transformTo("string",o.utf8encode(v)),b=_.length!==f.name.length,x=w.length!==v.length,k="",S="",E="",C=f.dir,T=f.date,O={crc32:0,compressedSize:0,uncompressedSize:0};e&&!i||(O.crc32=t.crc32,O.compressedSize=t.compressedSize,O.uncompressedSize=t.uncompressedSize);var I=0;e&&(I|=8),m||!b&&!x||(I|=2048);var A=0,z=0;C&&(A|=16),"UNIX"===a?(z=798,A|=function(t,e){var i=t;return t||(i=e?16893:33204),(65535&i)<<16}(f.unixPermissions,C)):(z=20,A|=function(t){return 63&(t||0)}(f.dosPermissions)),c=T.getUTCHours(),c<<=6,c|=T.getUTCMinutes(),c<<=5,c|=T.getUTCSeconds()/2,d=T.getUTCFullYear()-1980,d<<=4,d|=T.getUTCMonth()+1,d<<=5,d|=T.getUTCDate(),b&&(S=r(1,1)+r(h(g),4)+_,k+="up"+r(S.length,2)+S),x&&(E=r(1,1)+r(h(y),4)+w,k+="uc"+r(E.length,2)+E);var R="";return R+="\n\0",R+=r(I,2),R+=p.magic,R+=r(c,2),R+=r(d,2),R+=r(O.crc32,4),R+=r(O.compressedSize,4),R+=r(O.uncompressedSize,4),R+=r(g.length,2),R+=r(k.length,2),{fileRecord:u.LOCAL_FILE_HEADER+R+g+k,dirRecord:u.CENTRAL_FILE_HEADER+r(z,2)+R+r(y.length,2)+"\0\0\0\0"+r(A,4)+r(n,4)+g+k+y}}var s=t("../utils"),a=t("../stream/GenericWorker"),o=t("../utf8"),h=t("../crc32"),u=t("../signature");function l(t,e,i,r){a.call(this,"ZipFileWorker"),this.bytesWritten=0,this.zipComment=e,this.zipPlatform=i,this.encodeFileName=r,this.streamFiles=t,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}s.inherits(l,a),l.prototype.push=function(t){var e=t.meta.percent||0,i=this.entriesCount,r=this._sources.length;this.accumulate?this.contentBuffer.push(t):(this.bytesWritten+=t.data.length,a.prototype.push.call(this,{data:t.data,meta:{currentFile:this.currentFile,percent:i?(e+100*(i-r-1))/i:100}}))},l.prototype.openedSource=function(t){this.currentSourceOffset=this.bytesWritten,this.currentFile=t.file.name;var e=this.streamFiles&&!t.file.dir;if(e){var i=n(t,e,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:i.fileRecord,meta:{percent:0}})}else this.accumulate=!0},l.prototype.closedSource=function(t){this.accumulate=!1;var e=this.streamFiles&&!t.file.dir,i=n(t,e,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(i.dirRecord),e)this.push({data:function(t){return u.DATA_DESCRIPTOR+r(t.crc32,4)+r(t.compressedSize,4)+r(t.uncompressedSize,4)}(t),meta:{percent:100}});else for(this.push({data:i.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},l.prototype.flush=function(){for(var t=this.bytesWritten,e=0;e<this.dirRecords.length;e++)this.push({data:this.dirRecords[e],meta:{percent:100}});var i=this.bytesWritten-t,n=function(t,e,i,n,a){var o=s.transformTo("string",a(n));return u.CENTRAL_DIRECTORY_END+"\0\0\0\0"+r(t,2)+r(t,2)+r(e,4)+r(i,4)+r(o.length,2)+o}(this.dirRecords.length,i,t,this.zipComment,this.encodeFileName);this.push({data:n,meta:{percent:100}})},l.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},l.prototype.registerPrevious=function(t){this._sources.push(t);var e=this;return t.on("data",(function(t){e.processChunk(t)})),t.on("end",(function(){e.closedSource(e.previous.streamInfo),e._sources.length?e.prepareNextSource():e.end()})),t.on("error",(function(t){e.error(t)})),this},l.prototype.resume=function(){return!!a.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},l.prototype.error=function(t){var e=this._sources;if(!a.prototype.error.call(this,t))return!1;for(var i=0;i<e.length;i++)try{e[i].error(t)}catch(t){}return!0},l.prototype.lock=function(){a.prototype.lock.call(this);for(var t=this._sources,e=0;e<t.length;e++)t[e].lock()},e.exports=l},{"../crc32":4,"../signature":23,"../stream/GenericWorker":28,"../utf8":31,"../utils":32}],9:[function(t,e,i){"use strict";var r=t("../compressions"),n=t("./ZipFileWorker");i.generateWorker=function(t,e,i){var s=new n(e.streamFiles,i,e.platform,e.encodeFileName),a=0;try{t.forEach((function(t,i){a++;var n=function(t,e){var i=t||e,n=r[i];if(!n)throw new Error(i+" is not a valid compression method !");return n}(i.options.compression,e.compression),o=i.options.compressionOptions||e.compressionOptions||{},h=i.dir,u=i.date;i._compressWorker(n,o).withStreamInfo("file",{name:t,dir:h,date:u,comment:i.comment||"",unixPermissions:i.unixPermissions,dosPermissions:i.dosPermissions}).pipe(s)})),s.entriesCount=a}catch(t){s.error(t)}return s}},{"../compressions":3,"./ZipFileWorker":8}],10:[function(t,e,i){"use strict";function r(){if(!(this instanceof r))return new r;if(arguments.length)throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");this.files=Object.create(null),this.comment=null,this.root="",this.clone=function(){var t=new r;for(var e in this)"function"!=typeof this[e]&&(t[e]=this[e]);return t}}(r.prototype=t("./object")).loadAsync=t("./load"),r.support=t("./support"),r.defaults=t("./defaults"),r.version="3.7.1",r.loadAsync=function(t,e){return(new r).loadAsync(t,e)},r.external=t("./external"),e.exports=r},{"./defaults":5,"./external":6,"./load":11,"./object":15,"./support":30}],11:[function(t,e,i){"use strict";var r=t("./utils"),n=t("./external"),s=t("./utf8"),a=t("./zipEntries"),o=t("./stream/Crc32Probe"),h=t("./nodejsUtils");function u(t){return new n.Promise((function(e,i){var r=t.decompressed.getContentWorker().pipe(new o);r.on("error",(function(t){i(t)})).on("end",(function(){r.streamInfo.crc32!==t.decompressed.crc32?i(new Error("Corrupted zip : CRC32 mismatch")):e()})).resume()}))}e.exports=function(t,e){var i=this;return e=r.extend(e||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:s.utf8decode}),h.isNode&&h.isStream(t)?n.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")):r.prepareContent("the loaded zip file",t,!0,e.optimizedBinaryString,e.base64).then((function(t){var i=new a(e);return i.load(t),i})).then((function(t){var i=[n.Promise.resolve(t)],r=t.files;if(e.checkCRC32)for(var s=0;s<r.length;s++)i.push(u(r[s]));return n.Promise.all(i)})).then((function(t){for(var r=t.shift(),n=r.files,s=0;s<n.length;s++){var a=n[s];i.file(a.fileNameStr,a.decompressed,{binary:!0,optimizedBinaryString:!0,date:a.date,dir:a.dir,comment:a.fileCommentStr.length?a.fileCommentStr:null,unixPermissions:a.unixPermissions,dosPermissions:a.dosPermissions,createFolders:e.createFolders})}return r.zipComment.length&&(i.comment=r.zipComment),i}))}},{"./external":6,"./nodejsUtils":14,"./stream/Crc32Probe":25,"./utf8":31,"./utils":32,"./zipEntries":33}],12:[function(t,e,i){"use strict";var r=t("../utils"),n=t("../stream/GenericWorker");function s(t,e){n.call(this,"Nodejs stream input adapter for "+t),this._upstreamEnded=!1,this._bindStream(e)}r.inherits(s,n),s.prototype._bindStream=function(t){var e=this;(this._stream=t).pause(),t.on("data",(function(t){e.push({data:t,meta:{percent:0}})})).on("error",(function(t){e.isPaused?this.generatedError=t:e.error(t)})).on("end",(function(){e.isPaused?e._upstreamEnded=!0:e.end()}))},s.prototype.pause=function(){return!!n.prototype.pause.call(this)&&(this._stream.pause(),!0)},s.prototype.resume=function(){return!!n.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},e.exports=s},{"../stream/GenericWorker":28,"../utils":32}],13:[function(t,e,i){"use strict";var r=t("readable-stream").Readable;function n(t,e,i){r.call(this,e),this._helper=t;var n=this;t.on("data",(function(t,e){n.push(t)||n._helper.pause(),i&&i(e)})).on("error",(function(t){n.emit("error",t)})).on("end",(function(){n.push(null)}))}t("../utils").inherits(n,r),n.prototype._read=function(){this._helper.resume()},e.exports=n},{"../utils":32,"readable-stream":16}],14:[function(t,e,i){"use strict";e.exports={isNode:"undefined"!=typeof Buffer,newBufferFrom:function(t,e){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(t,e);if("number"==typeof t)throw new Error('The "data" argument must not be a number');return new Buffer(t,e)},allocBuffer:function(t){if(Buffer.alloc)return Buffer.alloc(t);var e=new Buffer(t);return e.fill(0),e},isBuffer:function(t){return Buffer.isBuffer(t)},isStream:function(t){return t&&"function"==typeof t.on&&"function"==typeof t.pause&&"function"==typeof t.resume}}},{}],15:[function(t,e,i){"use strict";function r(t,e,i){var r,n=s.getTypeOf(e),o=s.extend(i||{},h);o.date=o.date||new Date,null!==o.compression&&(o.compression=o.compression.toUpperCase()),"string"==typeof o.unixPermissions&&(o.unixPermissions=parseInt(o.unixPermissions,8)),o.unixPermissions&&16384&o.unixPermissions&&(o.dir=!0),o.dosPermissions&&16&o.dosPermissions&&(o.dir=!0),o.dir&&(t=m(t)),o.createFolders&&(r=p(t))&&g.call(this,r,!0);var c="string"===n&&!1===o.binary&&!1===o.base64;i&&void 0!==i.binary||(o.binary=!c),(e instanceof u&&0===e.uncompressedSize||o.dir||!e||0===e.length)&&(o.base64=!1,o.binary=!0,e="",o.compression="STORE",n="string");var _;_=e instanceof u||e instanceof a?e:d.isNode&&d.isStream(e)?new f(t,e):s.prepareContent(t,e,o.binary,o.optimizedBinaryString,o.base64);var v=new l(t,_,o);this.files[t]=v}var n=t("./utf8"),s=t("./utils"),a=t("./stream/GenericWorker"),o=t("./stream/StreamHelper"),h=t("./defaults"),u=t("./compressedObject"),l=t("./zipObject"),c=t("./generate"),d=t("./nodejsUtils"),f=t("./nodejs/NodejsStreamInputAdapter"),p=function(t){"/"===t.slice(-1)&&(t=t.substring(0,t.length-1));var e=t.lastIndexOf("/");return 0<e?t.substring(0,e):""},m=function(t){return"/"!==t.slice(-1)&&(t+="/"),t},g=function(t,e){return e=void 0!==e?e:h.createFolders,t=m(t),this.files[t]||r.call(this,t,null,{dir:!0,createFolders:e}),this.files[t]};function _(t){return"[object RegExp]"===Object.prototype.toString.call(t)}var v={load:function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},forEach:function(t){var e,i,r;for(e in this.files)r=this.files[e],(i=e.slice(this.root.length,e.length))&&e.slice(0,this.root.length)===this.root&&t(i,r)},filter:function(t){var e=[];return this.forEach((function(i,r){t(i,r)&&e.push(r)})),e},file:function(t,e,i){if(1!==arguments.length)return t=this.root+t,r.call(this,t,e,i),this;if(_(t)){var n=t;return this.filter((function(t,e){return!e.dir&&n.test(t)}))}var s=this.files[this.root+t];return s&&!s.dir?s:null},folder:function(t){if(!t)return this;if(_(t))return this.filter((function(e,i){return i.dir&&t.test(e)}));var e=this.root+t,i=g.call(this,e),r=this.clone();return r.root=i.name,r},remove:function(t){t=this.root+t;var e=this.files[t];if(e||("/"!==t.slice(-1)&&(t+="/"),e=this.files[t]),e&&!e.dir)delete this.files[t];else for(var i=this.filter((function(e,i){return i.name.slice(0,t.length)===t})),r=0;r<i.length;r++)delete this.files[i[r].name];return this},generate:function(t){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},generateInternalStream:function(t){var e,i={};try{if((i=s.extend(t||{},{streamFiles:!1,compression:"STORE",compressionOptions:null,type:"",platform:"DOS",comment:null,mimeType:"application/zip",encodeFileName:n.utf8encode})).type=i.type.toLowerCase(),i.compression=i.compression.toUpperCase(),"binarystring"===i.type&&(i.type="string"),!i.type)throw new Error("No output type specified.");s.checkSupport(i.type),"darwin"!==i.platform&&"freebsd"!==i.platform&&"linux"!==i.platform&&"sunos"!==i.platform||(i.platform="UNIX"),"win32"===i.platform&&(i.platform="DOS");var r=i.comment||this.comment||"";e=c.generateWorker(this,i,r)}catch(t){(e=new a("error")).error(t)}return new o(e,i.type||"string",i.mimeType)},generateAsync:function(t,e){return this.generateInternalStream(t).accumulate(e)},generateNodeStream:function(t,e){return(t=t||{}).type||(t.type="nodebuffer"),this.generateInternalStream(t).toNodejsStream(e)}};e.exports=v},{"./compressedObject":2,"./defaults":5,"./generate":9,"./nodejs/NodejsStreamInputAdapter":12,"./nodejsUtils":14,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31,"./utils":32,"./zipObject":35}],16:[function(t,e,i){e.exports=t("stream")},{stream:void 0}],17:[function(t,e,i){"use strict";var r=t("./DataReader");function n(t){r.call(this,t);for(var e=0;e<this.data.length;e++)t[e]=255&t[e]}t("../utils").inherits(n,r),n.prototype.byteAt=function(t){return this.data[this.zero+t]},n.prototype.lastIndexOfSignature=function(t){for(var e=t.charCodeAt(0),i=t.charCodeAt(1),r=t.charCodeAt(2),n=t.charCodeAt(3),s=this.length-4;0<=s;--s)if(this.data[s]===e&&this.data[s+1]===i&&this.data[s+2]===r&&this.data[s+3]===n)return s-this.zero;return-1},n.prototype.readAndCheckSignature=function(t){var e=t.charCodeAt(0),i=t.charCodeAt(1),r=t.charCodeAt(2),n=t.charCodeAt(3),s=this.readData(4);return e===s[0]&&i===s[1]&&r===s[2]&&n===s[3]},n.prototype.readData=function(t){if(this.checkOffset(t),0===t)return[];var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{"../utils":32,"./DataReader":18}],18:[function(t,e,i){"use strict";var r=t("../utils");function n(t){this.data=t,this.length=t.length,this.index=0,this.zero=0}n.prototype={checkOffset:function(t){this.checkIndex(this.index+t)},checkIndex:function(t){if(this.length<this.zero+t||t<0)throw new Error("End of data reached (data length = "+this.length+", asked index = "+t+"). Corrupted zip ?")},setIndex:function(t){this.checkIndex(t),this.index=t},skip:function(t){this.setIndex(this.index+t)},byteAt:function(t){},readInt:function(t){var e,i=0;for(this.checkOffset(t),e=this.index+t-1;e>=this.index;e--)i=(i<<8)+this.byteAt(e);return this.index+=t,i},readString:function(t){return r.transformTo("string",this.readData(t))},readData:function(t){},lastIndexOfSignature:function(t){},readAndCheckSignature:function(t){},readDate:function(){var t=this.readInt(4);return new Date(Date.UTC(1980+(t>>25&127),(t>>21&15)-1,t>>16&31,t>>11&31,t>>5&63,(31&t)<<1))}},e.exports=n},{"../utils":32}],19:[function(t,e,i){"use strict";var r=t("./Uint8ArrayReader");function n(t){r.call(this,t)}t("../utils").inherits(n,r),n.prototype.readData=function(t){this.checkOffset(t);var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{"../utils":32,"./Uint8ArrayReader":21}],20:[function(t,e,i){"use strict";var r=t("./DataReader");function n(t){r.call(this,t)}t("../utils").inherits(n,r),n.prototype.byteAt=function(t){return this.data.charCodeAt(this.zero+t)},n.prototype.lastIndexOfSignature=function(t){return this.data.lastIndexOf(t)-this.zero},n.prototype.readAndCheckSignature=function(t){return t===this.readData(4)},n.prototype.readData=function(t){this.checkOffset(t);var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{"../utils":32,"./DataReader":18}],21:[function(t,e,i){"use strict";var r=t("./ArrayReader");function n(t){r.call(this,t)}t("../utils").inherits(n,r),n.prototype.readData=function(t){if(this.checkOffset(t),0===t)return new Uint8Array(0);var e=this.data.subarray(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{"../utils":32,"./ArrayReader":17}],22:[function(t,e,i){"use strict";var r=t("../utils"),n=t("../support"),s=t("./ArrayReader"),a=t("./StringReader"),o=t("./NodeBufferReader"),h=t("./Uint8ArrayReader");e.exports=function(t){var e=r.getTypeOf(t);return r.checkSupport(e),"string"!==e||n.uint8array?"nodebuffer"===e?new o(t):n.uint8array?new h(r.transformTo("uint8array",t)):new s(r.transformTo("array",t)):new a(t)}},{"../support":30,"../utils":32,"./ArrayReader":17,"./NodeBufferReader":19,"./StringReader":20,"./Uint8ArrayReader":21}],23:[function(t,e,i){"use strict";i.LOCAL_FILE_HEADER="PK",i.CENTRAL_FILE_HEADER="PK",i.CENTRAL_DIRECTORY_END="PK",i.ZIP64_CENTRAL_DIRECTORY_LOCATOR="PK",i.ZIP64_CENTRAL_DIRECTORY_END="PK",i.DATA_DESCRIPTOR="PK\b"},{}],24:[function(t,e,i){"use strict";var r=t("./GenericWorker"),n=t("../utils");function s(t){r.call(this,"ConvertWorker to "+t),this.destType=t}n.inherits(s,r),s.prototype.processChunk=function(t){this.push({data:n.transformTo(this.destType,t.data),meta:t.meta})},e.exports=s},{"../utils":32,"./GenericWorker":28}],25:[function(t,e,i){"use strict";var r=t("./GenericWorker"),n=t("../crc32");function s(){r.call(this,"Crc32Probe"),this.withStreamInfo("crc32",0)}t("../utils").inherits(s,r),s.prototype.processChunk=function(t){this.streamInfo.crc32=n(t.data,this.streamInfo.crc32||0),this.push(t)},e.exports=s},{"../crc32":4,"../utils":32,"./GenericWorker":28}],26:[function(t,e,i){"use strict";var r=t("../utils"),n=t("./GenericWorker");function s(t){n.call(this,"DataLengthProbe for "+t),this.propName=t,this.withStreamInfo(t,0)}r.inherits(s,n),s.prototype.processChunk=function(t){if(t){var e=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=e+t.data.length}n.prototype.processChunk.call(this,t)},e.exports=s},{"../utils":32,"./GenericWorker":28}],27:[function(t,e,i){"use strict";var r=t("../utils"),n=t("./GenericWorker");function s(t){n.call(this,"DataWorker");var e=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type="",this._tickScheduled=!1,t.then((function(t){e.dataIsReady=!0,e.data=t,e.max=t&&t.length||0,e.type=r.getTypeOf(t),e.isPaused||e._tickAndRepeat()}),(function(t){e.error(t)}))}r.inherits(s,n),s.prototype.cleanUp=function(){n.prototype.cleanUp.call(this),this.data=null},s.prototype.resume=function(){return!!n.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,r.delay(this._tickAndRepeat,[],this)),!0)},s.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(r.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},s.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var t=null,e=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case"string":t=this.data.substring(this.index,e);break;case"uint8array":t=this.data.subarray(this.index,e);break;case"array":case"nodebuffer":t=this.data.slice(this.index,e)}return this.index=e,this.push({data:t,meta:{percent:this.max?this.index/this.max*100:0}})},e.exports=s},{"../utils":32,"./GenericWorker":28}],28:[function(t,e,i){"use strict";function r(t){this.name=t||"default",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}r.prototype={push:function(t){this.emit("data",t)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit("end"),this.cleanUp(),this.isFinished=!0}catch(t){this.emit("error",t)}return!0},error:function(t){return!this.isFinished&&(this.isPaused?this.generatedError=t:(this.isFinished=!0,this.emit("error",t),this.previous&&this.previous.error(t),this.cleanUp()),!0)},on:function(t,e){return this._listeners[t].push(e),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(t,e){if(this._listeners[t])for(var i=0;i<this._listeners[t].length;i++)this._listeners[t][i].call(this,e)},pipe:function(t){return t.registerPrevious(this)},registerPrevious:function(t){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.streamInfo=t.streamInfo,this.mergeStreamInfo(),this.previous=t;var e=this;return t.on("data",(function(t){e.processChunk(t)})),t.on("end",(function(){e.end()})),t.on("error",(function(t){e.error(t)})),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var t=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),t=!0),this.previous&&this.previous.resume(),!t},flush:function(){},processChunk:function(t){this.push(t)},withStreamInfo:function(t,e){return this.extraStreamInfo[t]=e,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var t in this.extraStreamInfo)this.extraStreamInfo.hasOwnProperty(t)&&(this.streamInfo[t]=this.extraStreamInfo[t])},lock:function(){if(this.isLocked)throw new Error("The stream '"+this+"' has already been used.");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var t="Worker "+this.name;return this.previous?this.previous+" -> "+t:t}},e.exports=r},{}],29:[function(t,e,i){"use strict";var r=t("../utils"),n=t("./ConvertWorker"),s=t("./GenericWorker"),a=t("../base64"),o=t("../support"),h=t("../external"),u=null;if(o.nodestream)try{u=t("../nodejs/NodejsStreamOutputAdapter")}catch(t){}function l(t,e,i){var a=e;switch(e){case"blob":case"arraybuffer":a="uint8array";break;case"base64":a="string"}try{this._internalType=a,this._outputType=e,this._mimeType=i,r.checkSupport(a),this._worker=t.pipe(new n(a)),t.lock()}catch(t){this._worker=new s("error"),this._worker.error(t)}}l.prototype={accumulate:function(t){return function(t,e){return new h.Promise((function(i,n){var s=[],o=t._internalType,h=t._outputType,u=t._mimeType;t.on("data",(function(t,i){s.push(t),e&&e(i)})).on("error",(function(t){s=[],n(t)})).on("end",(function(){try{var t=function(t,e,i){switch(t){case"blob":return r.newBlob(r.transformTo("arraybuffer",e),i);case"base64":return a.encode(e);default:return r.transformTo(t,e)}}(h,function(t,e){var i,r=0,n=null,s=0;for(i=0;i<e.length;i++)s+=e[i].length;switch(t){case"string":return e.join("");case"array":return Array.prototype.concat.apply([],e);case"uint8array":for(n=new Uint8Array(s),i=0;i<e.length;i++)n.set(e[i],r),r+=e[i].length;return n;case"nodebuffer":return Buffer.concat(e);default:throw new Error("concat : unsupported type '"+t+"'")}}(o,s),u);i(t)}catch(t){n(t)}s=[]})).resume()}))}(this,t)},on:function(t,e){var i=this;return"data"===t?this._worker.on(t,(function(t){e.call(i,t.data,t.meta)})):this._worker.on(t,(function(){r.delay(e,arguments,i)})),this},resume:function(){return r.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(t){if(r.checkSupport("nodestream"),"nodebuffer"!==this._outputType)throw new Error(this._outputType+" is not supported by this method");return new u(this,{objectMode:"nodebuffer"!==this._outputType},t)}},e.exports=l},{"../base64":1,"../external":6,"../nodejs/NodejsStreamOutputAdapter":13,"../support":30,"../utils":32,"./ConvertWorker":24,"./GenericWorker":28}],30:[function(t,e,i){"use strict";if(i.base64=!0,i.array=!0,i.string=!0,i.arraybuffer="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof Uint8Array,i.nodebuffer="undefined"!=typeof Buffer,i.uint8array="undefined"!=typeof Uint8Array,"undefined"==typeof ArrayBuffer)i.blob=!1;else{var r=new ArrayBuffer(0);try{i.blob=0===new Blob([r],{type:"application/zip"}).size}catch(t){try{var n=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);n.append(r),i.blob=0===n.getBlob("application/zip").size}catch(t){i.blob=!1}}}try{i.nodestream=!!t("readable-stream").Readable}catch(t){i.nodestream=!1}},{"readable-stream":16}],31:[function(t,e,i){"use strict";for(var r=t("./utils"),n=t("./support"),s=t("./nodejsUtils"),a=t("./stream/GenericWorker"),o=new Array(256),h=0;h<256;h++)o[h]=252<=h?6:248<=h?5:240<=h?4:224<=h?3:192<=h?2:1;function u(){a.call(this,"utf-8 decode"),this.leftOver=null}function l(){a.call(this,"utf-8 encode")}o[254]=o[254]=1,i.utf8encode=function(t){return n.nodebuffer?s.newBufferFrom(t,"utf-8"):function(t){var e,i,r,s,a,o=t.length,h=0;for(s=0;s<o;s++)55296==(64512&(i=t.charCodeAt(s)))&&s+1<o&&56320==(64512&(r=t.charCodeAt(s+1)))&&(i=65536+(i-55296<<10)+(r-56320),s++),h+=i<128?1:i<2048?2:i<65536?3:4;for(e=n.uint8array?new Uint8Array(h):new Array(h),s=a=0;a<h;s++)55296==(64512&(i=t.charCodeAt(s)))&&s+1<o&&56320==(64512&(r=t.charCodeAt(s+1)))&&(i=65536+(i-55296<<10)+(r-56320),s++),i<128?e[a++]=i:(i<2048?e[a++]=192|i>>>6:(i<65536?e[a++]=224|i>>>12:(e[a++]=240|i>>>18,e[a++]=128|i>>>12&63),e[a++]=128|i>>>6&63),e[a++]=128|63&i);return e}(t)},i.utf8decode=function(t){return n.nodebuffer?r.transformTo("nodebuffer",t).toString("utf-8"):function(t){var e,i,n,s,a=t.length,h=new Array(2*a);for(e=i=0;e<a;)if((n=t[e++])<128)h[i++]=n;else if(4<(s=o[n]))h[i++]=65533,e+=s-1;else{for(n&=2===s?31:3===s?15:7;1<s&&e<a;)n=n<<6|63&t[e++],s--;1<s?h[i++]=65533:n<65536?h[i++]=n:(n-=65536,h[i++]=55296|n>>10&1023,h[i++]=56320|1023&n)}return h.length!==i&&(h.subarray?h=h.subarray(0,i):h.length=i),r.applyFromCharCode(h)}(t=r.transformTo(n.uint8array?"uint8array":"array",t))},r.inherits(u,a),u.prototype.processChunk=function(t){var e=r.transformTo(n.uint8array?"uint8array":"array",t.data);if(this.leftOver&&this.leftOver.length){if(n.uint8array){var s=e;(e=new Uint8Array(s.length+this.leftOver.length)).set(this.leftOver,0),e.set(s,this.leftOver.length)}else e=this.leftOver.concat(e);this.leftOver=null}var a=function(t,e){var i;for((e=e||t.length)>t.length&&(e=t.length),i=e-1;0<=i&&128==(192&t[i]);)i--;return i<0||0===i?e:i+o[t[i]]>e?i:e}(e),h=e;a!==e.length&&(n.uint8array?(h=e.subarray(0,a),this.leftOver=e.subarray(a,e.length)):(h=e.slice(0,a),this.leftOver=e.slice(a,e.length))),this.push({data:i.utf8decode(h),meta:t.meta})},u.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:i.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},i.Utf8DecodeWorker=u,r.inherits(l,a),l.prototype.processChunk=function(t){this.push({data:i.utf8encode(t.data),meta:t.meta})},i.Utf8EncodeWorker=l},{"./nodejsUtils":14,"./stream/GenericWorker":28,"./support":30,"./utils":32}],32:[function(t,e,i){"use strict";var r=t("./support"),n=t("./base64"),s=t("./nodejsUtils"),a=t("set-immediate-shim"),o=t("./external");function h(t){return t}function u(t,e){for(var i=0;i<t.length;++i)e[i]=255&t.charCodeAt(i);return e}i.newBlob=function(t,e){i.checkSupport("blob");try{return new Blob([t],{type:e})}catch(i){try{var r=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return r.append(t),r.getBlob(e)}catch(t){throw new Error("Bug : can't construct the Blob.")}}};var l={stringifyByChunk:function(t,e,i){var r=[],n=0,s=t.length;if(s<=i)return String.fromCharCode.apply(null,t);for(;n<s;)"array"===e||"nodebuffer"===e?r.push(String.fromCharCode.apply(null,t.slice(n,Math.min(n+i,s)))):r.push(String.fromCharCode.apply(null,t.subarray(n,Math.min(n+i,s)))),n+=i;return r.join("")},stringifyByChar:function(t){for(var e="",i=0;i<t.length;i++)e+=String.fromCharCode(t[i]);return e},applyCanBeUsed:{uint8array:function(){try{return r.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(t){return!1}}(),nodebuffer:function(){try{return r.nodebuffer&&1===String.fromCharCode.apply(null,s.allocBuffer(1)).length}catch(t){return!1}}()}};function c(t){var e=65536,r=i.getTypeOf(t),n=!0;if("uint8array"===r?n=l.applyCanBeUsed.uint8array:"nodebuffer"===r&&(n=l.applyCanBeUsed.nodebuffer),n)for(;1<e;)try{return l.stringifyByChunk(t,r,e)}catch(t){e=Math.floor(e/2)}return l.stringifyByChar(t)}function d(t,e){for(var i=0;i<t.length;i++)e[i]=t[i];return e}i.applyFromCharCode=c;var f={};f.string={string:h,array:function(t){return u(t,new Array(t.length))},arraybuffer:function(t){return f.string.uint8array(t).buffer},uint8array:function(t){return u(t,new Uint8Array(t.length))},nodebuffer:function(t){return u(t,s.allocBuffer(t.length))}},f.array={string:c,array:h,arraybuffer:function(t){return new Uint8Array(t).buffer},uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return s.newBufferFrom(t)}},f.arraybuffer={string:function(t){return c(new Uint8Array(t))},array:function(t){return d(new Uint8Array(t),new Array(t.byteLength))},arraybuffer:h,uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return s.newBufferFrom(new Uint8Array(t))}},f.uint8array={string:c,array:function(t){return d(t,new Array(t.length))},arraybuffer:function(t){return t.buffer},uint8array:h,nodebuffer:function(t){return s.newBufferFrom(t)}},f.nodebuffer={string:c,array:function(t){return d(t,new Array(t.length))},arraybuffer:function(t){return f.nodebuffer.uint8array(t).buffer},uint8array:function(t){return d(t,new Uint8Array(t.length))},nodebuffer:h},i.transformTo=function(t,e){if(e=e||"",!t)return e;i.checkSupport(t);var r=i.getTypeOf(e);return f[r][t](e)},i.getTypeOf=function(t){return"string"==typeof t?"string":"[object Array]"===Object.prototype.toString.call(t)?"array":r.nodebuffer&&s.isBuffer(t)?"nodebuffer":r.uint8array&&t instanceof Uint8Array?"uint8array":r.arraybuffer&&t instanceof ArrayBuffer?"arraybuffer":void 0},i.checkSupport=function(t){if(!r[t.toLowerCase()])throw new Error(t+" is not supported by this platform")},i.MAX_VALUE_16BITS=65535,i.MAX_VALUE_32BITS=-1,i.pretty=function(t){var e,i,r="";for(i=0;i<(t||"").length;i++)r+="\\x"+((e=t.charCodeAt(i))<16?"0":"")+e.toString(16).toUpperCase();return r},i.delay=function(t,e,i){a((function(){t.apply(i||null,e||[])}))},i.inherits=function(t,e){function i(){}i.prototype=e.prototype,t.prototype=new i},i.extend=function(){var t,e,i={};for(t=0;t<arguments.length;t++)for(e in arguments[t])arguments[t].hasOwnProperty(e)&&void 0===i[e]&&(i[e]=arguments[t][e]);return i},i.prepareContent=function(t,e,s,a,h){return o.Promise.resolve(e).then((function(t){return r.blob&&(t instanceof Blob||-1!==["[object File]","[object Blob]"].indexOf(Object.prototype.toString.call(t)))&&"undefined"!=typeof FileReader?new o.Promise((function(e,i){var r=new FileReader;r.onload=function(t){e(t.target.result)},r.onerror=function(t){i(t.target.error)},r.readAsArrayBuffer(t)})):t})).then((function(e){var l=i.getTypeOf(e);return l?("arraybuffer"===l?e=i.transformTo("uint8array",e):"string"===l&&(h?e=n.decode(e):s&&!0!==a&&(e=function(t){return u(t,r.uint8array?new Uint8Array(t.length):new Array(t.length))}(e))),e):o.Promise.reject(new Error("Can't read the data of '"+t+"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"))}))}},{"./base64":1,"./external":6,"./nodejsUtils":14,"./support":30,"set-immediate-shim":54}],33:[function(t,e,i){"use strict";var r=t("./reader/readerFor"),n=t("./utils"),s=t("./signature"),a=t("./zipEntry"),o=(t("./utf8"),t("./support"));function h(t){this.files=[],this.loadOptions=t}h.prototype={checkSignature:function(t){if(!this.reader.readAndCheckSignature(t)){this.reader.index-=4;var e=this.reader.readString(4);throw new Error("Corrupted zip or bug: unexpected signature ("+n.pretty(e)+", expected "+n.pretty(t)+")")}},isSignature:function(t,e){var i=this.reader.index;this.reader.setIndex(t);var r=this.reader.readString(4)===e;return this.reader.setIndex(i),r},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var t=this.reader.readData(this.zipCommentLength),e=o.uint8array?"uint8array":"array",i=n.transformTo(e,t);this.zipComment=this.loadOptions.decodeFileName(i)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var t,e,i,r=this.zip64EndOfCentralSize-44;0<r;)t=this.reader.readInt(2),e=this.reader.readInt(4),i=this.reader.readData(e),this.zip64ExtensibleData[t]={id:t,length:e,value:i}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error("Multi-volumes zip are not supported")},readLocalFiles:function(){var t,e;for(t=0;t<this.files.length;t++)e=this.files[t],this.reader.setIndex(e.localHeaderOffset),this.checkSignature(s.LOCAL_FILE_HEADER),e.readLocalPart(this.reader),e.handleUTF8(),e.processAttributes()},readCentralDir:function(){var t;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);)(t=new a({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(t);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error("Corrupted zip or bug: expected "+this.centralDirRecords+" records in central dir, got "+this.files.length)},readEndOfCentral:function(){var t=this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);if(t<0)throw this.isSignature(0,s.LOCAL_FILE_HEADER)?new Error("Corrupted zip: can't find end of central directory"):new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");this.reader.setIndex(t);var e=t;if(this.checkSignature(s.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===n.MAX_VALUE_16BITS||this.diskWithCentralDirStart===n.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===n.MAX_VALUE_16BITS||this.centralDirRecords===n.MAX_VALUE_16BITS||this.centralDirSize===n.MAX_VALUE_32BITS||this.centralDirOffset===n.MAX_VALUE_32BITS){if(this.zip64=!0,(t=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");if(this.reader.setIndex(t),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,s.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var i=this.centralDirOffset+this.centralDirSize;this.zip64&&(i+=20,i+=12+this.zip64EndOfCentralSize);var r=e-i;if(0<r)this.isSignature(e,s.CENTRAL_FILE_HEADER)||(this.reader.zero=r);else if(r<0)throw new Error("Corrupted zip: missing "+Math.abs(r)+" bytes.")},prepareReader:function(t){this.reader=r(t)},load:function(t){this.prepareReader(t),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},e.exports=h},{"./reader/readerFor":22,"./signature":23,"./support":30,"./utf8":31,"./utils":32,"./zipEntry":34}],34:[function(t,e,i){"use strict";var r=t("./reader/readerFor"),n=t("./utils"),s=t("./compressedObject"),a=t("./crc32"),o=t("./utf8"),h=t("./compressions"),u=t("./support");function l(t,e){this.options=t,this.loadOptions=e}l.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(t){var e,i;if(t.skip(22),this.fileNameLength=t.readInt(2),i=t.readInt(2),this.fileName=t.readData(this.fileNameLength),t.skip(i),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");if(null===(e=function(t){for(var e in h)if(h.hasOwnProperty(e)&&h[e].magic===t)return h[e];return null}(this.compressionMethod)))throw new Error("Corrupted zip : compression "+n.pretty(this.compressionMethod)+" unknown (inner file : "+n.transformTo("string",this.fileName)+")");this.decompressed=new s(this.compressedSize,this.uncompressedSize,this.crc32,e,t.readData(this.compressedSize))},readCentralPart:function(t){this.versionMadeBy=t.readInt(2),t.skip(2),this.bitFlag=t.readInt(2),this.compressionMethod=t.readString(2),this.date=t.readDate(),this.crc32=t.readInt(4),this.compressedSize=t.readInt(4),this.uncompressedSize=t.readInt(4);var e=t.readInt(2);if(this.extraFieldsLength=t.readInt(2),this.fileCommentLength=t.readInt(2),this.diskNumberStart=t.readInt(2),this.internalFileAttributes=t.readInt(2),this.externalFileAttributes=t.readInt(4),this.localHeaderOffset=t.readInt(4),this.isEncrypted())throw new Error("Encrypted zip are not supported");t.skip(e),this.readExtraFields(t),this.parseZIP64ExtraField(t),this.fileComment=t.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var t=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==t&&(this.dosPermissions=63&this.externalFileAttributes),3==t&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||"/"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(t){if(this.extraFields[1]){var e=r(this.extraFields[1].value);this.uncompressedSize===n.MAX_VALUE_32BITS&&(this.uncompressedSize=e.readInt(8)),this.compressedSize===n.MAX_VALUE_32BITS&&(this.compressedSize=e.readInt(8)),this.localHeaderOffset===n.MAX_VALUE_32BITS&&(this.localHeaderOffset=e.readInt(8)),this.diskNumberStart===n.MAX_VALUE_32BITS&&(this.diskNumberStart=e.readInt(4))}},readExtraFields:function(t){var e,i,r,n=t.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});t.index+4<n;)e=t.readInt(2),i=t.readInt(2),r=t.readData(i),this.extraFields[e]={id:e,length:i,value:r};t.setIndex(n)},handleUTF8:function(){var t=u.uint8array?"uint8array":"array";if(this.useUTF8())this.fileNameStr=o.utf8decode(this.fileName),this.fileCommentStr=o.utf8decode(this.fileComment);else{var e=this.findExtraFieldUnicodePath();if(null!==e)this.fileNameStr=e;else{var i=n.transformTo(t,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(i)}var r=this.findExtraFieldUnicodeComment();if(null!==r)this.fileCommentStr=r;else{var s=n.transformTo(t,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(s)}}},findExtraFieldUnicodePath:function(){var t=this.extraFields[28789];if(t){var e=r(t.value);return 1!==e.readInt(1)||a(this.fileName)!==e.readInt(4)?null:o.utf8decode(e.readData(t.length-5))}return null},findExtraFieldUnicodeComment:function(){var t=this.extraFields[25461];if(t){var e=r(t.value);return 1!==e.readInt(1)||a(this.fileComment)!==e.readInt(4)?null:o.utf8decode(e.readData(t.length-5))}return null}},e.exports=l},{"./compressedObject":2,"./compressions":3,"./crc32":4,"./reader/readerFor":22,"./support":30,"./utf8":31,"./utils":32}],35:[function(t,e,i){"use strict";function r(t,e,i){this.name=t,this.dir=i.dir,this.date=i.date,this.comment=i.comment,this.unixPermissions=i.unixPermissions,this.dosPermissions=i.dosPermissions,this._data=e,this._dataBinary=i.binary,this.options={compression:i.compression,compressionOptions:i.compressionOptions}}var n=t("./stream/StreamHelper"),s=t("./stream/DataWorker"),a=t("./utf8"),o=t("./compressedObject"),h=t("./stream/GenericWorker");r.prototype={internalStream:function(t){var e=null,i="string";try{if(!t)throw new Error("No output type specified.");var r="string"===(i=t.toLowerCase())||"text"===i;"binarystring"!==i&&"text"!==i||(i="string"),e=this._decompressWorker();var s=!this._dataBinary;s&&!r&&(e=e.pipe(new a.Utf8EncodeWorker)),!s&&r&&(e=e.pipe(new a.Utf8DecodeWorker))}catch(t){(e=new h("error")).error(t)}return new n(e,i,"")},async:function(t,e){return this.internalStream(t).accumulate(e)},nodeStream:function(t,e){return this.internalStream(t||"nodebuffer").toNodejsStream(e)},_compressWorker:function(t,e){if(this._data instanceof o&&this._data.compression.magic===t.magic)return this._data.getCompressedWorker();var i=this._decompressWorker();return this._dataBinary||(i=i.pipe(new a.Utf8EncodeWorker)),o.createWorkerFrom(i,t,e)},_decompressWorker:function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof h?this._data:new s(this._data)}};for(var u=["asText","asBinary","asNodeBuffer","asUint8Array","asArrayBuffer"],l=function(){throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.")},c=0;c<u.length;c++)r.prototype[u[c]]=l;e.exports=r},{"./compressedObject":2,"./stream/DataWorker":27,"./stream/GenericWorker":28,"./stream/StreamHelper":29,"./utf8":31}],36:[function(t,e,r){(function(t){"use strict";var i,r,n=t.MutationObserver||t.WebKitMutationObserver;if(n){var s=0,a=new n(l),o=t.document.createTextNode("");a.observe(o,{characterData:!0}),i=function(){o.data=s=++s%2}}else if(t.setImmediate||void 0===t.MessageChannel)i="document"in t&&"onreadystatechange"in t.document.createElement("script")?function(){var e=t.document.createElement("script");e.onreadystatechange=function(){l(),e.onreadystatechange=null,e.parentNode.removeChild(e),e=null},t.document.documentElement.appendChild(e)}:function(){setTimeout(l,0)};else{var h=new t.MessageChannel;h.port1.onmessage=l,i=function(){h.port2.postMessage(0)}}var u=[];function l(){var t,e;r=!0;for(var i=u.length;i;){for(e=u,u=[],t=-1;++t<i;)e[t]();i=u.length}r=!1}e.exports=function(t){1!==u.push(t)||r||i()}}).call(this,void 0!==i.g?i.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],37:[function(t,e,i){"use strict";var r=t("immediate");function n(){}var s={},a=["REJECTED"],o=["FULFILLED"],h=["PENDING"];function u(t){if("function"!=typeof t)throw new TypeError("resolver must be a function");this.state=h,this.queue=[],this.outcome=void 0,t!==n&&f(this,t)}function l(t,e,i){this.promise=t,"function"==typeof e&&(this.onFulfilled=e,this.callFulfilled=this.otherCallFulfilled),"function"==typeof i&&(this.onRejected=i,this.callRejected=this.otherCallRejected)}function c(t,e,i){r((function(){var r;try{r=e(i)}catch(r){return s.reject(t,r)}r===t?s.reject(t,new TypeError("Cannot resolve promise with itself")):s.resolve(t,r)}))}function d(t){var e=t&&t.then;if(t&&("object"==typeof t||"function"==typeof t)&&"function"==typeof e)return function(){e.apply(t,arguments)}}function f(t,e){var i=!1;function r(e){i||(i=!0,s.reject(t,e))}function n(e){i||(i=!0,s.resolve(t,e))}var a=p((function(){e(n,r)}));"error"===a.status&&r(a.value)}function p(t,e){var i={};try{i.value=t(e),i.status="success"}catch(t){i.status="error",i.value=t}return i}(e.exports=u).prototype.finally=function(t){if("function"!=typeof t)return this;var e=this.constructor;return this.then((function(i){return e.resolve(t()).then((function(){return i}))}),(function(i){return e.resolve(t()).then((function(){throw i}))}))},u.prototype.catch=function(t){return this.then(null,t)},u.prototype.then=function(t,e){if("function"!=typeof t&&this.state===o||"function"!=typeof e&&this.state===a)return this;var i=new this.constructor(n);return this.state!==h?c(i,this.state===o?t:e,this.outcome):this.queue.push(new l(i,t,e)),i},l.prototype.callFulfilled=function(t){s.resolve(this.promise,t)},l.prototype.otherCallFulfilled=function(t){c(this.promise,this.onFulfilled,t)},l.prototype.callRejected=function(t){s.reject(this.promise,t)},l.prototype.otherCallRejected=function(t){c(this.promise,this.onRejected,t)},s.resolve=function(t,e){var i=p(d,e);if("error"===i.status)return s.reject(t,i.value);var r=i.value;if(r)f(t,r);else{t.state=o,t.outcome=e;for(var n=-1,a=t.queue.length;++n<a;)t.queue[n].callFulfilled(e)}return t},s.reject=function(t,e){t.state=a,t.outcome=e;for(var i=-1,r=t.queue.length;++i<r;)t.queue[i].callRejected(e);return t},u.resolve=function(t){return t instanceof this?t:s.resolve(new this(n),t)},u.reject=function(t){var e=new this(n);return s.reject(e,t)},u.all=function(t){var e=this;if("[object Array]"!==Object.prototype.toString.call(t))return this.reject(new TypeError("must be an array"));var i=t.length,r=!1;if(!i)return this.resolve([]);for(var a=new Array(i),o=0,h=-1,u=new this(n);++h<i;)l(t[h],h);return u;function l(t,n){e.resolve(t).then((function(t){a[n]=t,++o!==i||r||(r=!0,s.resolve(u,a))}),(function(t){r||(r=!0,s.reject(u,t))}))}},u.race=function(t){if("[object Array]"!==Object.prototype.toString.call(t))return this.reject(new TypeError("must be an array"));var e=t.length,i=!1;if(!e)return this.resolve([]);for(var r,a=-1,o=new this(n);++a<e;)r=t[a],this.resolve(r).then((function(t){i||(i=!0,s.resolve(o,t))}),(function(t){i||(i=!0,s.reject(o,t))}));return o}},{immediate:36}],38:[function(t,e,i){"use strict";var r={};(0,t("./lib/utils/common").assign)(r,t("./lib/deflate"),t("./lib/inflate"),t("./lib/zlib/constants")),e.exports=r},{"./lib/deflate":39,"./lib/inflate":40,"./lib/utils/common":41,"./lib/zlib/constants":44}],39:[function(t,e,i){"use strict";var r=t("./zlib/deflate"),n=t("./utils/common"),s=t("./utils/strings"),a=t("./zlib/messages"),o=t("./zlib/zstream"),h=Object.prototype.toString;function u(t){if(!(this instanceof u))return new u(t);this.options=n.assign({level:-1,method:8,chunkSize:16384,windowBits:15,memLevel:8,strategy:0,to:""},t||{});var e=this.options;e.raw&&0<e.windowBits?e.windowBits=-e.windowBits:e.gzip&&0<e.windowBits&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new o,this.strm.avail_out=0;var i=r.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(0!==i)throw new Error(a[i]);if(e.header&&r.deflateSetHeader(this.strm,e.header),e.dictionary){var l;if(l="string"==typeof e.dictionary?s.string2buf(e.dictionary):"[object ArrayBuffer]"===h.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,0!==(i=r.deflateSetDictionary(this.strm,l)))throw new Error(a[i]);this._dict_set=!0}}function l(t,e){var i=new u(e);if(i.push(t,!0),i.err)throw i.msg||a[i.err];return i.result}u.prototype.push=function(t,e){var i,a,o=this.strm,u=this.options.chunkSize;if(this.ended)return!1;a=e===~~e?e:!0===e?4:0,"string"==typeof t?o.input=s.string2buf(t):"[object ArrayBuffer]"===h.call(t)?o.input=new Uint8Array(t):o.input=t,o.next_in=0,o.avail_in=o.input.length;do{if(0===o.avail_out&&(o.output=new n.Buf8(u),o.next_out=0,o.avail_out=u),1!==(i=r.deflate(o,a))&&0!==i)return this.onEnd(i),!(this.ended=!0);0!==o.avail_out&&(0!==o.avail_in||4!==a&&2!==a)||("string"===this.options.to?this.onData(s.buf2binstring(n.shrinkBuf(o.output,o.next_out))):this.onData(n.shrinkBuf(o.output,o.next_out)))}while((0<o.avail_in||0===o.avail_out)&&1!==i);return 4===a?(i=r.deflateEnd(this.strm),this.onEnd(i),this.ended=!0,0===i):2!==a||(this.onEnd(0),!(o.avail_out=0))},u.prototype.onData=function(t){this.chunks.push(t)},u.prototype.onEnd=function(t){0===t&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=n.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},i.Deflate=u,i.deflate=l,i.deflateRaw=function(t,e){return(e=e||{}).raw=!0,l(t,e)},i.gzip=function(t,e){return(e=e||{}).gzip=!0,l(t,e)}},{"./utils/common":41,"./utils/strings":42,"./zlib/deflate":46,"./zlib/messages":51,"./zlib/zstream":53}],40:[function(t,e,i){"use strict";var r=t("./zlib/inflate"),n=t("./utils/common"),s=t("./utils/strings"),a=t("./zlib/constants"),o=t("./zlib/messages"),h=t("./zlib/zstream"),u=t("./zlib/gzheader"),l=Object.prototype.toString;function c(t){if(!(this instanceof c))return new c(t);this.options=n.assign({chunkSize:16384,windowBits:0,to:""},t||{});var e=this.options;e.raw&&0<=e.windowBits&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(0<=e.windowBits&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),15<e.windowBits&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new h,this.strm.avail_out=0;var i=r.inflateInit2(this.strm,e.windowBits);if(i!==a.Z_OK)throw new Error(o[i]);this.header=new u,r.inflateGetHeader(this.strm,this.header)}function d(t,e){var i=new c(e);if(i.push(t,!0),i.err)throw i.msg||o[i.err];return i.result}c.prototype.push=function(t,e){var i,o,h,u,c,d,f=this.strm,p=this.options.chunkSize,m=this.options.dictionary,g=!1;if(this.ended)return!1;o=e===~~e?e:!0===e?a.Z_FINISH:a.Z_NO_FLUSH,"string"==typeof t?f.input=s.binstring2buf(t):"[object ArrayBuffer]"===l.call(t)?f.input=new Uint8Array(t):f.input=t,f.next_in=0,f.avail_in=f.input.length;do{if(0===f.avail_out&&(f.output=new n.Buf8(p),f.next_out=0,f.avail_out=p),(i=r.inflate(f,a.Z_NO_FLUSH))===a.Z_NEED_DICT&&m&&(d="string"==typeof m?s.string2buf(m):"[object ArrayBuffer]"===l.call(m)?new Uint8Array(m):m,i=r.inflateSetDictionary(this.strm,d)),i===a.Z_BUF_ERROR&&!0===g&&(i=a.Z_OK,g=!1),i!==a.Z_STREAM_END&&i!==a.Z_OK)return this.onEnd(i),!(this.ended=!0);f.next_out&&(0!==f.avail_out&&i!==a.Z_STREAM_END&&(0!==f.avail_in||o!==a.Z_FINISH&&o!==a.Z_SYNC_FLUSH)||("string"===this.options.to?(h=s.utf8border(f.output,f.next_out),u=f.next_out-h,c=s.buf2string(f.output,h),f.next_out=u,f.avail_out=p-u,u&&n.arraySet(f.output,f.output,h,u,0),this.onData(c)):this.onData(n.shrinkBuf(f.output,f.next_out)))),0===f.avail_in&&0===f.avail_out&&(g=!0)}while((0<f.avail_in||0===f.avail_out)&&i!==a.Z_STREAM_END);return i===a.Z_STREAM_END&&(o=a.Z_FINISH),o===a.Z_FINISH?(i=r.inflateEnd(this.strm),this.onEnd(i),this.ended=!0,i===a.Z_OK):o!==a.Z_SYNC_FLUSH||(this.onEnd(a.Z_OK),!(f.avail_out=0))},c.prototype.onData=function(t){this.chunks.push(t)},c.prototype.onEnd=function(t){t===a.Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=n.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},i.Inflate=c,i.inflate=d,i.inflateRaw=function(t,e){return(e=e||{}).raw=!0,d(t,e)},i.ungzip=d},{"./utils/common":41,"./utils/strings":42,"./zlib/constants":44,"./zlib/gzheader":47,"./zlib/inflate":49,"./zlib/messages":51,"./zlib/zstream":53}],41:[function(t,e,i){"use strict";var r="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;i.assign=function(t){for(var e=Array.prototype.slice.call(arguments,1);e.length;){var i=e.shift();if(i){if("object"!=typeof i)throw new TypeError(i+"must be non-object");for(var r in i)i.hasOwnProperty(r)&&(t[r]=i[r])}}return t},i.shrinkBuf=function(t,e){return t.length===e?t:t.subarray?t.subarray(0,e):(t.length=e,t)};var n={arraySet:function(t,e,i,r,n){if(e.subarray&&t.subarray)t.set(e.subarray(i,i+r),n);else for(var s=0;s<r;s++)t[n+s]=e[i+s]},flattenChunks:function(t){var e,i,r,n,s,a;for(e=r=0,i=t.length;e<i;e++)r+=t[e].length;for(a=new Uint8Array(r),e=n=0,i=t.length;e<i;e++)s=t[e],a.set(s,n),n+=s.length;return a}},s={arraySet:function(t,e,i,r,n){for(var s=0;s<r;s++)t[n+s]=e[i+s]},flattenChunks:function(t){return[].concat.apply([],t)}};i.setTyped=function(t){t?(i.Buf8=Uint8Array,i.Buf16=Uint16Array,i.Buf32=Int32Array,i.assign(i,n)):(i.Buf8=Array,i.Buf16=Array,i.Buf32=Array,i.assign(i,s))},i.setTyped(r)},{}],42:[function(t,e,i){"use strict";var r=t("./common"),n=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(t){n=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){s=!1}for(var a=new r.Buf8(256),o=0;o<256;o++)a[o]=252<=o?6:248<=o?5:240<=o?4:224<=o?3:192<=o?2:1;function h(t,e){if(e<65537&&(t.subarray&&s||!t.subarray&&n))return String.fromCharCode.apply(null,r.shrinkBuf(t,e));for(var i="",a=0;a<e;a++)i+=String.fromCharCode(t[a]);return i}a[254]=a[254]=1,i.string2buf=function(t){var e,i,n,s,a,o=t.length,h=0;for(s=0;s<o;s++)55296==(64512&(i=t.charCodeAt(s)))&&s+1<o&&56320==(64512&(n=t.charCodeAt(s+1)))&&(i=65536+(i-55296<<10)+(n-56320),s++),h+=i<128?1:i<2048?2:i<65536?3:4;for(e=new r.Buf8(h),s=a=0;a<h;s++)55296==(64512&(i=t.charCodeAt(s)))&&s+1<o&&56320==(64512&(n=t.charCodeAt(s+1)))&&(i=65536+(i-55296<<10)+(n-56320),s++),i<128?e[a++]=i:(i<2048?e[a++]=192|i>>>6:(i<65536?e[a++]=224|i>>>12:(e[a++]=240|i>>>18,e[a++]=128|i>>>12&63),e[a++]=128|i>>>6&63),e[a++]=128|63&i);return e},i.buf2binstring=function(t){return h(t,t.length)},i.binstring2buf=function(t){for(var e=new r.Buf8(t.length),i=0,n=e.length;i<n;i++)e[i]=t.charCodeAt(i);return e},i.buf2string=function(t,e){var i,r,n,s,o=e||t.length,u=new Array(2*o);for(i=r=0;i<o;)if((n=t[i++])<128)u[r++]=n;else if(4<(s=a[n]))u[r++]=65533,i+=s-1;else{for(n&=2===s?31:3===s?15:7;1<s&&i<o;)n=n<<6|63&t[i++],s--;1<s?u[r++]=65533:n<65536?u[r++]=n:(n-=65536,u[r++]=55296|n>>10&1023,u[r++]=56320|1023&n)}return h(u,r)},i.utf8border=function(t,e){var i;for((e=e||t.length)>t.length&&(e=t.length),i=e-1;0<=i&&128==(192&t[i]);)i--;return i<0||0===i?e:i+a[t[i]]>e?i:e}},{"./common":41}],43:[function(t,e,i){"use strict";e.exports=function(t,e,i,r){for(var n=65535&t|0,s=t>>>16&65535|0,a=0;0!==i;){for(i-=a=2e3<i?2e3:i;s=s+(n=n+e[r++]|0)|0,--a;);n%=65521,s%=65521}return n|s<<16|0}},{}],44:[function(t,e,i){"use strict";e.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(t,e,i){"use strict";var r=function(){for(var t,e=[],i=0;i<256;i++){t=i;for(var r=0;r<8;r++)t=1&t?3988292384^t>>>1:t>>>1;e[i]=t}return e}();e.exports=function(t,e,i,n){var s=r,a=n+i;t^=-1;for(var o=n;o<a;o++)t=t>>>8^s[255&(t^e[o])];return-1^t}},{}],46:[function(t,e,i){"use strict";var r,n=t("../utils/common"),s=t("./trees"),a=t("./adler32"),o=t("./crc32"),h=t("./messages"),u=-2,l=258,c=262,d=113;function f(t,e){return t.msg=h[e],e}function p(t){return(t<<1)-(4<t?9:0)}function m(t){for(var e=t.length;0<=--e;)t[e]=0}function g(t){var e=t.state,i=e.pending;i>t.avail_out&&(i=t.avail_out),0!==i&&(n.arraySet(t.output,e.pending_buf,e.pending_out,i,t.next_out),t.next_out+=i,e.pending_out+=i,t.total_out+=i,t.avail_out-=i,e.pending-=i,0===e.pending&&(e.pending_out=0))}function _(t,e){s._tr_flush_block(t,0<=t.block_start?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,g(t.strm)}function v(t,e){t.pending_buf[t.pending++]=e}function y(t,e){t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e}function w(t,e){var i,r,n=t.max_chain_length,s=t.strstart,a=t.prev_length,o=t.nice_match,h=t.strstart>t.w_size-c?t.strstart-(t.w_size-c):0,u=t.window,d=t.w_mask,f=t.prev,p=t.strstart+l,m=u[s+a-1],g=u[s+a];t.prev_length>=t.good_match&&(n>>=2),o>t.lookahead&&(o=t.lookahead);do{if(u[(i=e)+a]===g&&u[i+a-1]===m&&u[i]===u[s]&&u[++i]===u[s+1]){s+=2,i++;do{}while(u[++s]===u[++i]&&u[++s]===u[++i]&&u[++s]===u[++i]&&u[++s]===u[++i]&&u[++s]===u[++i]&&u[++s]===u[++i]&&u[++s]===u[++i]&&u[++s]===u[++i]&&s<p);if(r=l-(p-s),s=p-l,a<r){if(t.match_start=e,o<=(a=r))break;m=u[s+a-1],g=u[s+a]}}}while((e=f[e&d])>h&&0!=--n);return a<=t.lookahead?a:t.lookahead}function b(t){var e,i,r,s,h,u,l,d,f,p,m=t.w_size;do{if(s=t.window_size-t.lookahead-t.strstart,t.strstart>=m+(m-c)){for(n.arraySet(t.window,t.window,m,m,0),t.match_start-=m,t.strstart-=m,t.block_start-=m,e=i=t.hash_size;r=t.head[--e],t.head[e]=m<=r?r-m:0,--i;);for(e=i=m;r=t.prev[--e],t.prev[e]=m<=r?r-m:0,--i;);s+=m}if(0===t.strm.avail_in)break;if(u=t.strm,l=t.window,d=t.strstart+t.lookahead,p=void 0,(f=s)<(p=u.avail_in)&&(p=f),i=0===p?0:(u.avail_in-=p,n.arraySet(l,u.input,u.next_in,p,d),1===u.state.wrap?u.adler=a(u.adler,l,p,d):2===u.state.wrap&&(u.adler=o(u.adler,l,p,d)),u.next_in+=p,u.total_in+=p,p),t.lookahead+=i,t.lookahead+t.insert>=3)for(h=t.strstart-t.insert,t.ins_h=t.window[h],t.ins_h=(t.ins_h<<t.hash_shift^t.window[h+1])&t.hash_mask;t.insert&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[h+3-1])&t.hash_mask,t.prev[h&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=h,h++,t.insert--,!(t.lookahead+t.insert<3)););}while(t.lookahead<c&&0!==t.strm.avail_in)}function x(t,e){for(var i,r;;){if(t.lookahead<c){if(b(t),t.lookahead<c&&0===e)return 1;if(0===t.lookahead)break}if(i=0,t.lookahead>=3&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+3-1])&t.hash_mask,i=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==i&&t.strstart-i<=t.w_size-c&&(t.match_length=w(t,i)),t.match_length>=3)if(r=s._tr_tally(t,t.strstart-t.match_start,t.match_length-3),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=3){for(t.match_length--;t.strstart++,t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+3-1])&t.hash_mask,i=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart,0!=--t.match_length;);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+1])&t.hash_mask;else r=s._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(r&&(_(t,!1),0===t.strm.avail_out))return 1}return t.insert=t.strstart<2?t.strstart:2,4===e?(_(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(_(t,!1),0===t.strm.avail_out)?1:2}function k(t,e){for(var i,r,n;;){if(t.lookahead<c){if(b(t),t.lookahead<c&&0===e)return 1;if(0===t.lookahead)break}if(i=0,t.lookahead>=3&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+3-1])&t.hash_mask,i=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=2,0!==i&&t.prev_length<t.max_lazy_match&&t.strstart-i<=t.w_size-c&&(t.match_length=w(t,i),t.match_length<=5&&(1===t.strategy||3===t.match_length&&4096<t.strstart-t.match_start)&&(t.match_length=2)),t.prev_length>=3&&t.match_length<=t.prev_length){for(n=t.strstart+t.lookahead-3,r=s._tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-3),t.lookahead-=t.prev_length-1,t.prev_length-=2;++t.strstart<=n&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+3-1])&t.hash_mask,i=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!=--t.prev_length;);if(t.match_available=0,t.match_length=2,t.strstart++,r&&(_(t,!1),0===t.strm.avail_out))return 1}else if(t.match_available){if((r=s._tr_tally(t,0,t.window[t.strstart-1]))&&_(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return 1}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(r=s._tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<2?t.strstart:2,4===e?(_(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(_(t,!1),0===t.strm.avail_out)?1:2}function S(t,e,i,r,n){this.good_length=t,this.max_lazy=e,this.nice_length=i,this.max_chain=r,this.func=n}function E(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=8,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new n.Buf16(1146),this.dyn_dtree=new n.Buf16(122),this.bl_tree=new n.Buf16(78),m(this.dyn_ltree),m(this.dyn_dtree),m(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new n.Buf16(16),this.heap=new n.Buf16(573),m(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new n.Buf16(573),m(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function C(t){var e;return t&&t.state?(t.total_in=t.total_out=0,t.data_type=2,(e=t.state).pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap?42:d,t.adler=2===e.wrap?0:1,e.last_flush=0,s._tr_init(e),0):f(t,u)}function T(t){var e=C(t);return 0===e&&function(t){t.window_size=2*t.w_size,m(t.head),t.max_lazy_match=r[t.level].max_lazy,t.good_match=r[t.level].good_length,t.nice_match=r[t.level].nice_length,t.max_chain_length=r[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=2,t.match_available=0,t.ins_h=0}(t.state),e}function O(t,e,i,r,s,a){if(!t)return u;var o=1;if(-1===e&&(e=6),r<0?(o=0,r=-r):15<r&&(o=2,r-=16),s<1||9<s||8!==i||r<8||15<r||e<0||9<e||a<0||4<a)return f(t,u);8===r&&(r=9);var h=new E;return(t.state=h).strm=t,h.wrap=o,h.gzhead=null,h.w_bits=r,h.w_size=1<<h.w_bits,h.w_mask=h.w_size-1,h.hash_bits=s+7,h.hash_size=1<<h.hash_bits,h.hash_mask=h.hash_size-1,h.hash_shift=~~((h.hash_bits+3-1)/3),h.window=new n.Buf8(2*h.w_size),h.head=new n.Buf16(h.hash_size),h.prev=new n.Buf16(h.w_size),h.lit_bufsize=1<<s+6,h.pending_buf_size=4*h.lit_bufsize,h.pending_buf=new n.Buf8(h.pending_buf_size),h.d_buf=1*h.lit_bufsize,h.l_buf=3*h.lit_bufsize,h.level=e,h.strategy=a,h.method=i,T(t)}r=[new S(0,0,0,0,(function(t,e){var i=65535;for(i>t.pending_buf_size-5&&(i=t.pending_buf_size-5);;){if(t.lookahead<=1){if(b(t),0===t.lookahead&&0===e)return 1;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;var r=t.block_start+i;if((0===t.strstart||t.strstart>=r)&&(t.lookahead=t.strstart-r,t.strstart=r,_(t,!1),0===t.strm.avail_out))return 1;if(t.strstart-t.block_start>=t.w_size-c&&(_(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,4===e?(_(t,!0),0===t.strm.avail_out?3:4):(t.strstart>t.block_start&&(_(t,!1),t.strm.avail_out),1)})),new S(4,4,8,4,x),new S(4,5,16,8,x),new S(4,6,32,32,x),new S(4,4,16,16,k),new S(8,16,32,32,k),new S(8,16,128,128,k),new S(8,32,128,256,k),new S(32,128,258,1024,k),new S(32,258,258,4096,k)],i.deflateInit=function(t,e){return O(t,e,8,15,8,0)},i.deflateInit2=O,i.deflateReset=T,i.deflateResetKeep=C,i.deflateSetHeader=function(t,e){return t&&t.state?2!==t.state.wrap?u:(t.state.gzhead=e,0):u},i.deflate=function(t,e){var i,n,a,h;if(!t||!t.state||5<e||e<0)return t?f(t,u):u;if(n=t.state,!t.output||!t.input&&0!==t.avail_in||666===n.status&&4!==e)return f(t,0===t.avail_out?-5:u);if(n.strm=t,i=n.last_flush,n.last_flush=e,42===n.status)if(2===n.wrap)t.adler=0,v(n,31),v(n,139),v(n,8),n.gzhead?(v(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),v(n,255&n.gzhead.time),v(n,n.gzhead.time>>8&255),v(n,n.gzhead.time>>16&255),v(n,n.gzhead.time>>24&255),v(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),v(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(v(n,255&n.gzhead.extra.length),v(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(t.adler=o(t.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=69):(v(n,0),v(n,0),v(n,0),v(n,0),v(n,0),v(n,9===n.level?2:2<=n.strategy||n.level<2?4:0),v(n,3),n.status=d);else{var c=8+(n.w_bits-8<<4)<<8;c|=(2<=n.strategy||n.level<2?0:n.level<6?1:6===n.level?2:3)<<6,0!==n.strstart&&(c|=32),c+=31-c%31,n.status=d,y(n,c),0!==n.strstart&&(y(n,t.adler>>>16),y(n,65535&t.adler)),t.adler=1}if(69===n.status)if(n.gzhead.extra){for(a=n.pending;n.gzindex<(65535&n.gzhead.extra.length)&&(n.pending!==n.pending_buf_size||(n.gzhead.hcrc&&n.pending>a&&(t.adler=o(t.adler,n.pending_buf,n.pending-a,a)),g(t),a=n.pending,n.pending!==n.pending_buf_size));)v(n,255&n.gzhead.extra[n.gzindex]),n.gzindex++;n.gzhead.hcrc&&n.pending>a&&(t.adler=o(t.adler,n.pending_buf,n.pending-a,a)),n.gzindex===n.gzhead.extra.length&&(n.gzindex=0,n.status=73)}else n.status=73;if(73===n.status)if(n.gzhead.name){a=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>a&&(t.adler=o(t.adler,n.pending_buf,n.pending-a,a)),g(t),a=n.pending,n.pending===n.pending_buf_size)){h=1;break}h=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,v(n,h)}while(0!==h);n.gzhead.hcrc&&n.pending>a&&(t.adler=o(t.adler,n.pending_buf,n.pending-a,a)),0===h&&(n.gzindex=0,n.status=91)}else n.status=91;if(91===n.status)if(n.gzhead.comment){a=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>a&&(t.adler=o(t.adler,n.pending_buf,n.pending-a,a)),g(t),a=n.pending,n.pending===n.pending_buf_size)){h=1;break}h=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,v(n,h)}while(0!==h);n.gzhead.hcrc&&n.pending>a&&(t.adler=o(t.adler,n.pending_buf,n.pending-a,a)),0===h&&(n.status=103)}else n.status=103;if(103===n.status&&(n.gzhead.hcrc?(n.pending+2>n.pending_buf_size&&g(t),n.pending+2<=n.pending_buf_size&&(v(n,255&t.adler),v(n,t.adler>>8&255),t.adler=0,n.status=d)):n.status=d),0!==n.pending){if(g(t),0===t.avail_out)return n.last_flush=-1,0}else if(0===t.avail_in&&p(e)<=p(i)&&4!==e)return f(t,-5);if(666===n.status&&0!==t.avail_in)return f(t,-5);if(0!==t.avail_in||0!==n.lookahead||0!==e&&666!==n.status){var w=2===n.strategy?function(t,e){for(var i;;){if(0===t.lookahead&&(b(t),0===t.lookahead)){if(0===e)return 1;break}if(t.match_length=0,i=s._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,i&&(_(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,4===e?(_(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(_(t,!1),0===t.strm.avail_out)?1:2}(n,e):3===n.strategy?function(t,e){for(var i,r,n,a,o=t.window;;){if(t.lookahead<=l){if(b(t),t.lookahead<=l&&0===e)return 1;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=3&&0<t.strstart&&(r=o[n=t.strstart-1])===o[++n]&&r===o[++n]&&r===o[++n]){a=t.strstart+l;do{}while(r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&r===o[++n]&&n<a);t.match_length=l-(a-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=3?(i=s._tr_tally(t,1,t.match_length-3),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(i=s._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),i&&(_(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,4===e?(_(t,!0),0===t.strm.avail_out?3:4):t.last_lit&&(_(t,!1),0===t.strm.avail_out)?1:2}(n,e):r[n.level].func(n,e);if(3!==w&&4!==w||(n.status=666),1===w||3===w)return 0===t.avail_out&&(n.last_flush=-1),0;if(2===w&&(1===e?s._tr_align(n):5!==e&&(s._tr_stored_block(n,0,0,!1),3===e&&(m(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),g(t),0===t.avail_out))return n.last_flush=-1,0}return 4!==e?0:n.wrap<=0?1:(2===n.wrap?(v(n,255&t.adler),v(n,t.adler>>8&255),v(n,t.adler>>16&255),v(n,t.adler>>24&255),v(n,255&t.total_in),v(n,t.total_in>>8&255),v(n,t.total_in>>16&255),v(n,t.total_in>>24&255)):(y(n,t.adler>>>16),y(n,65535&t.adler)),g(t),0<n.wrap&&(n.wrap=-n.wrap),0!==n.pending?0:1)},i.deflateEnd=function(t){var e;return t&&t.state?42!==(e=t.state.status)&&69!==e&&73!==e&&91!==e&&103!==e&&e!==d&&666!==e?f(t,u):(t.state=null,e===d?f(t,-3):0):u},i.deflateSetDictionary=function(t,e){var i,r,s,o,h,l,c,d,f=e.length;if(!t||!t.state)return u;if(2===(o=(i=t.state).wrap)||1===o&&42!==i.status||i.lookahead)return u;for(1===o&&(t.adler=a(t.adler,e,f,0)),i.wrap=0,f>=i.w_size&&(0===o&&(m(i.head),i.strstart=0,i.block_start=0,i.insert=0),d=new n.Buf8(i.w_size),n.arraySet(d,e,f-i.w_size,i.w_size,0),e=d,f=i.w_size),h=t.avail_in,l=t.next_in,c=t.input,t.avail_in=f,t.next_in=0,t.input=e,b(i);i.lookahead>=3;){for(r=i.strstart,s=i.lookahead-2;i.ins_h=(i.ins_h<<i.hash_shift^i.window[r+3-1])&i.hash_mask,i.prev[r&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=r,r++,--s;);i.strstart=r,i.lookahead=2,b(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,t.next_in=l,t.input=c,t.avail_in=h,i.wrap=o,0},i.deflateInfo="pako deflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./messages":51,"./trees":52}],47:[function(t,e,i){"use strict";e.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}},{}],48:[function(t,e,i){"use strict";e.exports=function(t,e){var i,r,n,s,a,o,h,u,l,c,d,f,p,m,g,_,v,y,w,b,x,k,S,E,C;i=t.state,r=t.next_in,E=t.input,n=r+(t.avail_in-5),s=t.next_out,C=t.output,a=s-(e-t.avail_out),o=s+(t.avail_out-257),h=i.dmax,u=i.wsize,l=i.whave,c=i.wnext,d=i.window,f=i.hold,p=i.bits,m=i.lencode,g=i.distcode,_=(1<<i.lenbits)-1,v=(1<<i.distbits)-1;t:do{p<15&&(f+=E[r++]<<p,p+=8,f+=E[r++]<<p,p+=8),y=m[f&_];e:for(;;){if(f>>>=w=y>>>24,p-=w,0==(w=y>>>16&255))C[s++]=65535&y;else{if(!(16&w)){if(0==(64&w)){y=m[(65535&y)+(f&(1<<w)-1)];continue e}if(32&w){i.mode=12;break t}t.msg="invalid literal/length code",i.mode=30;break t}b=65535&y,(w&=15)&&(p<w&&(f+=E[r++]<<p,p+=8),b+=f&(1<<w)-1,f>>>=w,p-=w),p<15&&(f+=E[r++]<<p,p+=8,f+=E[r++]<<p,p+=8),y=g[f&v];i:for(;;){if(f>>>=w=y>>>24,p-=w,!(16&(w=y>>>16&255))){if(0==(64&w)){y=g[(65535&y)+(f&(1<<w)-1)];continue i}t.msg="invalid distance code",i.mode=30;break t}if(x=65535&y,p<(w&=15)&&(f+=E[r++]<<p,(p+=8)<w&&(f+=E[r++]<<p,p+=8)),h<(x+=f&(1<<w)-1)){t.msg="invalid distance too far back",i.mode=30;break t}if(f>>>=w,p-=w,(w=s-a)<x){if(l<(w=x-w)&&i.sane){t.msg="invalid distance too far back",i.mode=30;break t}if(S=d,(k=0)===c){if(k+=u-w,w<b){for(b-=w;C[s++]=d[k++],--w;);k=s-x,S=C}}else if(c<w){if(k+=u+c-w,(w-=c)<b){for(b-=w;C[s++]=d[k++],--w;);if(k=0,c<b){for(b-=w=c;C[s++]=d[k++],--w;);k=s-x,S=C}}}else if(k+=c-w,w<b){for(b-=w;C[s++]=d[k++],--w;);k=s-x,S=C}for(;2<b;)C[s++]=S[k++],C[s++]=S[k++],C[s++]=S[k++],b-=3;b&&(C[s++]=S[k++],1<b&&(C[s++]=S[k++]))}else{for(k=s-x;C[s++]=C[k++],C[s++]=C[k++],C[s++]=C[k++],2<(b-=3););b&&(C[s++]=C[k++],1<b&&(C[s++]=C[k++]))}break}}break}}while(r<n&&s<o);r-=b=p>>3,f&=(1<<(p-=b<<3))-1,t.next_in=r,t.next_out=s,t.avail_in=r<n?n-r+5:5-(r-n),t.avail_out=s<o?o-s+257:257-(s-o),i.hold=f,i.bits=p}},{}],49:[function(t,e,i){"use strict";var r=t("../utils/common"),n=t("./adler32"),s=t("./crc32"),a=t("./inffast"),o=t("./inftrees"),h=-2;function u(t){return(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24)}function l(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new r.Buf16(320),this.work=new r.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function c(t){var e;return t&&t.state?(e=t.state,t.total_in=t.total_out=e.total=0,t.msg="",e.wrap&&(t.adler=1&e.wrap),e.mode=1,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new r.Buf32(852),e.distcode=e.distdyn=new r.Buf32(592),e.sane=1,e.back=-1,0):h}function d(t){var e;return t&&t.state?((e=t.state).wsize=0,e.whave=0,e.wnext=0,c(t)):h}function f(t,e){var i,r;return t&&t.state?(r=t.state,e<0?(i=0,e=-e):(i=1+(e>>4),e<48&&(e&=15)),e&&(e<8||15<e)?h:(null!==r.window&&r.wbits!==e&&(r.window=null),r.wrap=i,r.wbits=e,d(t))):h}function p(t,e){var i,r;return t?(r=new l,(t.state=r).window=null,0!==(i=f(t,e))&&(t.state=null),i):h}var m,g,_=!0;function v(t){if(_){var e;for(m=new r.Buf32(512),g=new r.Buf32(32),e=0;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(o(1,t.lens,0,288,m,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;o(2,t.lens,0,32,g,0,t.work,{bits:5}),_=!1}t.lencode=m,t.lenbits=9,t.distcode=g,t.distbits=5}function y(t,e,i,n){var s,a=t.state;return null===a.window&&(a.wsize=1<<a.wbits,a.wnext=0,a.whave=0,a.window=new r.Buf8(a.wsize)),n>=a.wsize?(r.arraySet(a.window,e,i-a.wsize,a.wsize,0),a.wnext=0,a.whave=a.wsize):(n<(s=a.wsize-a.wnext)&&(s=n),r.arraySet(a.window,e,i-n,s,a.wnext),(n-=s)?(r.arraySet(a.window,e,i-n,n,0),a.wnext=n,a.whave=a.wsize):(a.wnext+=s,a.wnext===a.wsize&&(a.wnext=0),a.whave<a.wsize&&(a.whave+=s))),0}i.inflateReset=d,i.inflateReset2=f,i.inflateResetKeep=c,i.inflateInit=function(t){return p(t,15)},i.inflateInit2=p,i.inflate=function(t,e){var i,l,c,d,f,p,m,g,_,w,b,x,k,S,E,C,T,O,I,A,z,R,P,D,U=0,M=new r.Buf8(4),L=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return h;12===(i=t.state).mode&&(i.mode=13),f=t.next_out,c=t.output,m=t.avail_out,d=t.next_in,l=t.input,p=t.avail_in,g=i.hold,_=i.bits,w=p,b=m,R=0;t:for(;;)switch(i.mode){case 1:if(0===i.wrap){i.mode=13;break}for(;_<16;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}if(2&i.wrap&&35615===g){M[i.check=0]=255&g,M[1]=g>>>8&255,i.check=s(i.check,M,2,0),_=g=0,i.mode=2;break}if(i.flags=0,i.head&&(i.head.done=!1),!(1&i.wrap)||(((255&g)<<8)+(g>>8))%31){t.msg="incorrect header check",i.mode=30;break}if(8!=(15&g)){t.msg="unknown compression method",i.mode=30;break}if(_-=4,z=8+(15&(g>>>=4)),0===i.wbits)i.wbits=z;else if(z>i.wbits){t.msg="invalid window size",i.mode=30;break}i.dmax=1<<z,t.adler=i.check=1,i.mode=512&g?10:12,_=g=0;break;case 2:for(;_<16;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}if(i.flags=g,8!=(255&i.flags)){t.msg="unknown compression method",i.mode=30;break}if(57344&i.flags){t.msg="unknown header flags set",i.mode=30;break}i.head&&(i.head.text=g>>8&1),512&i.flags&&(M[0]=255&g,M[1]=g>>>8&255,i.check=s(i.check,M,2,0)),_=g=0,i.mode=3;case 3:for(;_<32;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}i.head&&(i.head.time=g),512&i.flags&&(M[0]=255&g,M[1]=g>>>8&255,M[2]=g>>>16&255,M[3]=g>>>24&255,i.check=s(i.check,M,4,0)),_=g=0,i.mode=4;case 4:for(;_<16;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}i.head&&(i.head.xflags=255&g,i.head.os=g>>8),512&i.flags&&(M[0]=255&g,M[1]=g>>>8&255,i.check=s(i.check,M,2,0)),_=g=0,i.mode=5;case 5:if(1024&i.flags){for(;_<16;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}i.length=g,i.head&&(i.head.extra_len=g),512&i.flags&&(M[0]=255&g,M[1]=g>>>8&255,i.check=s(i.check,M,2,0)),_=g=0}else i.head&&(i.head.extra=null);i.mode=6;case 6:if(1024&i.flags&&(p<(x=i.length)&&(x=p),x&&(i.head&&(z=i.head.extra_len-i.length,i.head.extra||(i.head.extra=new Array(i.head.extra_len)),r.arraySet(i.head.extra,l,d,x,z)),512&i.flags&&(i.check=s(i.check,l,x,d)),p-=x,d+=x,i.length-=x),i.length))break t;i.length=0,i.mode=7;case 7:if(2048&i.flags){if(0===p)break t;for(x=0;z=l[d+x++],i.head&&z&&i.length<65536&&(i.head.name+=String.fromCharCode(z)),z&&x<p;);if(512&i.flags&&(i.check=s(i.check,l,x,d)),p-=x,d+=x,z)break t}else i.head&&(i.head.name=null);i.length=0,i.mode=8;case 8:if(4096&i.flags){if(0===p)break t;for(x=0;z=l[d+x++],i.head&&z&&i.length<65536&&(i.head.comment+=String.fromCharCode(z)),z&&x<p;);if(512&i.flags&&(i.check=s(i.check,l,x,d)),p-=x,d+=x,z)break t}else i.head&&(i.head.comment=null);i.mode=9;case 9:if(512&i.flags){for(;_<16;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}if(g!==(65535&i.check)){t.msg="header crc mismatch",i.mode=30;break}_=g=0}i.head&&(i.head.hcrc=i.flags>>9&1,i.head.done=!0),t.adler=i.check=0,i.mode=12;break;case 10:for(;_<32;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}t.adler=i.check=u(g),_=g=0,i.mode=11;case 11:if(0===i.havedict)return t.next_out=f,t.avail_out=m,t.next_in=d,t.avail_in=p,i.hold=g,i.bits=_,2;t.adler=i.check=1,i.mode=12;case 12:if(5===e||6===e)break t;case 13:if(i.last){g>>>=7&_,_-=7&_,i.mode=27;break}for(;_<3;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}switch(i.last=1&g,_-=1,3&(g>>>=1)){case 0:i.mode=14;break;case 1:if(v(i),i.mode=20,6!==e)break;g>>>=2,_-=2;break t;case 2:i.mode=17;break;case 3:t.msg="invalid block type",i.mode=30}g>>>=2,_-=2;break;case 14:for(g>>>=7&_,_-=7&_;_<32;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}if((65535&g)!=(g>>>16^65535)){t.msg="invalid stored block lengths",i.mode=30;break}if(i.length=65535&g,_=g=0,i.mode=15,6===e)break t;case 15:i.mode=16;case 16:if(x=i.length){if(p<x&&(x=p),m<x&&(x=m),0===x)break t;r.arraySet(c,l,d,x,f),p-=x,d+=x,m-=x,f+=x,i.length-=x;break}i.mode=12;break;case 17:for(;_<14;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}if(i.nlen=257+(31&g),g>>>=5,_-=5,i.ndist=1+(31&g),g>>>=5,_-=5,i.ncode=4+(15&g),g>>>=4,_-=4,286<i.nlen||30<i.ndist){t.msg="too many length or distance symbols",i.mode=30;break}i.have=0,i.mode=18;case 18:for(;i.have<i.ncode;){for(;_<3;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}i.lens[L[i.have++]]=7&g,g>>>=3,_-=3}for(;i.have<19;)i.lens[L[i.have++]]=0;if(i.lencode=i.lendyn,i.lenbits=7,P={bits:i.lenbits},R=o(0,i.lens,0,19,i.lencode,0,i.work,P),i.lenbits=P.bits,R){t.msg="invalid code lengths set",i.mode=30;break}i.have=0,i.mode=19;case 19:for(;i.have<i.nlen+i.ndist;){for(;C=(U=i.lencode[g&(1<<i.lenbits)-1])>>>16&255,T=65535&U,!((E=U>>>24)<=_);){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}if(T<16)g>>>=E,_-=E,i.lens[i.have++]=T;else{if(16===T){for(D=E+2;_<D;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}if(g>>>=E,_-=E,0===i.have){t.msg="invalid bit length repeat",i.mode=30;break}z=i.lens[i.have-1],x=3+(3&g),g>>>=2,_-=2}else if(17===T){for(D=E+3;_<D;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}_-=E,z=0,x=3+(7&(g>>>=E)),g>>>=3,_-=3}else{for(D=E+7;_<D;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}_-=E,z=0,x=11+(127&(g>>>=E)),g>>>=7,_-=7}if(i.have+x>i.nlen+i.ndist){t.msg="invalid bit length repeat",i.mode=30;break}for(;x--;)i.lens[i.have++]=z}}if(30===i.mode)break;if(0===i.lens[256]){t.msg="invalid code -- missing end-of-block",i.mode=30;break}if(i.lenbits=9,P={bits:i.lenbits},R=o(1,i.lens,0,i.nlen,i.lencode,0,i.work,P),i.lenbits=P.bits,R){t.msg="invalid literal/lengths set",i.mode=30;break}if(i.distbits=6,i.distcode=i.distdyn,P={bits:i.distbits},R=o(2,i.lens,i.nlen,i.ndist,i.distcode,0,i.work,P),i.distbits=P.bits,R){t.msg="invalid distances set",i.mode=30;break}if(i.mode=20,6===e)break t;case 20:i.mode=21;case 21:if(6<=p&&258<=m){t.next_out=f,t.avail_out=m,t.next_in=d,t.avail_in=p,i.hold=g,i.bits=_,a(t,b),f=t.next_out,c=t.output,m=t.avail_out,d=t.next_in,l=t.input,p=t.avail_in,g=i.hold,_=i.bits,12===i.mode&&(i.back=-1);break}for(i.back=0;C=(U=i.lencode[g&(1<<i.lenbits)-1])>>>16&255,T=65535&U,!((E=U>>>24)<=_);){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}if(C&&0==(240&C)){for(O=E,I=C,A=T;C=(U=i.lencode[A+((g&(1<<O+I)-1)>>O)])>>>16&255,T=65535&U,!(O+(E=U>>>24)<=_);){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}g>>>=O,_-=O,i.back+=O}if(g>>>=E,_-=E,i.back+=E,i.length=T,0===C){i.mode=26;break}if(32&C){i.back=-1,i.mode=12;break}if(64&C){t.msg="invalid literal/length code",i.mode=30;break}i.extra=15&C,i.mode=22;case 22:if(i.extra){for(D=i.extra;_<D;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}i.length+=g&(1<<i.extra)-1,g>>>=i.extra,_-=i.extra,i.back+=i.extra}i.was=i.length,i.mode=23;case 23:for(;C=(U=i.distcode[g&(1<<i.distbits)-1])>>>16&255,T=65535&U,!((E=U>>>24)<=_);){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}if(0==(240&C)){for(O=E,I=C,A=T;C=(U=i.distcode[A+((g&(1<<O+I)-1)>>O)])>>>16&255,T=65535&U,!(O+(E=U>>>24)<=_);){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}g>>>=O,_-=O,i.back+=O}if(g>>>=E,_-=E,i.back+=E,64&C){t.msg="invalid distance code",i.mode=30;break}i.offset=T,i.extra=15&C,i.mode=24;case 24:if(i.extra){for(D=i.extra;_<D;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}i.offset+=g&(1<<i.extra)-1,g>>>=i.extra,_-=i.extra,i.back+=i.extra}if(i.offset>i.dmax){t.msg="invalid distance too far back",i.mode=30;break}i.mode=25;case 25:if(0===m)break t;if(x=b-m,i.offset>x){if((x=i.offset-x)>i.whave&&i.sane){t.msg="invalid distance too far back",i.mode=30;break}k=x>i.wnext?(x-=i.wnext,i.wsize-x):i.wnext-x,x>i.length&&(x=i.length),S=i.window}else S=c,k=f-i.offset,x=i.length;for(m<x&&(x=m),m-=x,i.length-=x;c[f++]=S[k++],--x;);0===i.length&&(i.mode=21);break;case 26:if(0===m)break t;c[f++]=i.length,m--,i.mode=21;break;case 27:if(i.wrap){for(;_<32;){if(0===p)break t;p--,g|=l[d++]<<_,_+=8}if(b-=m,t.total_out+=b,i.total+=b,b&&(t.adler=i.check=i.flags?s(i.check,c,b,f-b):n(i.check,c,b,f-b)),b=m,(i.flags?g:u(g))!==i.check){t.msg="incorrect data check",i.mode=30;break}_=g=0}i.mode=28;case 28:if(i.wrap&&i.flags){for(;_<32;){if(0===p)break t;p--,g+=l[d++]<<_,_+=8}if(g!==(4294967295&i.total)){t.msg="incorrect length check",i.mode=30;break}_=g=0}i.mode=29;case 29:R=1;break t;case 30:R=-3;break t;case 31:return-4;case 32:default:return h}return t.next_out=f,t.avail_out=m,t.next_in=d,t.avail_in=p,i.hold=g,i.bits=_,(i.wsize||b!==t.avail_out&&i.mode<30&&(i.mode<27||4!==e))&&y(t,t.output,t.next_out,b-t.avail_out)?(i.mode=31,-4):(w-=t.avail_in,b-=t.avail_out,t.total_in+=w,t.total_out+=b,i.total+=b,i.wrap&&b&&(t.adler=i.check=i.flags?s(i.check,c,b,t.next_out-b):n(i.check,c,b,t.next_out-b)),t.data_type=i.bits+(i.last?64:0)+(12===i.mode?128:0)+(20===i.mode||15===i.mode?256:0),(0==w&&0===b||4===e)&&0===R&&(R=-5),R)},i.inflateEnd=function(t){if(!t||!t.state)return h;var e=t.state;return e.window&&(e.window=null),t.state=null,0},i.inflateGetHeader=function(t,e){var i;return t&&t.state?0==(2&(i=t.state).wrap)?h:((i.head=e).done=!1,0):h},i.inflateSetDictionary=function(t,e){var i,r=e.length;return t&&t.state?0!==(i=t.state).wrap&&11!==i.mode?h:11===i.mode&&n(1,e,r,0)!==i.check?-3:y(t,e,r,r)?(i.mode=31,-4):(i.havedict=1,0):h},i.inflateInfo="pako inflate (from Nodeca project)"},{"../utils/common":41,"./adler32":43,"./crc32":45,"./inffast":48,"./inftrees":50}],50:[function(t,e,i){"use strict";var r=t("../utils/common"),n=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],s=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],a=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],o=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];e.exports=function(t,e,i,h,u,l,c,d){var f,p,m,g,_,v,y,w,b,x=d.bits,k=0,S=0,E=0,C=0,T=0,O=0,I=0,A=0,z=0,R=0,P=null,D=0,U=new r.Buf16(16),M=new r.Buf16(16),L=null,B=0;for(k=0;k<=15;k++)U[k]=0;for(S=0;S<h;S++)U[e[i+S]]++;for(T=x,C=15;1<=C&&0===U[C];C--);if(C<T&&(T=C),0===C)return u[l++]=20971520,u[l++]=20971520,d.bits=1,0;for(E=1;E<C&&0===U[E];E++);for(T<E&&(T=E),k=A=1;k<=15;k++)if(A<<=1,(A-=U[k])<0)return-1;if(0<A&&(0===t||1!==C))return-1;for(M[1]=0,k=1;k<15;k++)M[k+1]=M[k]+U[k];for(S=0;S<h;S++)0!==e[i+S]&&(c[M[e[i+S]]++]=S);if(v=0===t?(P=L=c,19):1===t?(P=n,D-=257,L=s,B-=257,256):(P=a,L=o,-1),k=E,_=l,I=S=R=0,m=-1,g=(z=1<<(O=T))-1,1===t&&852<z||2===t&&592<z)return 1;for(;;){for(y=k-I,b=c[S]<v?(w=0,c[S]):c[S]>v?(w=L[B+c[S]],P[D+c[S]]):(w=96,0),f=1<<k-I,E=p=1<<O;u[_+(R>>I)+(p-=f)]=y<<24|w<<16|b|0,0!==p;);for(f=1<<k-1;R&f;)f>>=1;if(0!==f?(R&=f-1,R+=f):R=0,S++,0==--U[k]){if(k===C)break;k=e[i+c[S]]}if(T<k&&(R&g)!==m){for(0===I&&(I=T),_+=E,A=1<<(O=k-I);O+I<C&&!((A-=U[O+I])<=0);)O++,A<<=1;if(z+=1<<O,1===t&&852<z||2===t&&592<z)return 1;u[m=R&g]=T<<24|O<<16|_-l|0}}return 0!==R&&(u[_+R]=k-I<<24|64<<16|0),d.bits=T,0}},{"../utils/common":41}],51:[function(t,e,i){"use strict";e.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},{}],52:[function(t,e,i){"use strict";var r=t("../utils/common");function n(t){for(var e=t.length;0<=--e;)t[e]=0}var s=256,a=286,o=30,h=15,u=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],l=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],c=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],d=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],f=new Array(576);n(f);var p=new Array(60);n(p);var m=new Array(512);n(m);var g=new Array(256);n(g);var _=new Array(29);n(_);var v,y,w,b=new Array(o);function x(t,e,i,r,n){this.static_tree=t,this.extra_bits=e,this.extra_base=i,this.elems=r,this.max_length=n,this.has_stree=t&&t.length}function k(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}function S(t){return t<256?m[t]:m[256+(t>>>7)]}function E(t,e){t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255}function C(t,e,i){t.bi_valid>16-i?(t.bi_buf|=e<<t.bi_valid&65535,E(t,t.bi_buf),t.bi_buf=e>>16-t.bi_valid,t.bi_valid+=i-16):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=i)}function T(t,e,i){C(t,i[2*e],i[2*e+1])}function O(t,e){for(var i=0;i|=1&t,t>>>=1,i<<=1,0<--e;);return i>>>1}function I(t,e,i){var r,n,s=new Array(16),a=0;for(r=1;r<=h;r++)s[r]=a=a+i[r-1]<<1;for(n=0;n<=e;n++){var o=t[2*n+1];0!==o&&(t[2*n]=O(s[o]++,o))}}function A(t){var e;for(e=0;e<a;e++)t.dyn_ltree[2*e]=0;for(e=0;e<o;e++)t.dyn_dtree[2*e]=0;for(e=0;e<19;e++)t.bl_tree[2*e]=0;t.dyn_ltree[512]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0}function z(t){8<t.bi_valid?E(t,t.bi_buf):0<t.bi_valid&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0}function R(t,e,i,r){var n=2*e,s=2*i;return t[n]<t[s]||t[n]===t[s]&&r[e]<=r[i]}function P(t,e,i){for(var r=t.heap[i],n=i<<1;n<=t.heap_len&&(n<t.heap_len&&R(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!R(e,r,t.heap[n],t.depth));)t.heap[i]=t.heap[n],i=n,n<<=1;t.heap[i]=r}function D(t,e,i){var r,n,a,o,h=0;if(0!==t.last_lit)for(;r=t.pending_buf[t.d_buf+2*h]<<8|t.pending_buf[t.d_buf+2*h+1],n=t.pending_buf[t.l_buf+h],h++,0===r?T(t,n,e):(T(t,(a=g[n])+s+1,e),0!==(o=u[a])&&C(t,n-=_[a],o),T(t,a=S(--r),i),0!==(o=l[a])&&C(t,r-=b[a],o)),h<t.last_lit;);T(t,256,e)}function U(t,e){var i,r,n,s=e.dyn_tree,a=e.stat_desc.static_tree,o=e.stat_desc.has_stree,u=e.stat_desc.elems,l=-1;for(t.heap_len=0,t.heap_max=573,i=0;i<u;i++)0!==s[2*i]?(t.heap[++t.heap_len]=l=i,t.depth[i]=0):s[2*i+1]=0;for(;t.heap_len<2;)s[2*(n=t.heap[++t.heap_len]=l<2?++l:0)]=1,t.depth[n]=0,t.opt_len--,o&&(t.static_len-=a[2*n+1]);for(e.max_code=l,i=t.heap_len>>1;1<=i;i--)P(t,s,i);for(n=u;i=t.heap[1],t.heap[1]=t.heap[t.heap_len--],P(t,s,1),r=t.heap[1],t.heap[--t.heap_max]=i,t.heap[--t.heap_max]=r,s[2*n]=s[2*i]+s[2*r],t.depth[n]=(t.depth[i]>=t.depth[r]?t.depth[i]:t.depth[r])+1,s[2*i+1]=s[2*r+1]=n,t.heap[1]=n++,P(t,s,1),2<=t.heap_len;);t.heap[--t.heap_max]=t.heap[1],function(t,e){var i,r,n,s,a,o,u=e.dyn_tree,l=e.max_code,c=e.stat_desc.static_tree,d=e.stat_desc.has_stree,f=e.stat_desc.extra_bits,p=e.stat_desc.extra_base,m=e.stat_desc.max_length,g=0;for(s=0;s<=h;s++)t.bl_count[s]=0;for(u[2*t.heap[t.heap_max]+1]=0,i=t.heap_max+1;i<573;i++)m<(s=u[2*u[2*(r=t.heap[i])+1]+1]+1)&&(s=m,g++),u[2*r+1]=s,l<r||(t.bl_count[s]++,a=0,p<=r&&(a=f[r-p]),o=u[2*r],t.opt_len+=o*(s+a),d&&(t.static_len+=o*(c[2*r+1]+a)));if(0!==g){do{for(s=m-1;0===t.bl_count[s];)s--;t.bl_count[s]--,t.bl_count[s+1]+=2,t.bl_count[m]--,g-=2}while(0<g);for(s=m;0!==s;s--)for(r=t.bl_count[s];0!==r;)l<(n=t.heap[--i])||(u[2*n+1]!==s&&(t.opt_len+=(s-u[2*n+1])*u[2*n],u[2*n+1]=s),r--)}}(t,e),I(s,l,t.bl_count)}function M(t,e,i){var r,n,s=-1,a=e[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),e[2*(i+1)+1]=65535,r=0;r<=i;r++)n=a,a=e[2*(r+1)+1],++o<h&&n===a||(o<u?t.bl_tree[2*n]+=o:0!==n?(n!==s&&t.bl_tree[2*n]++,t.bl_tree[32]++):o<=10?t.bl_tree[34]++:t.bl_tree[36]++,s=n,u=(o=0)===a?(h=138,3):n===a?(h=6,3):(h=7,4))}function L(t,e,i){var r,n,s=-1,a=e[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),r=0;r<=i;r++)if(n=a,a=e[2*(r+1)+1],!(++o<h&&n===a)){if(o<u)for(;T(t,n,t.bl_tree),0!=--o;);else 0!==n?(n!==s&&(T(t,n,t.bl_tree),o--),T(t,16,t.bl_tree),C(t,o-3,2)):o<=10?(T(t,17,t.bl_tree),C(t,o-3,3)):(T(t,18,t.bl_tree),C(t,o-11,7));s=n,u=(o=0)===a?(h=138,3):n===a?(h=6,3):(h=7,4)}}n(b);var B=!1;function N(t,e,i,n){C(t,0+(n?1:0),3),function(t,e,i,n){z(t),E(t,i),E(t,~i),r.arraySet(t.pending_buf,t.window,e,i,t.pending),t.pending+=i}(t,e,i)}i._tr_init=function(t){B||(function(){var t,e,i,r,n,s=new Array(16);for(r=i=0;r<28;r++)for(_[r]=i,t=0;t<1<<u[r];t++)g[i++]=r;for(g[i-1]=r,r=n=0;r<16;r++)for(b[r]=n,t=0;t<1<<l[r];t++)m[n++]=r;for(n>>=7;r<o;r++)for(b[r]=n<<7,t=0;t<1<<l[r]-7;t++)m[256+n++]=r;for(e=0;e<=h;e++)s[e]=0;for(t=0;t<=143;)f[2*t+1]=8,t++,s[8]++;for(;t<=255;)f[2*t+1]=9,t++,s[9]++;for(;t<=279;)f[2*t+1]=7,t++,s[7]++;for(;t<=287;)f[2*t+1]=8,t++,s[8]++;for(I(f,287,s),t=0;t<o;t++)p[2*t+1]=5,p[2*t]=O(t,5);v=new x(f,u,257,a,h),y=new x(p,l,0,o,h),w=new x(new Array(0),c,0,19,7)}(),B=!0),t.l_desc=new k(t.dyn_ltree,v),t.d_desc=new k(t.dyn_dtree,y),t.bl_desc=new k(t.bl_tree,w),t.bi_buf=0,t.bi_valid=0,A(t)},i._tr_stored_block=N,i._tr_flush_block=function(t,e,i,r){var n,a,o=0;0<t.level?(2===t.strm.data_type&&(t.strm.data_type=function(t){var e,i=4093624447;for(e=0;e<=31;e++,i>>>=1)if(1&i&&0!==t.dyn_ltree[2*e])return 0;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return 1;for(e=32;e<s;e++)if(0!==t.dyn_ltree[2*e])return 1;return 0}(t)),U(t,t.l_desc),U(t,t.d_desc),o=function(t){var e;for(M(t,t.dyn_ltree,t.l_desc.max_code),M(t,t.dyn_dtree,t.d_desc.max_code),U(t,t.bl_desc),e=18;3<=e&&0===t.bl_tree[2*d[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e}(t),n=t.opt_len+3+7>>>3,(a=t.static_len+3+7>>>3)<=n&&(n=a)):n=a=i+5,i+4<=n&&-1!==e?N(t,e,i,r):4===t.strategy||a===n?(C(t,2+(r?1:0),3),D(t,f,p)):(C(t,4+(r?1:0),3),function(t,e,i,r){var n;for(C(t,e-257,5),C(t,i-1,5),C(t,r-4,4),n=0;n<r;n++)C(t,t.bl_tree[2*d[n]+1],3);L(t,t.dyn_ltree,e-1),L(t,t.dyn_dtree,i-1)}(t,t.l_desc.max_code+1,t.d_desc.max_code+1,o+1),D(t,t.dyn_ltree,t.dyn_dtree)),A(t),r&&z(t)},i._tr_tally=function(t,e,i){return t.pending_buf[t.d_buf+2*t.last_lit]=e>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&e,t.pending_buf[t.l_buf+t.last_lit]=255&i,t.last_lit++,0===e?t.dyn_ltree[2*i]++:(t.matches++,e--,t.dyn_ltree[2*(g[i]+s+1)]++,t.dyn_dtree[2*S(e)]++),t.last_lit===t.lit_bufsize-1},i._tr_align=function(t){C(t,2,3),T(t,256,f),function(t){16===t.bi_valid?(E(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):8<=t.bi_valid&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)}(t)}},{"../utils/common":41}],53:[function(t,e,i){"use strict";e.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(t,e,i){"use strict";e.exports="function"==typeof setImmediate?setImmediate:function(){var t=[].slice.apply(arguments);t.splice(1,0,0),setTimeout.apply(null,t)}},{}]},{},[10])(10)},876:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.BLUE=e.GREEN=e.RED=e.BLACK=e.WHITE=void 0,e.WHITE="white",e.BLACK="black",e.RED="red",e.GREEN="green",e.BLUE="blue"},634:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.startGame=e.setMusicOn=e.setSoundOn=e.setPrescaleTilesets=e.shouldPrescaleTilesets=e.setUseXbr=e.shouldUseXbr=e.isMusicOn=e.isSoundOn=void 0;var r=i(677),n=i(974),s=i(380),a=i(233),o=i(52),h=i(181),u=i(733),l=i(547),c=!0,d=!0,f=!1,p=!1;e.isSoundOn=function(){return c},e.isMusicOn=function(){return d},e.shouldUseXbr=function(){return p},e.setUseXbr=function(t){p=t},e.shouldPrescaleTilesets=function(){return f},e.setPrescaleTilesets=function(t){f=t},e.setSoundOn=function(t){c=t},e.setMusicOn=function(t){!t&&d&&(d=!1,a.SoundImpl.CURRENT_MUSIC&&a.SoundImpl.CURRENT_MUSIC.stop()),t&&!d&&(d=!0,a.SoundImpl.CURRENT_MUSIC&&a.SoundImpl.CURRENT_MUSIC.play(a.SoundImpl.CURRENT_MUSIC.volume))},e.startGame=function(t){(new m).start(t)};var m=function(){function t(){this.resources=[],this.lastFrame=0,this.inited=!1,this.mainZip=void 0,this.zipPercentLoaded=0,this.palette=void 0,this.lastWaiting="",this.wait=0,this.shiftPressed=!1,this.commandPressed=!1,this.controlPressed=!1}return t.prototype.isCommandPressed=function(){return this.commandPressed},t.prototype.isControlPressed=function(){return this.controlPressed},t.prototype.isShiftPressed=function(){return this.shiftPressed},t.prototype.getGraphics=function(){return this.graphics},t.prototype.resourcesRemaining=function(){return this.resources.filter((function(t){return!t.loaded})).length},t.prototype.resourcesTotal=function(){return this.resources.length},t.prototype.allResourcesLoaded=function(){for(var t=0,e=this.resources;t<e.length;t++){var i=e[t];if(!i.loaded)return this.lastWaiting!==i.name&&(this.lastWaiting&&console.log("[GUTE] Was waiting on: "+this.lastWaiting+" for "+this.wait+" frames"),this.lastWaiting=i.name,this.wait=0),this.wait++,!1}return this.lastWaiting&&(console.log("[GUTE] Was waiting on last one: "+this.lastWaiting+" for "+this.wait+" frames"),this.lastWaiting=void 0),!0},t.prototype.initResourcesOnFirstClick=function(){if(this.allResourcesLoaded()&&!this.inited){this.inited=!0;for(var t=0,e=this.resources;t<e.length;t++)e[t].initOnFirstClick()}},t.prototype.applyPalette=function(t){var e=this;return new Promise((function(i,r){e.loadText(t).then((function(t){e.palette=new l.Palette(t),i()}))}))},t.prototype.mouseMoveHandler=function(t,e,i){void 0===i&&(i=0),this.initResourcesOnFirstClick();var r=this.graphics.canvas;r.focus();var n=r.clientWidth,s=r.clientHeight;t=Math.floor(t/n*r.width),e=Math.floor(e/s*r.height),this.game.onMouseMove(this,t,e)},t.prototype.mouseWheelHandler=function(t){this.game.onMouseWheel(this,t)},t.prototype.mouseDownHandler=function(t,e,i){void 0===i&&(i=0),this.initResourcesOnFirstClick();var r=this.graphics.canvas;r.focus();var n=r.clientWidth,s=r.clientHeight;t=Math.floor(t/n*r.width),e=Math.floor(e/s*r.height),this.game.onMouseDown(this,t,e,i)},t.prototype.mouseUpHandler=function(t,e,i){void 0===i&&(i=0),this.initResourcesOnFirstClick();var r=this.graphics.canvas,n=r.clientWidth,s=r.clientHeight;t=Math.floor(t/n*r.width),e=Math.floor(e/s*r.height),this.game.onMouseUp(this,t,e,i)},t.prototype.keyDownHandler=function(t){this.initResourcesOnFirstClick(),this.game.onKeyDown(this,t)},t.prototype.keyUpHandler=function(t){this.game.onKeyUp(this,t)},t.prototype.start=function(t){var e=this;return this.game=t,this.graphics=new s.GraphicsImpl,this.graphics.canvas.addEventListener("touchstart",(function(t){try{if(t.target){var i=t.target.getBoundingClientRect(),r=t.targetTouches[0].pageX-i.left,n=t.targetTouches[0].pageY-i.top;e.lastTouch=t,e.mouseDownHandler(r,n),t.preventDefault(),t.stopPropagation()}}catch(t){console.log(t)}}),{passive:!1}),this.graphics.canvas.addEventListener("touchmove",(function(t){try{if(t.target){var i=t.target.getBoundingClientRect(),r=t.targetTouches[0].pageX-i.left,n=t.targetTouches[0].pageY-i.top;e.lastTouch=t,e.mouseMoveHandler(r,n),t.preventDefault(),t.stopPropagation()}}catch(t){console.log(t)}}),{passive:!1}),this.graphics.canvas.addEventListener("touchend",(function(t){try{if(t.target){var i=t.target.getBoundingClientRect();if(e.lastTouch){var r=e.lastTouch.targetTouches[0].pageX-i.left,n=e.lastTouch.targetTouches[0].pageY-i.top;e.mouseUpHandler(r,n)}else e.mouseUpHandler(0,0);t.preventDefault(),t.stopPropagation()}}catch(t){console.log(t)}}),{passive:!1}),window.addEventListener("contextmenu",(function(t){return t.stopPropagation(),t.preventDefault(),!1})),this.graphics.canvas.addEventListener("wheel",(function(t){try{e.mouseWheelHandler(t.deltaY)}catch(t){console.log(t)}})),this.graphics.canvas.addEventListener("mousedown",(function(t){try{e.shiftPressed=t.shiftKey,e.commandPressed=t.metaKey,e.controlPressed=t.ctrlKey,e.mouseDownHandler(t.offsetX,t.offsetY,t.button),t.preventDefault(),t.stopPropagation()}catch(t){console.log(t)}})),this.graphics.canvas.addEventListener("mousemove",(function(t){try{e.shiftPressed=t.shiftKey,e.commandPressed=t.metaKey,e.controlPressed=t.ctrlKey,e.mouseMoveHandler(t.offsetX,t.offsetY),t.preventDefault(),t.stopPropagation()}catch(t){console.log(t)}})),this.graphics.canvas.addEventListener("mouseup",(function(t){try{e.shiftPressed=t.shiftKey,e.commandPressed=t.metaKey,e.controlPressed=t.ctrlKey,e.mouseUpHandler(t.offsetX,t.offsetY,t.button),t.preventDefault(),t.stopPropagation()}catch(t){console.log(t)}})),window.addEventListener("keydown",(function(t){e.shiftPressed=t.shiftKey,e.commandPressed=t.metaKey,e.controlPressed=t.ctrlKey,e.keyDownHandler(t.code)})),window.addEventListener("keyup",(function(t){e.shiftPressed=t.shiftKey,e.commandPressed=t.metaKey,e.controlPressed=t.ctrlKey,e.keyUpHandler(t.code)})),t.init(this),requestAnimationFrame((function(){e.loop()})),this},t.prototype.loop=function(){var t=this,e=(new Date).getTime(),i=0;0!==this.lastFrame&&(i=e-this.lastFrame),this.lastFrame=e,this.graphics.applyFont(),this.game.update(this,i),this.game.render(this,this.graphics),requestAnimationFrame((function(){t.loop()}))},t.prototype.getZipProgress=function(){return this.zipPercentLoaded},t.prototype.loadZip=function(t){var e=this;return new Promise((function(i,r){var n=new XMLHttpRequest;n.open("GET",t,!0),n.responseType="arraybuffer",n.onprogress=function(t){e.zipPercentLoaded=t.loaded/t.total},n.onload=function(t){u.loadAsync(n.response).then((function(t){e.mainZip=t,i()}))},n.onerror=function(t){r(t)},n.send()}))},t.prototype.loadMusic=function(t){var e=void 0;t.indexOf("_/")>=0&&(e=this.mainZip.file(t.substring(t.indexOf("_/"))).async("arraybuffer"));var i=new a.SoundImpl(t,!0,e);return this.allResourcesLoaded()||this.resources.push(i),i},t.prototype.loadSound=function(t){var e=void 0;t.indexOf("_/")>=0&&(e=this.mainZip.file(t.substring(t.indexOf("_/"))).async("arraybuffer"));var i=new a.SoundImpl(t,!1,e);return this.resources.push(i),i},t.prototype.toPotentialZipLoadBlob=function(t){if(t.indexOf("_/")>=0)return this.mainZip.file(t.substring(t.indexOf("_/"))).async("blob")},t.prototype.toPotentialZipLoad=function(t){if(t.indexOf("_/")>=0)return this.mainZip.file(t.substring(t.indexOf("_/"))).async("base64")},t.prototype.loadBitmap=function(t){var e=new r.BitmapImpl(t,this.toPotentialZipLoad(t),this.palette);return this.resources.push(e),e},t.prototype.loadScaledTileset=function(t,e,i,r){var n=new o.TilesetImpl(t,this.toPotentialZipLoadBlob(t),e,i,r,this.palette);return this.resources.push(n),n},t.prototype.loadTileset=function(t,e,i){var r=new o.TilesetImpl(t,this.toPotentialZipLoadBlob(t),e,i,1,this.palette);return this.resources.push(r),r},t.prototype.loadFont=function(t,e){return new n.FontImpl(t,e)},t.prototype.loadLDTK=function(t,e){var i=this,r=new h.LDTKWorld;return this.resources.push(r),r.load(t,(function(t){return i.loadJson(e(t),!0)}))},t.prototype.loadText=function(t){var e=this;return new Promise((function(i,r){if(t.indexOf("_/")>=0)return e.mainZip.file(t.substring(t.indexOf("_/"))).async("string").then((function(t){i(t)}));var n=new XMLHttpRequest;n.open("GET",t,!0),n.onload=function(t){n.responseText&&i(n.responseText)},n.onerror=function(t){r(t)},n.send()}))},t.prototype.loadJson=function(t,e){var i=this;return void 0===e&&(e=!1),new Promise((function(e,r){if(t.indexOf("_/")>=0)return t=t.substring(t.indexOf("_/")),i.mainZip.file(t).async("string").then((function(t){var i=JSON.parse(t);e(i)}));if(t.startsWith("data:application/json;utf8,"))e(JSON.parse(t.substring(t.indexOf(",")+1)));else{var n=new XMLHttpRequest;n.open("GET",t,!0),n.onload=function(t){if(n.responseText){var i=n.responseText;e(JSON.parse(i))}},n.onerror=function(t){r(t)},n.send()}}))},t.prototype.isRunningStandalone=function(){return!0===window.navigator.standalone||window.matchMedia("(display-mode: standalone)").matches},t.prototype.isTablet=function(){return!(this.isPhone()||!this.isIOS())||/(ipad|tablet|(android(?!.*mobile))|(windows(?!.*phone)(.*touch))|kindle|playbook|silk|(puffin(?!.*(IP|AP|WP))))/.test(navigator.userAgent.toLowerCase())},t.prototype.isMobile=function(){return this.isIOS()||this.isAndroid()},t.prototype.isAndroid=function(){return null!=navigator.userAgent.match(/Android/i)},t.prototype.isIOS=function(){return["iPad Simulator","iPhone Simulator","iPod Simulator","iPad","iPhone","iPod"].indexOf(navigator.platform)>=0||navigator.userAgent.includes("Mac")&&"ontouchend"in document},t.prototype.isPhone=function(){return this.isIOS()&&window.matchMedia("only screen and (max-width: 760px)").matches},t.prototype.setSoundVolume=function(t){a.SoundImpl.setSoundVolume(t)},t.prototype.getSoundVolume=function(){return a.SoundImpl.getSoundVolume()},t.prototype.setMusicVolume=function(t){a.SoundImpl.setMusicVolume(t)},t.prototype.getMusicVolume=function(){return a.SoundImpl.getMusicVolume()},t}()},705:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Keys=void 0;var i=function(){function t(){}return t.ESCAPE_KEY="Escape",t.ENTER_KEY="Enter",t.LEFT_KEY="ArrowLeft",t.RIGHT_KEY="ArrowRight",t.UP_KEY="ArrowUp",t.DOWN_KEY="ArrowDown",t.SPACE_KEY=" ",t.S_KEY="s",t.M_KEY="m",t.A_KEY="a",t.W_KEY="w",t.D_KEY="d",t.CONTROL_KEY="Control",t.META_KEY="Meta",t.ALT_KEY="Alt",t.TAB_KEY="Tab",t}();e.Keys=i},403:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.SoundScape=e.SoundEasing=void 0;var r,n=i(233);!function(t){t[t.Linear=0]="Linear",t[t.Quadratic=1]="Quadratic",t[t.Cubic=2]="Cubic"}(r=e.SoundEasing||(e.SoundEasing={}));var s=function(){function t(){this._soundVolume=1,this.points=[],this.listenerX=0,this.listenerY=0,this.categories={}}return t.prototype.category=function(t,e,i,r,n){return this.categories[t]={name:t,volume:e,maxDistance2:i*i,scale2:r*r,easing:n},this},Object.defineProperty(t.prototype,"soundVolume",{get:function(){return this._soundVolume},set:function(t){this._soundVolume=t},enumerable:!1,configurable:!0}),t.prototype.moveTo=function(t,e){this.listenerX=t,this.listenerY=e,this.updateVolumes()},t.prototype.clear=function(){for(var t=0,e=this.points;t<e.length;t++)e[t].source.stop();this.points=[]},t.prototype.play=function(t,e,i,r,s){var a=this;if(n.AUDIO_CONTEXT){var o=t,h=n.AUDIO_CONTEXT.createBufferSource();h.buffer=o.buffer;var u=n.AUDIO_CONTEXT.createGain();h.connect(u),u.connect(n.AUDIO_CONTEXT.destination);var l={x:r,y:s,volume:e,source:h,gain:u,category:i};u.gain.value=this.calculateVolume(l),this.points.push(l),h.addEventListener("ended",(function(t){var e=a.points.indexOf(l);a.points.splice(e,1)})),h.start()}},t.prototype.updateVolumes=function(){for(var t=0,e=this.points;t<e.length;t++){var i=e[t],r=this.calculateVolume(i);i.gain.gain.linearRampToValueAtTime(r,n.AUDIO_CONTEXT.currentTime)}},t.prototype.calculateVolume=function(t){var e=this.categories[t.category];if(void 0===e)return t.volume*this._soundVolume;if(void 0===t.x||void 0===t.y)return t.volume*e.volume*this._soundVolume;var i=t.x-this.listenerX,n=t.y-this.listenerY,s=(i*i+n*n)/e.scale2,a=Math.max(1-s/e.maxDistance2,0);switch(e.easing){case r.Linear:return this._soundVolume*t.volume*e.volume*a;case r.Quadratic:return this._soundVolume*t.volume*e.volume*a*a;case r.Cubic:return this._soundVolume*t.volume*e.volume*a*a*a}},t}();e.SoundScape=s},677:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.BitmapImpl=void 0;var i=function(){function t(t,e,i){var r=this;void 0===i&&(i=void 0),this.width=0,this.height=0,this.loaded=!1,this.name=t,this.image=new Image,this.image.onload=function(){r.width=r.image.width,r.height=r.image.height,i?i.adjustImage(r.image).then((function(t){r.image=t,r.loaded=!0})):r.loaded=!0},e?e.then((function(e){r.image.src="data:"+t.substring(t.length-3)+";base64,"+e})):this.image.src=t}return t.prototype.draw=function(t,e,i){t.drawImage(this.image,e,i)},t.prototype.drawScaled=function(t,e,i,r,n){t.drawImage(this.image,e,i,r,n)},t.prototype.initOnFirstClick=function(){},t}();e.BitmapImpl=i},974:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.FontImpl=void 0;var i=function(){function t(t,e){this.name=e;var i=document.createElement("style");i.innerHTML="@font-face { font-family: "+e+"; src: url('"+t+"'); } body { font-family: "+e+"; }",document.head.appendChild(i)}return t.prototype.apply=function(t,e){t.font=e+"px "+this.name},t}();e.FontImpl=i},380:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.GraphicsImpl=void 0;var r=i(974),n="undefined"!=typeof InstallTrigger,s=function(){function t(t,e){this.canvas=t,this.ctx=e}return t.prototype.getWidth=function(){return this.canvas.width},t.prototype.getHeight=function(){return this.canvas.height},t.prototype.setDimension=function(t,e){this.canvas.width=t,this.canvas.height=e},t}(),a=function(){function t(t){this.name="copy",this.canvas=t,this.width=t.width,this.height=t.height,this.loaded=!0}return t.prototype.draw=function(t,e,i){t.drawImage(this.canvas,e,i)},t.prototype.drawScaled=function(t,e,i,r,n){t.drawImage(this.canvas,e,i,r,n)},t.prototype.getDrawable=function(){return this.canvas},t.prototype.initOnFirstClick=function(){},t}(),o=function(){function t(){this.fontSize=20,this.offscreen=null,this.canvas=document.getElementById("gamecanvas"),this.ctx=this.canvas.getContext("2d",{alpha:!1}),this.mainCtx=this.ctx,this.ctx.webkitImageSmoothingEnabled=!1,this.ctx.imageSmoothingEnabled=!1,this.canvas.style.fontSmooth="never",this.canvas.style.webkitFontSmoothing="none",this.canvas.style.imageRendering=n?"crisp-edges":"pixelated",this.font=new r.FontImpl("font.ttf","GuteDefault"),this.font&&this.applyFont()}return t.prototype.smooth=function(){this.ctx.webkitImageSmoothingEnabled=!0,this.ctx.imageSmoothingEnabled=!0,this.canvas.style.fontSmooth="initial",this.canvas.style.webkitFontSmoothing="initial",this.canvas.style.imageRendering="initial"},t.prototype.getTransform=function(){return this.ctx.getTransform()},t.prototype.clear=function(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)},t.prototype.clip=function(t,e,i,r){var n=new Path2D;n.rect(t,e,i,r),this.ctx.clip(n)},t.prototype.createOffscreen=function(){var t=document.createElement("canvas");t.width=this.getWidth(),t.height=this.getHeight();var e=t.getContext("2d");if(e)return e.webkitImageSmoothingEnabled=!1,e.imageSmoothingEnabled=!1,t.style.fontSmooth="never",t.style.webkitFontSmoothing="none",new s(t,e);throw new Error("Unable to create offscreen canvas")},t.prototype.getOffscreen=function(){return this.offscreen},t.prototype.drawToOffscreen=function(t){this.ctx=t?t.ctx:this.mainCtx,this.offscreen=t},t.prototype.drawOffscreen=function(t){this.ctx.webkitImageSmoothingEnabled=!1,this.ctx.imageSmoothingEnabled=!1,this.ctx.drawImage(t.canvas,0,0)},t.prototype.drawScaledOffscreen=function(t,e,i,r,n){this.ctx.webkitImageSmoothingEnabled=!1,this.ctx.imageSmoothingEnabled=!1,this.ctx.drawImage(t.canvas,e,i,r,n)},t.prototype.clearRect=function(t,e,i,r){this.ctx.clearRect(t,e,i,r)},t.prototype.fitScreen=function(t){var e=Math.max(document.documentElement.clientWidth,window.innerWidth||0),i=Math.max(document.documentElement.clientHeight,window.innerHeight||0),r=Math.floor(e/t)*t,n=Math.floor(i/t)*t,s=r/t,a=n/t;this.canvas.style.position="absolute",this.canvas.style.top="0px",this.canvas.style.left="0px",this.canvas.width=s,this.canvas.height=a,this.canvas.style.width=r+"px",this.canvas.style.height=n+"px"},t.prototype.setAlpha=function(t){this.ctx.globalAlpha=t},t.prototype.copy=function(){var t,e=document.createElement("canvas");return e.width=this.getWidth(),e.height=this.getHeight(),null===(t=e.getContext("2d"))||void 0===t||t.drawImage(this.canvas,0,0),new a(e)},t.prototype.getWidth=function(){return this.canvas.width},t.prototype.getHeight=function(){return this.canvas.height},t.prototype.push=function(){this.ctx.save()},t.prototype.pop=function(){this.ctx.restore()},t.prototype.translate=function(t,e){this.ctx.translate(t,e)},t.prototype.scale=function(t,e){this.ctx.scale(t,e)},t.prototype.applyFont=function(){this.font.apply(this.ctx,this.fontSize)},t.prototype.setFont=function(t){this.font=t,this.applyFont()},t.prototype.setFontSize=function(t){this.fontSize=t,this.applyFont()},t.prototype.getStringWidth=function(t){return this.ctx.measureText(t).width},t.prototype.drawString=function(t,e,i,r){this.ctx.fillStyle=r,this.ctx.fillText(i,t,e)},t.prototype.setComposite=function(t){this.ctx.globalCompositeOperation=t},t.prototype.drawCircle=function(t,e,i,r,n){this.ctx.strokeStyle=r,this.ctx.lineWidth=n,this.ctx.beginPath(),this.ctx.arc(t,e,i,0,2*Math.PI),this.ctx.stroke()},t.prototype.fillCircle=function(t,e,i,r){this.ctx.fillStyle=r,this.ctx.beginPath(),this.ctx.arc(t,e,i,0,2*Math.PI),this.ctx.fill()},t.prototype.fillRect=function(t,e,i,r,n){this.ctx.fillStyle=n,this.ctx.fillRect(t,e,i,r)},t.prototype.setLineDash=function(t){this.ctx.setLineDash(t)},t.prototype.drawLine=function(t,e,i,r,n,s){void 0===s&&(s=1),this.ctx.strokeStyle=n,this.ctx.lineWidth=s,this.ctx.moveTo(t,e),this.ctx.lineTo(i,r),this.ctx.stroke()},t.prototype.drawBitmap=function(t,e,i){i&&(this.ctx.imageSmoothingEnabled=!1,this.ctx.webkitImageSmoothingEnabled=!1,i.draw(this.ctx,t,e))},t.prototype.drawScaledBitmap=function(t,e,i,r,n){n&&(this.ctx.imageSmoothingEnabled=!1,this.ctx.webkitImageSmoothingEnabled=!1,n.drawScaled(this.ctx,t,e,i,r))},t}();e.GraphicsImpl=o},547:(t,e)=>{"use strict";function i(t){var e=parseInt(t,16);return{r:e>>16&255,g:e>>8&255,b:255&e}}function r(t){var e,i,r,n=t.r/255,s=t.g/255,a=t.b/255;return i=(.2126*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)+.7152*(s=s>.04045?Math.pow((s+.055)/1.055,2.4):s/12.92)+.0722*(a=a>.04045?Math.pow((a+.055)/1.055,2.4):a/12.92))/1,r=(.0193*n+.1192*s+.9505*a)/1.08883,e=(e=(.4124*n+.3576*s+.1805*a)/.95047)>.008856?Math.pow(e,1/3):7.787*e+16/116,[116*(i=i>.008856?Math.pow(i,1/3):7.787*i+16/116)-16,500*(e-i),200*(i-(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116))]}Object.defineProperty(e,"__esModule",{value:!0}),e.Palette=void 0;var n=function(){function t(t){this.cols=[],this.mapping={};for(var e=0,r=t.split("\n");e<r.length;e++){var n=r[e];this.cols.push(i(n))}}return t.prototype.findBestMatch=function(t,e,i){for(var n,s,a,o,h,u,l,c,d,f,p,m,g,_={r:t,g:e,b:i},v=this.cols[0],y=1e3,w=0,b=this.cols;w<b.length;w++){var x=b[w],k=(n=_,void 0,void 0,void 0,void 0,void 0,void 0,void 0,d=void 0,void 0,void 0,void 0,void 0,s=r(x),a=r(n),o=s[0]-a[0],h=s[1]-a[1],u=s[2]-a[2],(g=(f=o/1)*f+(p=(c=(l=Math.sqrt(s[1]*s[1]+s[2]*s[2]))-Math.sqrt(a[1]*a[1]+a[2]*a[2]))/(1+.045*l))*p+(m=(d=(d=h*h+u*u-c*c)<0?0:Math.sqrt(d))/(1+.015*l))*m)<0?0:Math.sqrt(g));k<y&&(y=k,v=x)}return v},t.prototype.adjustImage=function(t){var e=this;return new Promise((function(i,r){var n=document.createElement("canvas");n.width=t.width,n.height=t.height;var s=n.getContext("2d");if(s){s.drawImage(t,0,0);for(var a=s.getImageData(0,0,t.width,t.height),o=0;o<a.data.length;o+=4){a.data[o];var h=a.data[o],u=a.data[o+1],l=a.data[o+2],c=h|65280&u<<8|16711680&l<<16,d=e.mapping[c];d||(d=e.findBestMatch(h,u,l),e.mapping[c]=d),a.data[o]=d.r,a.data[o+1]=d.g,a.data[o+2]=d.b}s.putImageData(a,0,0);var f=new Image;f.onload=function(){i(f)},f.src=n.toDataURL()}else r("Failure to create context")}))},t}();e.Palette=n},233:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.SoundImpl=e.AUDIO_CONTEXT=void 0;var r,n=i(634);"undefined"!=typeof window&&(r=window.AudioContext||window.webkitAudioContext),"undefined"!=typeof document&&document.addEventListener("visibilitychange",(function(){if(n.isMusicOn()&&s.CURRENT_MUSIC)if(document.hidden){s.CURRENT_MUSIC.stop();try{e.AUDIO_CONTEXT.suspend().catch((function(t){console.log("Suspend audio context failed"),console.error(t)}))}catch(t){console.log("Suspend audio context failed"),console.error(t)}}else{try{e.AUDIO_CONTEXT.resume().catch((function(t){console.log("Resume audio context failed"),console.error(t)}))}catch(t){console.log("Resume audio context failed"),console.error(t)}setTimeout((function(){s.CURRENT_MUSIC.play(s.CURRENT_MUSIC.volume)}),500)}if(n.isSoundOn())for(var t=0,i=s.CURRENT_LOOPS;t<i.length;t++){var r=i[t];document.hidden?r.stop(!1):r.play(r.volume)}}));var s=function(){function t(t,e,i){var r=this;if(this.loaded=!1,this.volume=1,this.music=!1,this.looped=!1,this.name=t,this.url=t,this.music=e,i)this.loaded=!0,i.then((function(t){r.data=t,r.tryLoad()}));else{var n=new XMLHttpRequest;n.open("GET",t,!0),n.responseType="arraybuffer",n.onload=function(t){var e=n.response;e&&(r.data=e,r.tryLoad())},n.send()}this.loaded=!0}return t.setSoundVolume=function(i){this.soundVolume=i;for(var r=0,n=this.CURRENT_LOOPS;r<n.length;r++){var s=n[r];s.gain.gain.linearRampToValueAtTime(s.volume*t.soundVolume,e.AUDIO_CONTEXT.currentTime+.25)}},t.getSoundVolume=function(){return this.soundVolume},t.setMusicVolume=function(i){this.musicVolume=i,t.CURRENT_MUSIC&&t.CURRENT_MUSIC.gain&&t.CURRENT_MUSIC.gain.gain.linearRampToValueAtTime(t.CURRENT_MUSIC.volume*t.musicVolume,e.AUDIO_CONTEXT.currentTime+.25)},t.getMusicVolume=function(){return this.musicVolume},t.prototype.tryLoad=function(){var i=this;if(e.AUDIO_CONTEXT&&this.data)try{var r=e.AUDIO_CONTEXT.decodeAudioData(this.data,(function(e){i.buffer=e,t.CURRENT_MUSIC===i&&(t.CURRENT_MUSIC=null,i.play(i.volume))}),(function(t){console.log("Failed to load: "+i.url)}));r&&r.then((function(){})).catch((function(t){}))}catch(t){console.log("decodeAudioData exception on loading "+this.url)}},t.prototype.confirmAudioContext=function(){try{e.AUDIO_CONTEXT.resume().catch((function(t){console.log("Resume audio context failed"),console.error(t)}))}catch(t){console.log("Resume audio context failed")}},t.prototype.initOnFirstClick=function(){if(!e.AUDIO_CONTEXT)try{e.AUDIO_CONTEXT=new r,e.AUDIO_CONTEXT.resume().catch((function(t){console.log("Resume audio context failed"),console.error(t)}))}catch(t){console.log("Resume audio context failed")}this.tryLoad()},t.prototype.play=function(i,r){if(void 0===r&&(r=!1),this.confirmAudioContext(),this.volume=i,this.buffer){if(this.music){if(t.CURRENT_MUSIC!==this&&(t.CURRENT_MUSIC&&t.CURRENT_MUSIC.stop(),t.CURRENT_MUSIC=this),this.source)return}else if(document.hidden)return;this.music&&!n.isMusicOn()||(this.music||n.isSoundOn())&&(this.source=e.AUDIO_CONTEXT.createBufferSource(),this.source.buffer=this.buffer,this.gain=e.AUDIO_CONTEXT.createGain(),this.source.connect(this.gain),this.gain.connect(e.AUDIO_CONTEXT.destination),this.looped=!1,(this.music||r)&&(this.gain.gain.value=0,this.source.loop=!0,this.looped=!0),this.source.start(0),this.music||r?this.gain.gain.linearRampToValueAtTime(i*(r?t.soundVolume:t.musicVolume),e.AUDIO_CONTEXT.currentTime+2):this.gain.gain.value=i*t.soundVolume,r&&t.CURRENT_LOOPS.push(this))}else this.music&&(t.CURRENT_MUSIC&&t.CURRENT_MUSIC.stop(),t.CURRENT_MUSIC=this)},t.prototype.stop=function(i){var r=this;if(void 0===i&&(i=!0),this.source){if(this.looped){this.gain.gain.linearRampToValueAtTime(0,e.AUDIO_CONTEXT.currentTime+3);var n=this.source;setTimeout((function(){n.stop()}),4e3)}else this.source.stop();this.source=null}if(i){var s=t.CURRENT_LOOPS.findIndex((function(t){return t===r}));s>=0&&t.CURRENT_LOOPS.splice(s,1)}},t.CURRENT_LOOPS=[],t.soundVolume=1,t.musicVolume=1,t}();e.SoundImpl=s},52:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TilesetImpl=void 0;var r=i(634),n=i(418),s=function(){function t(t,e,i,r,n,s){this.name="tile",this.cached={},this.image=t,this.width=r,this.height=n,this.x=e,this.y=i,this.scale=s,this.loaded=!0}return t.prototype.draw=function(t,e,i){if(r.shouldPrescaleTilesets()||!r.shouldUseXbr()||2!==this.scale&&3!==this.scale)t.drawImage(this.image,this.x,this.y,this.width,this.height,e,i,this.width*this.scale,this.height*this.scale);else{if(!this.cached[this.scale]){this.cached[this.scale]=document.createElement("canvas"),this.cached[this.scale].width=this.width,this.cached[this.scale].height=this.height;var s=this.cached[this.scale].getContext("2d");s.drawImage(this.image,this.x,this.y,this.width,this.height,0,0,this.width,this.height);var a=s.getImageData(0,0,this.width,this.height),o=new Uint32Array(a.data.buffer),h=2===this.scale?n.xbr2x(o,this.width,this.height):n.xbr3x(o,this.width,this.height),u=this.width*this.scale,l=this.height*this.scale;this.cached[this.scale].width=u,this.cached[this.scale].height=l;var c=new ImageData(new Uint8ClampedArray(h.buffer),this.cached[this.scale].width,this.cached[this.scale].height);s.putImageData(c,0,0)}t.drawImage(this.cached[this.scale],e,i)}},t.prototype.drawScaled=function(t,e,i,s,a){var o=Math.min(Math.floor(s/this.width),Math.floor(a/this.height));if(r.shouldPrescaleTilesets()||!r.shouldUseXbr()||2!==o&&3!==o)t.drawImage(this.image,this.x,this.y,this.width,this.height,e,i,s,a);else{if(!this.cached[o]){this.cached[o]=document.createElement("canvas"),this.cached[o].width=this.width,this.cached[o].height=this.height;var h=this.cached[o].getContext("2d");h.drawImage(this.image,this.x,this.y,this.width,this.height,0,0,this.width,this.height);var u=h.getImageData(0,0,this.width,this.height),l=new Uint32Array(u.data.buffer),c=2===o?n.xbr2x(l,this.width,this.height):n.xbr3x(l,this.width,this.height),d=this.width*o,f=this.height*o;this.cached[o].width=d,this.cached[o].height=f;var p=new ImageData(new Uint8ClampedArray(c.buffer),this.cached[o].width,this.cached[o].height);h.putImageData(p,0,0)}t.drawImage(this.cached[o],e,i,s,a)}},t.prototype.initOnFirstClick=function(){},t}(),a=function(){function t(t,e,i,a,o,h){var u=this;void 0===o&&(o=1),void 0===h&&(h=void 0),this.loaded=!1,this.bitmaps=[],this.scanline=0,this.tileCount=0,this.tints={},this.tintTiles={},this.onLoaded=function(){},this.tileWidth=this.originalTileWidth=i,this.tileHeight=this.originalTileHeight=a,this.scale=o,this.name=t,this.image=new Image,this.image.onload=function(){if(r.shouldPrescaleTilesets()&&1!==o){var t=document.createElement("canvas");if(r.shouldUseXbr()){(c=t.getContext("2d")).drawImage(u.image,0,0);var e=c.getImageData(0,0,u.image.width,u.image.height),i=new Uint32Array(e.data.buffer),a=2===o?n.xbr2x(i,u.image.width,u.image.height):n.xbr3x(i,u.image.width,u.image.height);t.width=u.image.width*o,t.height=u.image.height*o;var l=new ImageData(new Uint8ClampedArray(a.buffer),t.width,t.height);c.putImageData(l,0,0)}else{var c;t.width=u.image.width*o,t.height=u.image.height*o,(c=t.getContext("2d")).imageSmoothingEnabled=!1,c.webkitImageSmoothingEnabled=!1,null==c||c.drawImage(u.image,0,0,t.width,t.height)}u.image=t,u.tileWidth*=o,u.tileHeight*=o,u.originalTileWidth*=o,u.originalTileHeight*=o,u.scale=1,o=1}u.scanline=Math.floor(u.image.width/u.tileWidth);var d=Math.floor(u.image.height/u.tileHeight);if(u.tileCount=d*u.scanline,h)h.adjustImage(u.image).then((function(t){u.image=t;for(var e=0;e<d;e++)for(var i=0;i<u.scanline;i++)u.bitmaps.push(new s(u.image,i*u.tileWidth,e*u.tileHeight,u.tileWidth,u.tileHeight,o));u.tileWidth*=o,u.tileHeight*=o,u.onLoaded(),u.loaded=!0}));else{for(var f=0;f<d;f++)for(var p=0;p<u.scanline;p++)u.bitmaps.push(new s(u.image,p*u.tileWidth,f*u.tileHeight,u.tileWidth,u.tileHeight,o));u.tileWidth*=o,u.tileHeight*=o,u.onLoaded(),u.loaded=!0}},e?e.then((function(t){var e=window.URL||window.webkitURL;u.image.src=e.createObjectURL(t)})):this.image.src=t}return t.prototype.getTilesAcross=function(){return this.scanline},t.prototype.getTileWidth=function(){return this.tileWidth},t.prototype.getTileHeight=function(){return this.tileHeight},t.prototype.getTileCount=function(){return this.tileCount},t.prototype.initOnFirstClick=function(){},t.prototype.getTile=function(t){return this.bitmaps[t]},t.prototype.getShadedTile=function(t,e,i){var r=this.tintTiles[e];r||(r=this.tintTiles[e]=[]);var n=r[t];if(!n){var a=t%this.scanline,o=Math.floor(t/this.scanline),h=this.tints[e];if(!h){var u=document.createElement("canvas");u.width=this.image.width,u.height=this.image.height;var l=u.getContext("2d");if(l){l.drawImage(this.image,0,0);for(var c=l.getImageData(0,0,u.width,u.height),d=0;d<c.data.length;d+=4)c.data[d]*=i,c.data[d+1]*=i,c.data[d+2]*=i;l.putImageData(c,0,0)}(h=new Image).src=u.toDataURL(),this.tints[e]=h}n=r[t]=new s(h,a*this.originalTileWidth,o*this.originalTileHeight,this.originalTileWidth,this.originalTileHeight,this.scale)}return n},t.prototype.getTintedTile=function(t,e,i){var r=this.tintTiles[e];r||(r=this.tintTiles[e]=[]);var n=r[t];if(!n){var a=t%this.scanline,o=Math.floor(t/this.scanline),h=this.tints[e];if(!h){var u=document.createElement("canvas");u.width=this.image.width,u.height=this.image.height;var l=u.getContext("2d");if(l){l.drawImage(this.image,0,0);for(var c=l.getImageData(0,0,u.width,u.height),d=0;d<c.data.length;d+=4){var f=(c.data[d]+c.data[d+1]+c.data[d+2])/3;c.data[d]=Math.floor(f*i[0]),c.data[d+1]=Math.floor(f*i[1]),c.data[d+2]=Math.floor(f*i[2])}l.putImageData(c,0,0)}(h=new Image).src=u.toDataURL(),this.tints[e]=h}n=r[t]=new s(h,a*this.originalTileWidth,o*this.originalTileHeight,this.originalTileWidth,this.originalTileHeight,this.scale)}return n},t.prototype.modify=function(t){var e=document.createElement("canvas");e.width=this.image.width,e.height=this.image.height;var i=e.getContext("2d");if(i){i.drawImage(this.image,0,0);var r=i.getImageData(0,0,e.width,e.height);t(r),i.putImageData(r,0,0)}this.image=new Image,this.image.src=e.toDataURL();for(var n=0,s=this.bitmaps;n<s.length;n++)s[n].image=this.image;return this},t.prototype.getBlockColorTile=function(t,e,i){var r=this.tintTiles[e];r||(r=this.tintTiles[e]=[]);var n=r[t];if(!n){var a=t%this.scanline,o=Math.floor(t/this.scanline),h=this.tints[e];if(!h){var u=document.createElement("canvas");u.width=this.image.width,u.height=this.image.height;var l=u.getContext("2d");if(l){l.drawImage(this.image,0,0);for(var c=l.getImageData(0,0,u.width,u.height),d=0;d<c.data.length;d+=4)c.data[d]=Math.floor(255*i[0]),c.data[d+1]=Math.floor(255*i[1]),c.data[d+2]=Math.floor(255*i[2]),c.data[d+3]=Math.floor(c.data[d+3]*i[3]);l.putImageData(c,0,0)}(h=new Image).src=u.toDataURL(),this.tints[e]=h}n=r[t]=new s(h,a*this.originalTileWidth,o*this.originalTileHeight,this.originalTileWidth,this.originalTileHeight,this.scale)}return n},t}();e.TilesetImpl=a},883:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.AStarPathFinder=void 0;var r=i(30),n=i(482),s=function(){function t(t){this.objectPool=[],this.openList=[],this.parentList=[],this.open=[],this.closed=[],this.pathFindCounter=1,this.setMap(t)}return t.prototype.setMap=function(t){this.width=t.getMapWidth(),this.height=t.getMapHeight(),this.map=t,this.open||(this.open=new Array),this.closed||(this.closed=new Array);for(var e=0;e<this.width*this.height;e++){var i=this.open[e],r=this.closed[e];if(!i){this.open[e]=i=new Array;for(var n=0;n<5;n++)i.push(0)}if(!r)for(this.closed[e]=r=new Array,n=0;n<5;n++)r.push(0);for(n=0;n<5;n++)i[n]=0,r[n]=0}},t.prototype.clear=function(){for(var t=0,e=this.openList;t<e.length;t++){var i=e[t];this.objectPool.push(i)}for(var r=0,n=this.parentList;r<n.length;r++)i=n[r],this.objectPool.push(i);this.parentList=[],this.openList=[],this.pathFindCounter++},t.prototype.generatePath=function(t){for(var e=t,i=new n.Path;null!=e;)i.add(e.x,e.y),e=e.parent;return i},t.prototype.blocked=function(t,e,i,r){return!this.map.locationDiscovered(i,r)||this.map.blocked(this.mover,null,t,e,i,r,this.atTarget(i,r))},t.prototype.atTarget=function(t,e){for(var i=0;i<this.tx.length;i++){var r=this.tx[i],n=this.ty[i];if(r>=t&&r<t+this.mover.getTilesWidth()&&n>=e&&n<e+this.mover.getTilesHeight())return!0}return!1},t.prototype.findPath=function(t,e,i,r,n,s){e=Math.floor(e),i=Math.floor(i),this.max=s,this.mover=t,this.tx=[],this.ty=[],this.cx=e+r/2,this.cy=i+n/2;for(var a=0;a<r;a++)this.tx.push(e+a),this.ty.push(i),n>1&&(this.tx.push(e+a),this.ty.push(i+n-1));if(n>2)for(a=1;a<n-1;a++)this.tx.push(e),this.ty.push(i+a),r>1&&(this.tx.push(e+r-1),this.ty.push(i+a));if(0===this.tx.length)return null;for(this.clear(),this.addLocation(null,Math.floor(t.getTileMapX()),Math.floor(t.getTileMapY()));this.openList.length>0;){var o=this.openList[0];if(this.openList.splice(0,1),this.atTarget(o.x,o.y))return this.generatePath(o);this.addLocation(o,o.x+1,o.y),this.addLocation(o,o.x-1,o.y),this.addLocation(o,o.x,o.y+1),this.addLocation(o,o.x,o.y-1),this.parentList.push(o)}return null},t.prototype.addLocation=function(e,i,r){var n=i=Math.floor(i),s=r=Math.floor(r),a=t.NONE;if(null!=e&&(n=e.x,(s=e.y)+1==r&&(a=t.NORTH_TO_SOUTH),s-1==r&&(a=t.SOUTH_TO_NORTH),n+1==i&&(a=t.WEST_TO_EAST),n-1==i&&(a=t.EAST_TO_WEST)),this.map.validLocation(i,r)&&this.open[i+r*this.width][a]!=this.pathFindCounter&&this.closed[i+r*this.width][a]!=this.pathFindCounter)if(null!=e&&e.depth>this.max)this.closed[i+r*this.width][a]=this.pathFindCounter;else if(this.blocked(n,s,i,r))this.closed[i+r*this.width][a]=this.pathFindCounter;else{this.open[i+r*this.width][a]=this.pathFindCounter;var o=Math.abs(this.cx-i),h=Math.abs(this.cy-r),u=this.createMapNode(i,r,e,o+h),l=t.binarySearch(this.openList,u.h);this.openList.splice(l,0,u)}},t.binarySearch=function(t,e){for(var i=-1,r=t.length;1+i<r;){var n=i+(r-i>>1);t[n].h>e?r=n:i=n}return r},t.prototype.createMapNode=function(t,e,i,n){if(0==this.objectPool.length){var s=new r.MapNode;this.objectPool.push(s)}var a=this.objectPool[0];return this.objectPool.splice(0,1),a.x=t,a.y=e,a.parent=i,a.depth=null!=i?i.depth+1:0,a.h=n+a.depth,a},t.NORTH_TO_SOUTH=0,t.EAST_TO_WEST=1,t.SOUTH_TO_NORTH=2,t.WEST_TO_EAST=3,t.NONE=4,t}();e.AStarPathFinder=s},30:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.MapNode=void 0;e.MapNode=function(){}},482:(t,e,i)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Path=void 0;var r=i(844),n=function(){function t(){this.steps=new Array}return t.prototype.add=function(t,e){this.steps.splice(0,0,new r.Step(t,e))},t.prototype.getLastStep=function(){return this.steps[this.steps.length-1]},t.prototype.pop=function(){var t=this.steps[0];return this.steps.splice(0,1),t},t.prototype.copy=function(){for(var e=new t,i=0,n=this.steps;i<n.length;i++){var s=n[i];e.steps.push(new r.Step(s.x,s.y))}return 0===e.steps.length&&console.log("Created copy of path with zero steps: "),e},t}();e.Path=n},844:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Step=void 0;e.Step=function(t,e){this.x=t,this.y=e}},181:function(t,e,i){"use strict";var r,n=this&&this.__extends||(r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])})(t,e)},function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function i(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)});Object.defineProperty(e,"__esModule",{value:!0}),e.LDTKWorld=void 0;var s=i(963),a=i(850),o=i(7),h=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.name="world",e.tilesets=[],e}return n(e,t),e.prototype.initOnFirstClick=function(){},e.prototype.load=function(t,i){var r=this;return this.name=t,i(t).then((function(t){var n=[],s={};r.gridSize=t.defaultGridSize;var a=t.defs.tilesets[0];r.tilesets=t.defs.tilesets,r.tilesetScanline=a.pxWid/a.tileGridSize,r.tilesetSize=a.tileGridSize;var h=t.levels;if(t.worlds&&t.worlds.length>0){h=[];for(var u=0,l=t.worlds;u<l.length;u++){var c=l[u];h=h.concat(c.levels)}}for(var d=[],f=function(t){var a=new o.MapLevel(r,t.identifier);a.worldX=t.worldX,a.worldY=t.worldY,a.worldDepth=t.worldDepth;for(var h=0,u=t.fieldInstances;h<u.length;h++){var l=u[h];a.fields[l.__identifier]=l.__value}var c=void 0;if(t.layerInstances)c=Promise.resolve(t);else{if(!t.externalRelPath)throw new Error("Unknown LDTK file format");c=i(t.externalRelPath)}d.push(c.then((function(i){return e.loadLayers(a,i.layerInstances,n,s),a.layers.length>0?(a.width=a.layers[0].width,a.height=a.layers[0].height):(a.width=t.pxWid/r.gridSize,a.height=t.pxHei/r.gridSize),r.levels[a.id]=a,a})))},p=0,m=t.levels;p<m.length;p++)f(m[p]);return Promise.all(d).then((function(t){for(var e=0,i=n;e<i.length;e++){var a=i[e];if(a.value instanceof Array){for(var o=[],h=0,u=a.value;h<u.length;h++){var l=u[h];(c=s[l])&&o.push(c)}a.entity.fields[a.field]=o}else{var c;(c=s[a.value])&&(a.entity.fields[a.field]=c)}}return r.loaded=!0,r}))}))},e.loadLayers=function(t,i,r,n){for(var o=function(i){if("Entities"===i.__type)for(var o=0,h=i.entityInstances;o<h.length;o++){var u=h[o],l=new s.MapEntity(t,u.px[0]/i.__gridSize,u.px[1]/i.__gridSize,u.width/i.__gridSize,u.height/i.__gridSize,u.__identifier);n[u.iid]=l;for(var c=0,d=u.fieldInstances;c<d.length;c++){var f=d[c];switch(f.__type){case"EntityRef":r.push({value:f.__value.entityIid,entity:l,field:f.__identifier});break;case"Array<EntityRef>":r.push({value:f.__value.map((function(t){return t.entityIid})),entity:l,field:f.__identifier});break;default:l.fields[f.__identifier]=f.__value}}t.entities.push(l)}else{var p=e.LAYER_COMPRESSIONS.find((function(t){return t.from===i.__identifier})),m=void 0,g=0;if(p){var _=t.layerByName[p.to];if(!_)throw"Unable to find compression layer: "+p.to;m=_,g=p.offset}else m=new a.MapLayer(t,i.__identifier,i.__cWid,i.__cHei);for(var v=t.world.tilesets.find((function(t){return t.uid===i.__tilesetDefUid})),y=v.pxWid/v.tileGridSize,w=v.tileGridSize,b=0,x=i.gridTiles;b<x.length;b++){var k=x[b],S=Math.floor(k.px[0]/i.__gridSize)+Math.floor(k.px[1]/i.__gridSize)*m.width,E=Math.floor(k.src[0]/w),C=Math.floor(k.src[1]/w)*y+E;m.tiles[S]=C+1+g,m.flips[S]=k.f}p||(t.layers.splice(0,0,m),t.layerByName[m.name]=m)}},h=0,u=i;h<u.length;h++)o(u[h])},e.LAYER_COMPRESSIONS=[],e}(i(449).MapWorld);e.LDTKWorld=h},963:function(t,e){"use strict";var i=this&&this.__assign||function(){return(i=Object.assign||function(t){for(var e,i=1,r=arguments.length;i<r;i++)for(var n in e=arguments[i])Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t}).apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0}),e.MapEntity=void 0;var r=function(){function t(t,e,i,r,n,s){this.fields={},this.level=t,this.x=e,this.y=i,this.width=r,this.height=n,this.type=s}return t.prototype.copy=function(e){var r=new t(e,this.x,this.y,this.width,this.height,this.type);return r.fields=i({},this.fields),r},t}();e.MapEntity=r},850:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.MapLayer=void 0;var i=function(){function t(t,e,i,r){this.name=e,this.level=t,this.width=i,this.height=r,this.tiles=[],this.flips=[];for(var n=0;n<this.width*this.height;n++)this.tiles.push(0),this.flips.push(0)}return t.prototype.getFlipFlags=function(t,e){if(t<0||e<0||t>=this.width||e>=this.height)return 0;var i=t+e*this.width;return this.flips[i]},t.prototype.set=function(t,e,i){if(!(t<0||e<0||t>=this.width||e>=this.height)){var r=t+e*this.width;this.tiles[r]=i}},t.prototype.get=function(t,e){if(t<0||e<0||t>=this.width||e>=this.height)return 0;var i=t+e*this.width;return this.tiles[i]},t.prototype.copy=function(e){for(var i=new t(e,this.name,this.width,this.height),r=0;r<this.width*this.height;r++)i.tiles[r]=this.tiles[r],i.flips[r]=this.flips[r];return i},t.FLIP_X=1,t.FLIP_Y=2,t}();e.MapLayer=i},7:function(t,e,i){"use strict";var r=this&&this.__assign||function(){return(r=Object.assign||function(t){for(var e,i=1,r=arguments.length;i<r;i++)for(var n in e=arguments[i])Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t}).apply(this,arguments)};Object.defineProperty(e,"__esModule",{value:!0}),e.MapLevel=void 0;var n=i(449),s=function(){function t(t,e){this.layers=[],this.layerByName={},this.entities=[],this.fields={},this.worldX=0,this.worldY=0,this.worldDepth=0,this.world=t,this.id=e}return t.prototype.entitiesOfType=function(t){return this.entities.filter((function(e){return e.type===t}))},t.prototype.firstEntityOfType=function(t){return this.entities.find((function(e){return e.type===t}))},t.prototype.copy=function(e){var i=new n.MapWorld;i.gridSize=this.world.gridSize,i.loaded=this.world.loaded,i.tilesetScanline=this.world.tilesetScanline,i.tilesetSize=this.world.tilesetSize;var s=new t(i,e);s.width=this.width,s.height=this.height,s.worldX=this.worldX,s.worldY=this.worldY,s.worldDepth=this.worldDepth,s.fields=r({},this.fields);for(var a=0,o=this.layers;a<o.length;a++){var h=o[a].copy(s);s.layers.push(h),s.layerByName[h.name]=h}for(var u=0,l=this.entities;u<l.length;u++)h=l[u].copy(s),s.entities.push(h);return s},t}();e.MapLevel=s},449:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.MapWorld=void 0;e.MapWorld=function(){this.levels={},this.gridSize=0,this.tilesetScanline=0,this.tilesetSize=0,this.loaded=!1}},418:(t,e,i)=>{"use strict";i.r(e),i.d(e,{xbr2x:()=>S,xbr3x:()=>E,xbr4x:()=>C});const r=255,n=65280,s=16711680,a=4278190080;function o(t){const e=t&r,i=(t&n)>>8,a=(t&s)>>16;return[.299*e+.587*i+.114*a,-.168736*e+-.331264*i+.5*a,.5*e+-.418688*i+-.081312*a]}function h(t,e,i){const r=(t&a)>>24&255,n=(e&a)>>24&255;if(0===r&&0===n)return 0;if(!i&&(r<255||n<255))return 1e6;if(0===r||0===n)return 1e6;const s=o(t),h=o(e);return 48*Math.abs(s[0]-h[0])+7*Math.abs(s[1]-h[1])+6*Math.abs(s[2]-h[2])}function u(t,e,i){const r=(t&a)>>24&255,n=(e&a)>>24&255;if(0===r&&0===n)return!0;if(!i&&(r<255||n<255))return!1;if(0===r||0===n)return!1;const s=o(t),h=o(e);return!(Math.abs(s[0]-h[0])>48||Math.abs(s[1]-h[1])>7||Math.abs(s[2]-h[2])>6)}function l(t,e,i,o){const h=(t&a)>>24&255,u=(e&a)>>24&255;let l,c,d,f;return 0===h?(l=e&r,c=(e&n)>>8,d=(e&s)>>16):0===u?(l=t&r,c=(t&n)>>8,d=(t&s)>>16):(l=(o*(e&r)+i*(t&r))/(i+o),c=(o*((e&n)>>8)+i*((t&n)>>8))/(i+o),d=(o*((e&s)>>16)+i*((t&s)>>16))/(i+o)),f=(o*u+i*h)/(i+o),~~l|~~c<<8|~~d<<16|~~f<<24}function c(t,e,i,r,n){let s=e-1;s<0&&(s=0);let a=e-2;a<0&&(a=0);let o=e+1;o>=r&&(o=r-1);let h=e+2;h>=r&&(h=r-1);let u=i-1;u<0&&(u=0);let l=i-2;l<0&&(l=0);let c=i+1;c>=n&&(c=n-1);let d=i+2;return d>=n&&(d=n-1),[t[s+l*r],t[e+l*r],t[o+l*r],t[a+u*r],t[s+u*r],t[e+u*r],t[o+u*r],t[h+u*r],t[a+i*r],t[s+i*r],t[e+i*r],t[o+i*r],t[h+i*r],t[a+c*r],t[s+c*r],t[e+c*r],t[o+c*r],t[h+c*r],t[s+d*r],t[e+d*r],t[o+d*r]]}function d(t,e,i,r,n,s,a,o,h,u,l){const d=c(t,e,i,r,n),[f,p,m,g,_,v,y,b,x,k,S,E,C,T,O,I,A,z,R,P,D]=d;let U,M,L,B;U=M=L=B=S,[M,L,B]=w(S,A,I,E,O,y,k,v,C,z,P,D,M,L,B,u,l),[U,B,M]=w(S,y,E,v,A,_,I,k,p,m,C,b,U,B,M,u,l),[L,M,U]=w(S,_,v,k,y,O,E,I,x,g,p,f,L,M,U,u,l),[B,U,L]=w(S,O,k,I,_,A,v,E,P,R,x,T,B,U,L,u,l),s[a+o*h]=U,s[a+1+o*h]=M,s[a+(o+1)*h]=L,s[a+1+(o+1)*h]=B}function f(t,e,i,r,n,s,a,o,h,u,l){const d=c(t,e,i,r,n),[f,p,m,g,_,v,y,w,x,k,S,E,C,T,O,I,A,z,R,P,D]=d;let U,M,L,B,N,F,j,W,H;U=M=L=B=N=F=j=W=H=S,[L,F,j,W,H]=b(S,A,I,E,O,y,k,v,C,z,P,D,L,F,j,W,H,u,l),[U,M,H,F,L]=b(S,y,E,v,A,_,I,k,p,m,C,w,U,M,H,F,L,u,l),[j,B,L,M,U]=b(S,_,v,k,y,O,E,I,x,g,p,f,j,B,L,M,U,u,l),[H,W,U,B,j]=b(S,O,k,I,_,A,v,E,P,R,x,T,H,W,U,B,j,u,l),s[a+o*h]=U,s[a+1+o*h]=M,s[a+2+o*h]=L,s[a+(o+1)*h]=B,s[a+1+(o+1)*h]=N,s[a+2+(o+1)*h]=F,s[a+(o+2)*h]=j,s[a+1+(o+2)*h]=W,s[a+2+(o+2)*h]=H}function p(t,e,i,r,n,s,a,o,h,u,l){const d=c(t,e,i,r,n),[f,p,m,g,_,v,y,w,b,k,S,E,C,T,O,I,A,z,R,P,D]=d;let U,M,L,B,N,F,j,W,H,Z,K,X,G,V,Y,q;U=M=L=B=N=F=j=W=H=Z=K=X=G=V=Y=q=S,[q,Y,X,B,W,K,V,G]=x(S,A,I,E,O,y,k,v,C,z,P,D,q,Y,X,B,W,K,V,G,u,l),[B,W,L,U,M,j,X,q]=x(S,y,E,v,A,_,I,k,p,m,C,w,B,W,L,U,M,j,X,q,u,l),[U,M,N,G,H,F,L,B]=x(S,_,v,k,y,O,E,I,b,g,p,f,U,M,N,G,H,F,L,B,u,l),[G,H,V,q,Y,Z,N,U]=x(S,O,k,I,_,A,v,E,P,R,b,T,G,H,V,q,Y,Z,N,U,u,l),s[a+o*h]=U,s[a+1+o*h]=M,s[a+2+o*h]=L,s[a+3+o*h]=B,s[a+(o+1)*h]=N,s[a+1+(o+1)*h]=F,s[a+2+(o+1)*h]=j,s[a+3+(o+1)*h]=W,s[a+(o+2)*h]=H,s[a+1+(o+2)*h]=Z,s[a+2+(o+2)*h]=K,s[a+3+(o+2)*h]=X,s[a+(o+3)*h]=G,s[a+1+(o+3)*h]=V,s[a+2+(o+3)*h]=Y,s[a+3+(o+3)*h]=q}function m(t,e,i){return i?l(t,e,7,1):t}function g(t,e,i){return i?l(t,e,3,1):t}function _(t,e,i){return i?l(t,e,1,1):t}function v(t,e,i){return i?l(t,e,1,3):e}function y(t,e,i){return i?l(t,e,1,7):e}function w(t,e,i,r,n,s,a,o,l,c,d,f,p,m,y,w,b){if(t==i||t==r)return[p,m,y];let x=h(t,s,b)+h(t,n,b)+h(e,d,b)+h(e,l,b)+(h(i,r)<<2),k=h(i,a,b)+h(i,f,b)+h(r,c,b)+h(r,o,b)+(h(t,e,b)<<2),S=h(t,r,b)<=h(t,i,b)?r:i;if(x<k&&(!u(r,o,b)&&!u(i,a,b)||u(t,e,b)&&!u(r,c,b)&&!u(i,f,b)||u(t,n,b)||u(t,s,b))){let e=h(r,n,b),u=h(i,s,b),l=t!=s&&o!=s,c=t!=n&&a!=n;if(e<<1<=u&&c||e>=u<<1&&l){if(e<<1<=u&&c){let t=function(t,e,i,r){return[v(t,i,r),g(e,i,r)]}(y,m,S,w);y=t[0],m=t[1]}if(e>=u<<1&&l){let t=function(t,e,i,r){return[v(t,i,r),g(e,i,r)]}(y,p,S,w);y=t[0],p=t[1]}}else y=function(t,e,i){return _(t,e,i)}(y,S,w)}else x<=k&&(y=g(y,S,w));return[p,m,y]}function b(t,e,i,r,n,s,a,o,l,c,d,f,p,w,b,x,k,S,E){if(t==i||t==r)return[p,w,b,x,k];const C=h(t,s,E)+h(t,n,E)+h(e,d,E)+h(e,l,E)+(h(i,r,E)<<2),T=h(i,a,E)+h(i,f,E)+h(r,c,E)+h(r,o,E)+(h(t,e,E)<<2);let O;if(O=C<T&&(!u(r,o,E)&&!u(r,s,E)||!u(i,a,E)&&!u(i,n,E)||u(t,e,E)&&(!u(r,l,E)&&!u(r,c,E)||!u(i,d,E)&&!u(i,f,E))||u(t,n,E)||u(t,s,E)),O){const e=h(r,n,E),u=h(i,s,E),l=t!=s&&o!=s,c=t!=n&&a!=n,d=h(t,r,E)<=h(t,i,E)?r:i;e<<1<=u&&c&&e>=u<<1&&l?[x,w,b,p,k]=function(t,e,i,r,n,s,a){const o=v(t,s,a),h=g(i,s,a);return[o,o,h,h,s]}(x,0,b,0,0,d,S):e<<1<=u&&c?[x,w,b,k]=function(t,e,i,r,n,s){return[v(t,n,s),g(e,n,s),g(i,n,s),n]}(x,w,b,0,d,S):e>=u<<1&&l?[w,x,p,k]=function(t,e,i,r,n,s){return[v(t,n,s),g(e,n,s),g(i,n,s),n]}(w,x,p,0,d,S):[k,w,x]=function(t,e,i,r,n){return[y(t,r,n),m(e,r,n),m(i,r,n)]}(k,w,x,d,S)}else C<=T&&(k=_(k,h(t,r,E)<=h(t,i,E)?r:i,S));return[p,w,b,x,k]}function x(t,e,i,r,n,s,a,o,l,c,d,f,p,m,y,w,b,x,k,S,E,C){if(t==i||t==r)return[p,m,y,w,b,x,k,S];const T=h(t,s,C)+h(t,n,C)+h(e,d,C)+h(e,l,C)+(h(i,r,C)<<2),O=h(i,a,C)+h(i,f,C)+h(r,c,C)+h(r,o,C)+(h(t,e,C)<<2),I=h(t,r,C)<=h(t,i,C)?r:i;if(T<O&&(!u(r,o,C)&&!u(i,a,C)||u(t,e,C)&&!u(r,c,C)&&!u(i,f,C)||u(t,n,C)||u(t,s,C))){const e=h(r,n,C),u=h(i,s,C),l=t!=s&&o!=s,c=t!=n&&a!=n;e<<1<=u&&c||e>=u<<1&&l?(e<<1<=u&&c&&([p,m,y,k,S,x]=function(t,e,i,r,n,s,a,o){return[a,a,v(i,a,o),v(r,a,o),g(n,a,o),g(s,a,o)]}(0,0,y,k,S,x,I,E)),e>=u<<1&&l&&([p,m,y,w,b,x]=function(t,e,i,r,n,s,a,o){return[a,v(e,a,o),a,g(r,a,o),v(n,a,o),g(s,a,o)]}(0,m,0,w,b,x,I,E))):[p,m,y]=function(t,e,i,r,n){return[r,_(e,r,n),_(i,r,n)]}(0,m,y,I,E)}else T<=O&&(p=_(p,I,E));return[p,m,y,w,b,x,k,S]}function k(t){let e=!0,i=!1;return t&&(!1===t.blendColors&&(e=!1),!0===t.scaleAlpha&&(i=!0)),{blendColors:e,scaleAlpha:i}}function S(t,e,i,r){const{blendColors:n,scaleAlpha:s}=k(r),a=new Uint32Array(e*i*4);for(let r=0;r<e;r++)for(let o=0;o<i;o++)d(t,r,o,e,i,a,2*r,2*o,2*e,n,s);return a}function E(t,e,i,r){const{blendColors:n,scaleAlpha:s}=k(r),a=new Uint32Array(e*i*9);for(let r=0;r<e;r++)for(let o=0;o<i;o++)f(t,r,o,e,i,a,3*r,3*o,3*e,n,s);return a}function C(t,e,i,r){const{blendColors:n,scaleAlpha:s}=k(r),a=new Uint32Array(e*i*16);for(let r=0;r<e;r++)for(let o=0;o<i;o++)p(t,r,o,e,i,a,4*r,4*o,4*e,n,s);return a}}},e={};function i(r){var n=e[r];if(void 0!==n)return n.exports;var s=e[r]={exports:{}};return t[r].call(s.exports,s,s.exports,i),s.exports}i.d=(t,e)=>{for(var r in e)i.o(e,r)&&!i.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var r={};return(()=>{"use strict";var t=r;Object.defineProperty(t,"__esModule",{value:!0}),t.SoundEasing=t.SoundScape=t.MapEntity=t.MapLayer=t.MapLevel=t.MapWorld=t.LDTKWorld=t.Step=t.Path=t.AStarPathFinder=t.Keys=t.BLUE=t.RED=t.GREEN=t.BLACK=t.WHITE=t.setPrescaleTilesets=t.setSoundOn=t.setMusicOn=t.isSoundOn=t.isMusicOn=t.startGame=void 0;var e=i(634);Object.defineProperty(t,"startGame",{enumerable:!0,get:function(){return e.startGame}}),Object.defineProperty(t,"isMusicOn",{enumerable:!0,get:function(){return e.isMusicOn}}),Object.defineProperty(t,"isSoundOn",{enumerable:!0,get:function(){return e.isSoundOn}}),Object.defineProperty(t,"setMusicOn",{enumerable:!0,get:function(){return e.setMusicOn}}),Object.defineProperty(t,"setSoundOn",{enumerable:!0,get:function(){return e.setSoundOn}}),Object.defineProperty(t,"setPrescaleTilesets",{enumerable:!0,get:function(){return e.setPrescaleTilesets}});var n=i(876);Object.defineProperty(t,"WHITE",{enumerable:!0,get:function(){return n.WHITE}}),Object.defineProperty(t,"BLACK",{enumerable:!0,get:function(){return n.BLACK}}),Object.defineProperty(t,"GREEN",{enumerable:!0,get:function(){return n.GREEN}}),Object.defineProperty(t,"RED",{enumerable:!0,get:function(){return n.RED}}),Object.defineProperty(t,"BLUE",{enumerable:!0,get:function(){return n.BLUE}});var s=i(705);Object.defineProperty(t,"Keys",{enumerable:!0,get:function(){return s.Keys}});var a=i(883);Object.defineProperty(t,"AStarPathFinder",{enumerable:!0,get:function(){return a.AStarPathFinder}});var o=i(482);Object.defineProperty(t,"Path",{enumerable:!0,get:function(){return o.Path}});var h=i(844);Object.defineProperty(t,"Step",{enumerable:!0,get:function(){return h.Step}});var u=i(181);Object.defineProperty(t,"LDTKWorld",{enumerable:!0,get:function(){return u.LDTKWorld}});var l=i(449);Object.defineProperty(t,"MapWorld",{enumerable:!0,get:function(){return l.MapWorld}});var c=i(7);Object.defineProperty(t,"MapLevel",{enumerable:!0,get:function(){return c.MapLevel}});var d=i(850);Object.defineProperty(t,"MapLayer",{enumerable:!0,get:function(){return d.MapLayer}});var f=i(963);Object.defineProperty(t,"MapEntity",{enumerable:!0,get:function(){return f.MapEntity}});var p=i(403);Object.defineProperty(t,"SoundScape",{enumerable:!0,get:function(){return p.SoundScape}}),Object.defineProperty(t,"SoundEasing",{enumerable:!0,get:function(){return p.SoundEasing}})})(),r})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,